{"version":3,"sources":["homeComponents/images/Carousel-1.jpg","homeComponents/images/Carousel-2.jpg","homeComponents/images/Carousel-3.jpg","homeComponents/images/Card-1.jpg","homeComponents/images/Card-2.jpg","homeComponents/images/Card-3.jpg","homeComponents/images/Card-4.jpg","homeComponents/CarouselComponent.js","homeComponents/CardComponent.js","home/Home.js","actions/authActions.js","logIn/Login.js","signUp/Signup.js","protectedRoute/ProtectedRoute.js","actions/testActions.js","dashboard/TestCard.js","dashboard/ResultCard.js","dashboard/Dashboard.js","Teacher/Dashboard/Classes.js","actions/classesActions.js","Teacher/Dashboard/AssignedTests.js","Teacher/Dashboard/Dashboard.js","homeComponents/SearchBox.js","attemptTest/TestList.js","attemptTest/SelectTest.js","actions/selectActions.js","attemptTest/AttemptTest.js","Roles/roles.js","navbar/LeftMenu.js","navbar/index.js","result/TestList.js","result/SelectTest.js","result/ResultWrapper.js","TestInstructions/TestInstruction.js","result/ShowResult.js","actions/attemptTestActions.js","testPreview/Counter.js","testPreview/LeftSide.js","testPreview/RightSide.js","testPreview/Footer.js","testPreview/HandleLiveTest.js","testPreview/TestPreview.js","testPreview/TestPreviewWrapper.js","profile/Profile.js","Teacher/CreateTest/Rules.js","Teacher/CreateTest/Questions.js","Teacher/CreateTest/RenderData.js","actions/TeacherActions.js","Teacher/CreateTest/CreateTest.js","Teacher/AssigenedTest/TestList.js","Teacher/AssigenedTest/SelectTest.js","Teacher/AssigenedTest/AssignedTestsWrapper.js","Teacher/TestStatus/StudentStatus.js","Teacher/TestStatus/TestStatus.js","App/App.js","reducers/authReducer.js","reducers/testReducer.js","reducers/selectReducer.js","reducers/attemptedTestReducer.js","reducers/classesReducer.js","reducers/teacherReducer.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","CarouselComponent","style","display","width","padding","Carousel","Item","interval","className","src","Carousel1","alt","height","Caption","Carousel2","Carousel3","CardComponent","CardGroup","Card","Img","variant","Card1","Body","Title","Text","Footer","Card2","Card3","Card4","Home","Component","signupError","errMess","type","openLoginErrorNotification","notification","open","message","description","duration","signUpUser","values","dispatch","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","token","user","catch","error","console","log","connect","state","isAuthenticated","auth","isLoading","sendLoginRequest","Authorization","localStorage","getItem","profileID","setItem","payload","loginUser","props","history","useHistory","Typography","useEffect","push","bg","justify","align","xs","sm","md","lg","name","initialValues","remember","onFinish","onFinishFailed","errorInfo","rules","required","placeholder","Password","textAlign","fontWeight","marginBottom","to","minWidth","loading","htmlType","accountCreated","sendSignUpRequest","sendUserAccountCreated","useState","showSelect","setShowSelect","Option","Select","defaultValue","onSelect","select","optionData","value","disabled","ProtectedRoute","this","component","userInfo","pathname","React","testSubmitted","testID","fetchAttemptTests","a","tests","obj","fetchTests","isLoadingTest","test","classID","studentClassName","trimLength","length","slice","reverse","map","index","key","testName","Array","fill","item","i","Avatar","active","size","shape","Input","isLoadingAttemptedTest","attemptedTest","backgroundColor","gutter","xl","classesList","classesData","classes","fetchClasses","filteredDupicates","filter","v","findIndex","t","receiveClasses","individualClass","fetchTeacherTests","Dashboard","Search","SearchBox","searchTerm","setSearchTerm","handleListData","toLowerCase","onSearch","onChange","e","target","enterButton","TestList","setTests","searchTests","setSearchTests","searching","setSearching","heading","selectRef","selectedData","handleSelectTest","classList","remove","currentTarget","add","includes","onClick","handleSelectedTest","selectedTest","testData","Roles","useBreakpoint","Grid","signOut","setisAuthenticated","location","useLocation","role","homeRoute","dashboard","testRoute","resultRoute","signOutRoute","profileRoute","createTestRoute","assignedTestRoute","mode","removeItem","Navbar","current","visible","showDrawer","setState","onClose","title","placement","closable","replace","selectedTestData","testRules","confirm","Modal","outOfMarks","questions","minutes","category","attempted","_id","rule","icon","ExclamationCircleOutlined","content","onOk","onCancel","selectedTestResultData","marks","rightAnswers","submitMinutes","totalMarks","totalAttempt","date","testInfo","correct","wrong","submitDate","Date","toLocaleDateString","percent","Math","floor","status","chartType","loader","options","pieHole","rootProps","updateTimeSpentByStudent","completed","totalTime","updatingAttemptedMinutes","parseInt","subtractTime","attemptedTime","abs","testStatus","time","Counter","totalMinutes","parse","remainingTime","rM","count","hideDay","onEnd","handleCounter","LeftSide","changeBg","activatedQue","answered","footerClicked","accordionContent","flagQuestion","setFlag","questionsData","undefined","activateQue","leftActiveQue","nextProps","nextState","flag","footerClick","flagClicked","question","ref","handleQuestionClick","handleClick","RightSide","handleClearResponse","newSelectedAnswers","selectedAnswers","blankClearAttempt","questionAnswered","changeActivatedQueInChild","changeActivatedQue","changeParentActivatedQue","submitTest","dataToSubmit","userAnswers","answers","firstName","lastName","unanswered","element","changeIndex","questionIndex","apply","onRef","radioStyle","lineHeight","Group","option","CloseOutlined","postedData","submitBy","handleNext","handleFooterButtons","handleSubmitTest","HandleLiveTest","changeActivatedQueFromFooter","child","triggerFlag","submitTestOnCounterEnd","buttonClicked","updatedUserAnswers","totalAnswered","totalPending","changed","totalScore","totalFlagged","counterEnd","click","updateTimer","TestPreview","intervalId","timer","clickChild","loadData","intervalID","setInterval","bind","clearInterval","tM","userAttemptedTime","isSelected","Object","keys","Profile","submitForm","email","phone","section","xxl","margin","readonly","Rules","setRule","submitInput","addRule","Questions","questionDescripiton","setQuestionDescripiton","opiton1","setOption1","opiton2","setOption2","opiton3","setOption3","opiton4","setOption4","answer","setAnswer","TextArea","questionData","addQuestion","min","max","RenderData","ruleData","clickedRule","fontSize","CreateTest","sendData","teacherId","teacherID","testCreated","handleSelect","handleDeleteRule","Removeindex","handleDeleteQuestion","openNotification","testCreatedFalse","teacher","assignedTests","fetchAssignedTests","StudentStatus","student","percentage","toUpperCase","selectedAssignedTestData","students","selectedTestName","selectedAssignedTestName","setCount","window","addEventListener","preventDefault","success","exact","path","Login","Signup","TeacherDashboard","StudentDashboard","AttemptTest","Result","IndividualResult","TestInstruction","TestPreviewWrapper","AssignedTestsWrapper","TestStatus","initialState","isLoggingIn","isSigningUp","isLoggingOut","isVerifying","loginError","logoutError","sendPassResetSuccess","sendPassResetError","isFetching","fetchingError","isFetched","testSubmitError","isFetchingError","initializeTimer","isFetchError","combineReducers","action","verifyingError","fetchError","isfetched","allEnhancers","compose","applyMiddleware","thunk","store","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAAAA,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,ghBCO5B,SAASC,IACxB,OACC,yBAAKC,MAAO,CAAEC,QAAS,QAASC,MAAO,OAAQC,QAAS,KACxD,kBAACC,EAAA,EAAD,KACC,kBAACA,EAAA,EAASC,KAAV,CAAeC,SAAU,MACzB,yBACCC,UAAU,qBACVC,IAAKC,IACLC,IAAI,YACJC,OAAO,SAER,kBAACP,EAAA,EAASQ,QAAV,KACC,wBAAIL,UAAU,WAAd,oBACA,uBAAGA,UAAU,eAAb,yDAGD,kBAACH,EAAA,EAASC,KAAV,CAAeC,SAAU,KACzB,yBACCC,UAAU,gBACVC,IAAKK,IACLH,IAAI,cAEL,kBAACN,EAAA,EAASQ,QAAV,KACC,wBAAIL,UAAU,WAAd,mBACA,uBAAGA,UAAU,eAAb,0DAGD,kBAACH,EAAA,EAASC,KAAV,CAAeC,SAAU,KACzB,yBACCC,UAAU,gBACVC,IAAKM,IACLJ,IAAI,cAEL,kBAACN,EAAA,EAASQ,QAAV,KACC,wBAAIL,UAAU,WAAd,mBACA,uBAAGA,UAAU,eAAb,2D,6FCjCY,SAASQ,IACxB,OACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMX,IAAKY,MAC7B,kBAACH,EAAA,EAAKI,KAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,CAAYf,UAAU,cAAtB,eACA,kBAACU,EAAA,EAAKM,KAAN,wHAKF,kBAACN,EAAA,EAAKO,OAAN,KACE,2BAAOjB,UAAU,cAAjB,6BAGJ,kBAACU,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMX,IAAKiB,MAC7B,kBAACR,EAAA,EAAKI,KAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,CAAYf,UAAU,cAAtB,oBACA,kBAACU,EAAA,EAAKM,KAAN,yGAKF,kBAACN,EAAA,EAAKO,OAAN,KACE,2BAAOjB,UAAU,cAAjB,6BAGJ,kBAACU,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMX,IAAKkB,MAC7B,kBAACT,EAAA,EAAKI,KAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,CAAYf,UAAU,cAAtB,iBACA,kBAACU,EAAA,EAAKM,KAAN,oGAIF,kBAACN,EAAA,EAAKO,OAAN,KACE,2BAAOjB,UAAU,cAAjB,6BAGJ,kBAACU,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMX,IAAKmB,MAC7B,kBAACV,EAAA,EAAKI,KAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,CAAYf,UAAU,cAAtB,oBACA,kBAACU,EAAA,EAAKM,KAAN,sEAEG,6BAFH,oCAKF,kBAACN,EAAA,EAAKO,OAAN,KACE,2BAAOjB,UAAU,cAAjB,8B,IC5CSqB,E,uKATP,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANGC,a,+ECwDbC,EAAc,SAACC,GACnB,MAAO,CACLC,KArD2B,kBAsD3BD,YA2DEE,EAA6B,WAOjCC,IAAaC,KANA,CACXC,QAAS,SACTC,YACE,gCACFC,SAAU,KAiDDC,EAAa,SAACC,GAAD,OAAY,SAACC,GACrCA,EAjIO,CACLT,KA1C2B,oBA4K7B,IAAMU,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUP,IAEvBQ,MAAM,eAAgBN,GACnBO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACDA,EAAKC,MACPZ,EAtIC,CACLT,KA/C2B,kBAgD3BsB,KAoI2BF,EAAKE,QAjDlCpB,IAAaC,KANA,CACXC,QAAS,SACTC,YACE,8CACFC,SAAU,IAwDNG,EAASX,SAGZyB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZf,EAASX,U,yBCvFf,IAYe6B,eAZS,SAACC,GACvB,MAAO,CACLC,gBAAiBD,EAAME,KAAKD,gBAC5BE,UAAWH,EAAME,KAAKC,cAGC,SAACtB,GAC1B,MAAO,CACLuB,iBAAkB,SAACxB,GAAD,OAAYC,EDuBT,SAACD,GAAD,OAAY,SAACC,GACpCA,EAnHO,CACLT,KA3ByB,kBA+I3B,IAAMU,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBqB,cAAeC,aAAaC,QAAQ,UAGtCtB,KAAMC,KAAKC,UAAUP,IAEvBQ,MAAM,cAAeN,GAClBO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GA3HU,IAACE,EAAMc,EA4HtBX,QAAQC,IAAI,WACRN,EAAKC,OACPI,QAAQC,IAAI,WACZQ,aAAaG,QAAQ,QAArB,iBAAwCjB,EAAKC,QAC7Ca,aAAaG,QAAQ,cAAevB,KAAKC,UAAUK,EAAKkB,QAAQhB,OAChEY,aAAaG,QAAQ,YAAajB,EAAKkB,QAAQF,WAC/C3B,GAlIca,EAkIQF,EAAKkB,QAAQhB,KAlIfc,EAkIqBhB,EAAKkB,QAAQF,UAjIrD,CACLpC,KAhCyB,gBAiCzBsB,OACAc,iBAiIInC,IACAQ,EA7HC,CACLT,KAvCyB,sBAsKxBuB,OAAM,SAACC,GACNvB,IACAQ,EAlIG,CACLT,KAvCyB,sBCmHcuC,CAAU/B,QAItCmB,EAlHf,SAAea,GACb,IAAMC,EAAUC,cAERX,GADUY,IAAVrD,MACckD,EAAdT,WAiCR,OAdAa,qBAAU,WACJJ,EAAMX,kBAJV3B,IAAaC,KANA,CACXC,QAAS,WACTC,YACE,0BACFC,SAAU,IAQVmC,EAAQI,KAAK,QAEd,CAACL,IAUF,oCACA,kBAAC,IAAD,CAAaxC,KAAK,SAAS8C,IAAI,IAC7B,kBAAC,IAAD,CAAKC,QAAQ,SAASC,MAAM,SAASzE,UAAU,QAC7C,kBAAC,IAAD,CAAK0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG7E,UAAU,qBAC3C,uBAAGA,UAAU,aAAb,yBAEA,kBAAC,IAAD,CACE8E,KAAK,QACLC,cAAe,CACbC,UAAU,GAEZC,SAnBS,SAAChD,GAClBgC,EAAMR,iBAAiBxB,IAmBfiD,eAhBa,SAACC,GACtBjC,QAAQC,IAAI,UAAWgC,KAiBf,kBAAC,IAAKrF,KAAN,CACEgF,KAAK,QACLM,MAAO,CACL,CACEC,UAAU,EACVxD,QAAS,8BAIb,kBAAC,IAAD,CAAOyD,YAAY,WAGrB,kBAAC,IAAKxF,KAAN,CACEgF,KAAK,WACLM,MAAO,CACL,CACEC,UAAU,EACVxD,QAAS,iCAIb,kBAAC,IAAM0D,SAAP,CAAgBD,YAAY,cAE9B,yBACEtF,UAAU,OACVP,MAAO,CACL+F,UAAW,SACXC,WAAY,IACZC,aAAc,SAGhB,kBAAC,IAAD,CAAMC,GAAG,WAAT,mCAEF,kBAAC,IAAK7F,KAAN,KACE,kBAAC,IAAD,CACE2B,KAAK,UACLzB,UAAU,WACVP,MAAO,CAAEmG,SAAU,QACnBC,QAASrC,EACTsC,SAAS,UAEPtC,EAAyB,aAAb,oB,gBC0G9B,IAceJ,eAdS,SAACC,GACvB,MAAO,CACLC,gBAAiBD,EAAME,KAAKD,gBAC5BE,UAAWH,EAAME,KAAKC,UACtBuC,eAAgB1C,EAAME,KAAKwC,mBAGJ,SAAC7D,GAC1B,MAAO,CACL8D,kBAAmB,SAAC/D,GAAD,OAAYC,EAASF,EAAWC,KACnDgE,uBAAwB,kBAAM/D,GFfE,SAACA,GACnCA,EAtFO,CACLT,KA7FgC,gCEoMrB2B,EA5Mf,SAAgBa,GAAQ,IAAD,EACeiC,oBAAS,GADxB,mBACdC,EADc,KACFC,EADE,KAGbC,GADQlC,cACGmC,IAAXD,QACA7C,EAAcS,EAAdT,UAmCR,OAfAa,qBAAU,WACJJ,EAAM8B,iBAPVpE,IAAaC,KANA,CACXC,QAAS,mBACTC,YACE,yFACFC,SAAU,IAWVkC,EAAMgC,4BAEP,CAAChC,IAWF,oCACA,kBAAC,IAAD,CAAaxC,KAAK,SAAS8C,IAAI,IAC7B,kBAAC,IAAD,CAAKC,QAAQ,SAASC,MAAM,SAASzE,UAAU,QAC7C,kBAAC,IAAD,CAAK0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG7E,UAAU,qBAC3C,uBAAGA,UAAU,qBAAb,yBACA,kBAAC,IAAD,CACE8E,KAAK,QACLC,cAAe,CACbC,UAAU,GAEZC,SA5CS,SAAChD,GAClBgC,EAAM+B,kBAAkB/D,GACxBiB,QAAQC,IAAIlB,IA2CJiD,eA9Ba,SAACC,GACtBjC,QAAQC,IAAI,UAAWgC,KA+Bf,yBAAKnF,UAAU,oBACb,kBAAC,IAAKF,KAAN,CACEgF,KAAK,YACLM,MAAO,CACL,CACEC,UAAU,EACVxD,QAAS,mCAIb,kBAAC,IAAD,CAAOyD,YAAY,gBAErB,kBAAC,IAAKxF,KAAN,CACEgF,KAAK,WACLM,MAAO,CACL,CACEC,UAAU,EACVxD,QAAS,kCAIb,kBAAC,IAAD,CAAOyD,YAAY,gBAGvB,kBAAC,IAAKxF,KAAN,CACEgF,KAAK,QACLM,MAAO,CACL,CACEC,UAAU,EACVxD,QAAS,8BAIb,kBAAC,IAAD,CAAOyD,YAAY,oBAErB,kBAAC,IAAKxF,KAAN,CACEgF,KAAK,WACLM,MAAO,CACL,CACEC,UAAU,EACVxD,QAAS,iCAIb,kBAAC,IAAM0D,SAAP,CAAgBD,YAAY,cAE9B,kBAAC,IAAKxF,KAAN,CACEgF,KAAK,QACLM,MAAO,CACL,CACEC,UAAU,EACVxD,QAAS,qCAIb,kBAAC,IAAD,CAAOJ,KAAK,MAAM6D,YAAY,gBAGhC,yBAAKtF,UAAU,oBACb,kBAAC,IAAKF,KAAN,CACEgF,KAAK,OACLM,MAAO,CACL,CACEC,UAAU,EACVxD,QAAS,6BAIb,kBAAC,IAAD,CAAQ0E,aAAa,OAAOC,SA1FrB,SAACC,EAAQC,GAC5BxD,QAAQC,IAAIuD,GACa,YAArBA,EAAWC,MACbP,GAAc,GAEdA,GAAc,KAsFF,kBAACC,EAAD,CAAQM,MAAM,WAAd,WACA,kBAACN,EAAD,CAAQM,MAAM,WAAd,aAIJ,kBAAC,IAAK7G,KAAN,CACEgF,KAAK,UACLM,MAAO,CACL,CACEvD,QAAS,gCAIb,kBAAC,IAAD,CAAQ0E,aAAa,UAAUK,SAAUT,GACvC,kBAACE,EAAD,CAAQM,MAAM,KAAd,KACA,kBAACN,EAAD,CAAQM,MAAM,KAAd,KACA,kBAACN,EAAD,CAAQM,MAAM,KAAd,KACA,kBAACN,EAAD,CAAQM,MAAM,KAAd,OAIJ,kBAAC,IAAK7G,KAAN,CACEgF,KAAK,YACLM,MAAO,CACL,CACEvD,QAAS,8BAIb,kBAAC,IAAD,CAAQ0E,aAAa,QAAQK,SAAUT,GACrC,kBAACE,EAAD,CAAQM,MAAM,KAAd,KACA,kBAACN,EAAD,CAAQM,MAAM,MAAd,MACA,kBAACN,EAAD,CAAQM,MAAM,OAAd,OACA,kBAACN,EAAD,CAAQM,MAAM,QAAd,QACA,kBAACN,EAAD,CAAQM,MAAM,MAAd,MACA,kBAACN,EAAD,CAAQM,MAAM,KAAd,KACA,kBAACN,EAAD,CAAQM,MAAM,MAAd,MACA,kBAACN,EAAD,CAAQM,MAAM,OAAd,UAIN,yBACE3G,UAAU,OACVP,MAAO,CACL+F,UAAW,SACXC,WAAY,IACZC,aAAc,SAGhB,kBAAC,IAAD,CAAMC,GAAG,UAAT,sCAEF,kBAAC,IAAK7F,KAAN,KACE,kBAAC,IAAD,CACE2B,KAAK,UACLzB,UAAU,WACV8F,SAAS,SACTD,QAASrC,GAEPA,EAAyB,mBAAb,oBCjMxBqD,E,uKAEF,IAAMvF,EAAYwF,KAAK7C,MAAM8C,UAC7B,OAAOD,KAAK7C,MAAMX,gBAChB,kBAAChC,EAAD,CAAW0F,SAAUF,KAAK7C,MAAM+C,WAEhC,kBAAC,IAAD,CAAUrB,GAAI,CAAEsB,SAAU,iB,GANHC,IAAM5F,WAiBpB8B,eANS,SAACC,GACvB,MAAO,CACLC,gBAAiBD,EAAME,KAAKD,gBAC5B0D,SAAU3D,EAAME,KAAKR,QAGe,KAAzBK,CAA+ByD,G,2CCkCxCM,GAAgB,SAACC,GACrB,MAAO,CACL3F,KAlD+B,sBAmD/B2F,OAAQA,IAWCC,GAAoB,SAACxD,GAAD,+CAAe,WAAO3B,GAAP,eAAAoF,EAAA,6DAC9CpF,EAvDO,CACLT,KAd8B,uBAsE1BU,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBqB,cAAeC,aAAaC,QAAQ,WAPM,SAWxCnB,MAAM,0BAAD,OAA2BoB,GAAa1B,GAChDO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACM,IAAD,EAANA,IACwB,uBAAlB,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMI,aAAN,eAAa6B,MACf5C,GJyHsB,SAACA,GAC/BA,EA3IO,CACLT,KAzD0B,mBAoM5BS,EAtIO,CACLT,KA9D0B,sBI0EpBS,EAxBD,CACLT,KA5DsC,6BA6DtC8F,MAsBmC1E,EAAK2E,UAIvCxE,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZf,EAjEG,CACLT,KAxB8B,0BAgEc,2CAAf,uDA4BpBgG,GAAa,SAACzH,GAAD,+CAAe,WAAOkC,GAAP,eAAAoF,EAAA,6DACvCpF,EAnFO,CACLT,KAd8B,uBAkG1BU,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBqB,cAAeC,aAAaC,QAAQ,WAPD,SAWjCnB,MAAM,kBAAD,OAAmBzC,GAAamC,GACxCO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAU,IAAD,EACY,uBAAlB,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMI,aAAN,eAAa6B,MACf5C,GJ8FwB,SAACA,GAC/BA,EA3IO,CACLT,KAzD0B,mBAoM5BS,EAtIO,CACLT,KA9D0B,sBIqGtBS,EA7FC,CACLT,KAnB8B,qBAoB9B8F,MA2F0B1E,EAAK2E,SAG9BxE,OAAM,SAACC,GACNC,QAAQC,IAAIF,MArBuB,2CAAf,uD,UC7B1B,IAYeG,gBAZS,SAACC,GACvB,MAAO,CACLG,UAAWH,EAAMkE,MAAMG,cACvBH,MAAOlE,EAAMkE,MAAMI,SAGI,SAACzF,GAC1B,MAAO,CACLuF,WAAY,SAACG,GAAD,OAAa1F,EAASuF,GAAWG,QAIlCxE,EAxEf,SAAkBa,GAAQ,IAClBsD,EAAmDtD,EAAnDsD,MAAO/D,EAA4CS,EAA5CT,UAAWqE,EAAiC5D,EAAjC4D,iBAAkBC,EAAe7D,EAAf6D,WAS1C,OARIP,IACFA,EACEA,EAAMQ,OAASD,EAAaP,EAAMS,OAAOF,GAAYG,UAAYV,GAErElD,qBAAU,WACRJ,EAAMwD,WAAWI,KAChB,IAGD,oCACE,yBAAK7H,UAAU,4BACb,uBAAGA,UAAU,sBAAb,4BAIF,yBAAKA,UAAU,eACXwD,GAAa+D,EACb,wBAAIvH,UAAU,wBACXuH,EAAMW,KAAI,SAACP,EAAMQ,GAAP,OACT,kBAAC,IAAD,CAAMxC,GAAG,gBAAgByC,IAAKD,GAC5B,wBAAInI,UAAU,oBACZ,yBAAKA,UAAU,eACb,uBAAGA,UAAU,yBAAyBmI,EAAQ,IAEhD,yBAAKnI,UAAU,eAAf,IAA+B2H,EAAKU,UACpC,yBAAKrI,UAAU,cACb,kBAAC,IAAD,aAOV,yBAAKA,UAAU,YACZsI,MAAMR,GACJS,OACAL,KAAI,SAACM,EAAMC,GAAP,OACH,yBAAKzI,UAAU,kBAAkBoI,IAAKK,GACpC,kBAAC,KAASC,OAAV,CACE1I,UAAU,iBACV2I,QAAQ,EACRC,KAAK,UACLC,MAAM,WAER,kBAAC,KAASC,MAAV,CACE9I,UAAU,gBACV2I,QAAQ,EACRC,KAAK,sBCiBzB,IAaexF,gBAbS,SAACC,GACvB,MAAO,CACLG,UAAWH,EAAMkE,MAAMwB,uBACvBxB,MAAOlE,EAAMkE,MAAMyB,cACnBnF,UAAWR,EAAME,KAAKM,cAGC,SAAC3B,GAC1B,MAAO,CACLuF,WAAY,SAAC5D,GAAD,OAAe3B,EAASmF,GAAkBxD,QAI3CT,EA/Ef,SAAoBa,GAAQ,IACpBsD,EAA4CtD,EAA5CsD,MAAO/D,EAAqCS,EAArCT,UAAWK,EAA0BI,EAA1BJ,UAAWiE,EAAe7D,EAAf6D,WAUnC,OATIP,IACFA,EACEA,EAAMQ,OAASD,EAAaP,EAAMS,OAAOF,GAAYG,UAAYV,GAErElD,qBAAU,WACRJ,EAAMwD,WAAW5D,GACjBX,QAAQC,IAAI,WACX,IAGD,oCACE,yBAAKnD,UAAU,gBACb,uBAAGA,UAAU,sBAAb,6BAIF,yBAAKA,UAAU,eACXwD,GAAa+D,EACb,wBAAIvH,UAAU,wBACXuH,EAAMW,KAAI,SAACP,EAAMQ,GAAP,OACT,kBAAC,IAAD,CAAMxC,GAAG,UAAUyC,IAAKD,GACtB,wBAAInI,UAAU,oBACZ,yBAAKA,UAAU,eACb,uBACEA,UAAU,cACVP,MAAO,CAAEwJ,gBAAiB,YAEzBd,EAAQ,IAGb,yBAAKnI,UAAU,cAAf,IAA8B2H,EAAKU,UACnC,yBAAKrI,UAAU,cACb,kBAAC,IAAD,aAOV,yBAAKA,UAAU,YACZsI,MAAMR,GACJS,OACAL,KAAI,SAACM,EAAMC,GAAP,OACH,yBAAKzI,UAAU,kBAAkBoI,IAAKK,GACpC,kBAAC,KAASC,OAAV,CACE1I,UAAU,iBACV2I,QAAQ,EACRC,KAAK,UACLC,MAAM,WAER,kBAAC,KAASC,MAAV,CACE9I,UAAU,gBACV2I,QAAQ,EACRC,KAAK,sBClCzB,IAOexF,gBAPS,SAACC,GACvB,MAAO,CACLwE,iBAAkBxE,EAAME,KAAKR,KAAOM,EAAME,KAAKR,KAAK/C,UAAY,KAChE6D,UAAWR,EAAME,KAAKR,KAAOM,EAAME,KAAKR,KAAKc,UAAY,QAIrB,KAAzBT,EA9Bf,SAAmBa,GAAQ,IACjB4D,EAA0C5D,EAA1C4D,iBAGR,OAHkD5D,EAAxBJ,UAAwBI,EAAb+C,SAInC,oCACE,yBAAKhH,UAAW,uBACd,kBAAC,IAAD,CAAKkJ,OAAQ,CAAC,GAAI,IAAK1E,QAAQ,UAC7B,kBAAC,IAAD,CAAKxE,UAAU,aAAa0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGuE,GAAI,GACrD,kBAAC,GAAD,CACEtB,iBAAkBA,EAClBC,WATO,KAYX,kBAAC,IAAD,CAAK9H,UAAU,aAAa0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGuE,GAAI,GACrD,kBAAC,GAAD,CAAYrB,WAbH,W,OCkErB,IAae1E,gBAbS,SAACC,GACvB,MAAO,CACLG,UAAWH,EAAMkE,MAAMG,cACvBH,MAAOlE,EAAMkE,MAAMI,KACnByB,YAAa/F,EAAMgG,YAAYC,YAGR,SAACpH,GAC1B,MAAO,CACLqH,aAAc,kBAAMrH,GC1DgB,SAACA,GACvCA,EAnBO,CACLT,KANiC,0BA0BnC,IAAMU,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBqB,cAAeC,aAAaC,QAAQ,WAGxCnB,MAAM,mBAAoBN,GACvBO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAU,IAAD,EACd,GAA0B,uBAAlB,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMI,aAAN,eAAa6B,MACf5C,GTuKwB,SAACA,GAC/BA,EA3IO,CACLT,KAzD0B,mBAoM5BS,EAtIO,CACLT,KA9D0B,0BS2BjB,CACL,IAAM+H,EAAoB3G,EAAK2E,IAAIiC,QACjC,SAACC,EAAGjB,EAAGnB,GAAP,OAAaA,EAAEqC,WAAU,SAACC,GAAD,OAAOA,EAAE5J,YAAc0J,EAAE1J,eAAeyI,KAEnEvG,EAhCe,SAACW,GACtB,MAAO,CACLpB,KAXiC,wBAYjCoB,QA6BagH,CAAeL,QAG3BxG,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZf,EA7BG,CACLT,KAjBiC,oCDmFtB2B,EA/Ef,SAAiBa,GAAQ,IACjBmF,EAAkEnF,EAAlEmF,YAAa5F,EAAqDS,EAArDT,UAA6BsE,GAAwB7D,EAA1C4D,iBAA0C5D,EAAxB6D,YAYhD,OAZwE7D,EAAZqF,QACxDF,IACFA,EACEA,EAAYrB,OAASD,EACjBsB,EAAYpB,OAAOF,GAAYG,UAC/BmB,GAER/E,qBAAU,WACRJ,EAAMsF,iBACL,IACHrG,QAAQC,IAAIc,GAGV,oCACE,yBAAKjE,UAAU,4BACb,uBAAGA,UAAU,sBAAb,uBAIF,yBAAKA,UAAU,eACXwD,GAAa4F,EACb,wBAAIpJ,UAAU,wBACXoJ,EAAYlB,KAAI,SAAC4B,EAAiB3B,GAAlB,OACf,kBAAC,IAAD,CAAMxC,GAAG,iBAAiByC,IAAKD,GAC7B,wBAAInI,UAAU,oBACZ,yBAAKA,UAAU,eACb,uBAAGA,UAAU,yBAAyBmI,EAAQ,IAEhD,yBAAKnI,UAAU,eACZ,IADH,WAEW8J,EAAgB9J,WAE3B,yBAAKA,UAAU,cACb,kBAAC,IAAD,aAOV,yBAAKA,UAAU,YACZsI,MAAMR,GACJS,OACAL,KAAI,SAACM,EAAMC,GAAP,OACH,yBAAKzI,UAAU,kBAAkBoI,IAAKK,GACpC,kBAAC,KAASC,OAAV,CACE1I,UAAU,iBACV2I,QAAQ,EACRC,KAAK,UACLC,MAAM,WAER,kBAAC,KAASC,MAAV,CACE9I,UAAU,gBACV2I,QAAQ,EACRC,KAAK,sBEWzB,IAaexF,gBAbS,SAACC,GACvB,MAAO,CACLG,UAAWH,EAAMkE,MAAMG,cACvBH,MAAOlE,EAAMkE,MAAMI,KACnB9D,UAAWR,EAAME,KAAKM,cAGC,SAAC3B,GAC1B,MAAO,CACLuF,WAAY,SAAC5D,GAAD,OAAe3B,ENqGE,SAAC2B,GAAD,+CAAe,WAAO3B,GAAP,eAAAoF,EAAA,6DAC9CpF,EAxJO,CACLT,KAxBsC,+BAiLlCU,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBqB,cAAeC,aAAaC,QAAQ,WAPM,SAWxCnB,MAAM,kBAAD,OAAmBoB,GAAa1B,GACxCO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACM,IAAD,EAANA,IACwB,uBAAlB,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMI,aAAN,eAAa6B,MACf5C,GJMsB,SAACA,GAC/BA,EA3IO,CACLT,KAzD0B,mBAoM5BS,EAtIO,CACLT,KA9D0B,sBI6LpBS,EAnKD,CACLT,KA7BsC,6BA8BtC8F,MAiKmC1E,EAAK2E,UAIvCxE,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZf,EAlKG,CACLT,KAnCsC,kCA4KM,2CAAf,sDMrGOsI,CAAkBlG,QAI3CT,EA/Ef,SAAuBa,GAAQ,IACvBsD,EAA4CtD,EAA5CsD,MAAO/D,EAAqCS,EAArCT,UAAWK,EAA0BI,EAA1BJ,UAAWiE,EAAe7D,EAAf6D,WAUnC,OATIP,IACFA,EACEA,EAAMQ,OAASD,EAAaP,EAAMS,OAAOF,GAAYG,UAAYV,GAErElD,qBAAU,WACRJ,EAAMwD,WAAW5D,GACjBX,QAAQC,IAAI,WACX,IAGD,oCACE,yBAAKnD,UAAU,yBACb,uBAAGA,UAAU,+BAAb,4BAIF,yBAAKA,UAAU,eACXwD,GAAa+D,EACb,wBAAIvH,UAAU,wBACXuH,EAAMW,KAAI,SAACP,EAAMQ,GAAP,OACT,kBAAC,IAAD,CAAMxC,GAAG,iBAAiByC,IAAKD,GAC7B,wBAAInI,UAAU,oBACZ,yBAAKA,UAAU,eACb,uBAAGA,UAAU,mCACVmI,EAAQ,IAGb,yBAAKnI,UAAU,cACZ,IACA2H,EAAKU,SAFR,YAE2BV,EAAK3H,WAEhC,yBAAKA,UAAU,cACb,kBAAC,IAAD,aAOV,yBAAKA,UAAU,YACZsI,MAAMR,GACJS,OACAL,KAAI,SAACM,EAAMC,GAAP,OACH,yBAAKzI,UAAU,kBAAkBoI,IAAKK,GACpC,kBAAC,KAASC,OAAV,CACE1I,UAAU,iBACV2I,QAAQ,EACRC,KAAK,UACLC,MAAM,WAER,kBAAC,KAASC,MAAV,CACE9I,UAAU,gBACV2I,QAAQ,EACRC,KAAK,sBCvCVoB,OAnBf,SAAmB/F,GAGjB,OACE,oCACE,yBAAKjE,UAAU,uBACb,kBAAC,IAAD,CAAKkJ,OAAQ,CAAC,GAAI,IAAK1E,QAAQ,UAC7B,kBAAC,IAAD,CAAKxE,UAAU,aAAa0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGuE,GAAI,GACrD,kBAAC,GAAD,CAAerB,WAPN,KASX,kBAAC,IAAD,CAAK9H,UAAU,aAAa0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGuE,GAAI,GACrD,kBAAC,GAAD,CAASrB,WAVA,SCJbmC,I,OAAWnB,IAAXmB,QACO,SAASC,GAAUjG,GAAQ,IAAD,EACHiC,mBAAS,IADN,mBAChCiE,EADgC,KACpBC,EADoB,KAGvC/F,qBAAU,WACRJ,EAAMoG,eAAeF,EAAWG,iBAC/B,CAACH,IASJ,OACE,oCACE,yBAAKnK,UAAU,iBACb,kBAACiK,GAAD,CACE3E,YAAY,oBACZiF,SATS,SAAC5D,GAChBzD,QAAQC,IAAIwD,IASN6D,SAbmB,SAACC,GAC1BL,EAAcK,EAAEC,OAAO/D,QAajBgE,aAAW,MClBN,SAASC,GAAS3G,GAC/B,IAAMC,EAAUC,cADsB,EAEZ+B,mBAAS,IAFG,mBAE/BqB,EAF+B,KAExBsD,EAFwB,OAGA3E,mBAAS,IAHT,mBAG/B4E,EAH+B,KAGlBC,EAHkB,OAIJ7E,mBAAS,IAJL,mBAI/B8E,EAJ+B,KAIpBC,EAJoB,KAKhCC,EAAUjH,EAAMiH,QAEtB7G,qBAAU,WACRwG,EAAS5G,EAAMsD,MAAMU,aACpB,CAAChE,IAEJ,IAUIkH,EACFC,EAAe,GAOXC,EAAmB,SAACZ,EAAGtC,GACvBgD,GACFA,EAAUG,UAAUC,OAAO,kBAE7BJ,EAAYV,EAAEe,cACdf,EAAEe,cAAcF,UAAUG,IAAI,kBAC9BL,EAAe7D,EAAMY,IAGvB,OACE,oCACE,yBAAKnI,UAAU,yBACb,uBAAGA,UAAU,0BAA0BkL,GACvC,yBAAKlL,UAAU,6BACb,uBAAGA,UAAU,wBAAb,eACC,kBAACkK,GAAD,CAAWG,eAjCG,SAACF,GACH,KAAfA,EAAmBc,EAAad,IAElCc,GAAa,GACbF,EACExD,EAAMkC,QAAO,SAAC9B,GAAD,OAAUA,EAAKU,SAASiC,cAAcoB,SAASvB,WA6BzC,GAAhB5C,EAAMQ,QACL,yBAAK/H,UAAU,eAAf,qBAIDuH,EAAMQ,OAAS,GAChB,yBAAK/H,UAAU,uBACb,uBAAGA,UAAU,0CAAb,eAGA,yBAAKA,UAAU,sBACZuH,EAAMQ,OAAS,EACA,KAAdiD,EACEF,EAAY5C,KAAI,SAACP,EAAMQ,GAAP,OACd,yBACEC,IAAKD,EACLnI,UAAS,gBACT2L,QAAS,SAAClB,GACRY,EAAiBZ,EAAGtC,KAGtB,uBAAGnI,UAAU,eAAeoI,IAAKD,GAC9BR,EAAKU,UAER,yBAAKrI,UAAU,cACb,uBAAGA,UAAU,cAAb,qCAGA,uBAAGA,UAAU,YAAb,2CAONuH,EAAMW,KAAI,SAACP,EAAMQ,GAAP,OACR,yBACEC,IAAKD,EACLnI,UAAS,gBACT2L,QAAS,SAAClB,GACRY,EAAiBZ,EAAGtC,KAGtB,uBAAGnI,UAAU,eAAeoI,IAAKD,GAC9BR,EAAKU,UAER,yBAAKrI,UAAU,cACb,uBAAGA,UAAU,cAAb,qCAGA,uBAAGA,UAAU,YAAb,2CAQR,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,2BACb,kBAAC,KAAS0I,OAAV,CACE1I,UAAU,yBACV2I,QAAQ,EACRC,KAAK,UACLC,MAAM,WAER,kBAAC,KAASC,MAAV,CACE9I,UAAU,wBACV2I,QAAQ,EACRC,KAAK,aAGT,yBAAK5I,UAAU,2BACb,kBAAC,KAAS0I,OAAV,CACE1I,UAAU,yBACV2I,QAAQ,EACRC,KAAK,UACLC,MAAM,WAER,kBAAC,KAASC,MAAV,CACE9I,UAAU,wBACV2I,QAAQ,EACRC,KAAK,aAGT,yBAAK5I,UAAU,2BACb,kBAAC,KAAS0I,OAAV,CACE1I,UAAU,yBACV2I,QAAQ,EACRC,KAAK,UACLC,MAAM,WAER,kBAAC,KAASC,MAAV,CACE9I,UAAU,wBACV2I,QAAQ,EACRC,KAAK,iBASlBrB,EAAMQ,OAAS,GAChB,yBAAK/H,UAAU,kBACb,kBAAC,IAAD,CAAQyB,KAAK,UAAUkK,QA/HL,WACxB1H,EAAM2H,mBAAmBR,GACzBlH,EAAQI,KAAK,wBA6HP,eC9HV,IAcelB,gBAdS,SAACC,GACvB,MAAO,CACLkE,MAAOlE,EAAMkE,MAAMI,KACnB9D,UAAWR,EAAME,KAAKM,cAGC,SAAC3B,GAC1B,MAAO,CACLuF,WAAY,SAACG,GAAD,OAAa1F,EAASuF,GAAWG,KAC7CP,kBAAmB,SAACxD,GAAD,OAAe3B,EAASmF,GAAkBxD,KAC7DgI,aAAc,SAACC,GAAD,OAAa5J,GCfFW,EDewBiJ,ECff,SAAC5J,GACrCA,EApBO,CACLT,KANyB,gBAOzBqK,SAkBkBjJ,OADM,IAACA,MDmBdO,EAtCf,SAAoBa,GAAQ,IAClBsD,EAAuCtD,EAAvCsD,MAAOM,EAAgC5D,EAAhC4D,iBAAkBhE,EAAcI,EAAdJ,UAWjC,OALAQ,qBAAU,WACRJ,EAAMwD,WAAWI,GACjB5D,EAAMoD,kBAAkBxD,KACvB,IAGD,oCACE,yBAAK7D,UAAU,2BACd,kBAAC4K,GAAD,CACCrD,MAAOA,EACP2D,QAfU,iBAgBVU,mBAfoB,SAACE,GACvB7H,EAAM4H,aAAaC,WESzB,IAMe1I,gBANS,SAACC,GACvB,MAAO,CACLwE,iBAAkBxE,EAAME,KAAKR,KAAOM,EAAME,KAAKR,KAAK/C,UAAY,QAI5B,KAAzBoD,EArBf,SAAqBa,GAAQ,IACnB4D,EAAqB5D,EAArB4D,iBACR,OACE,oCACE,yBAAK7H,UAAU,uBACb,kBAAC,IAAD,CAAKkJ,OAAQ,CAAC,GAAI,IAAK1E,QAAQ,UAC7B,kBAAC,IAAD,CAAKxE,UAAU,aAAa0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIuE,GAAI,IACtD,kBAAC,GAAD,CAAYtB,iBAAkBA,W,oBCZ7BkE,GACA,UCOLC,GAAkBC,KAAlBD,cAmGO5I,gBAZS,SAACC,GACvB,MAAO,CACLC,gBAAiBD,EAAME,KAAKD,gBAC5B0D,SAAU3D,EAAME,KAAKR,SAGE,SAACb,GAC1B,MAAO,CACLgK,QAAS,kBAAMhK,GlBuGa,SAACA,GAC/BA,EA3IO,CACLT,KAzD0B,mBAoM5BS,EAtIO,CACLT,KA9D0B,0BkB8Ff2B,EAjGE,SAACa,GAAW,IAAD,EACoBiC,oBAAS,GAD7B,mBACnB5C,EADmB,KACF6I,EADE,KAEpBC,EAAWC,cAEXC,EAAOrI,EAAM+C,SAASsF,KAE5BjI,qBAAU,WACR8H,EAAmBlI,EAAMX,mBACxB,CAACW,IAEJ,IASQW,EAAOoH,KAAPpH,GACF2H,EAAYjJ,EAAkB,IAAM,SACpCkJ,EAAYlJ,EAAkB,aAAe,SAC7CmJ,EAAYnJ,EAAkB,gBAAkB,GAChDoJ,EAAcpJ,EAAkB,UAAY,GAC5CqJ,EAAerJ,EAAkB,UAAY,GAC7CsJ,EAAetJ,EAAkB,WAAa,GAC9CuJ,EAAkBvJ,EAAkB,eAAiB,GACrDwJ,EAAoBxJ,EAAkB,iBAAmB,GAEzD7D,EAAO,CACXC,QAA8B,gBAApB0M,EAASnF,SAA2B,OAAS,SAGzD,OACE,yBAAKjH,UAAU,OAAOP,MAAOA,GAC3B,kBAAC,KAAD,CAAMsN,KAAMnI,EAAK,aAAe,UAC9B,kBAAC,KAAK9E,KAAN,CAAWsI,IAAI,MACb,kBAAC,IAAD,CAASzC,GAAI4G,GACVjJ,EAAkB,OAAS,YAGhC,kBAAC,KAAKxD,KAAN,CAAWsI,IAAI,MACb,kBAAC,IAAD,CAASzC,GAAI6G,GACVlJ,EAAkB,YAAc,WAGrC,kBAAC,KAAKxD,KAAN,CAAWsI,IAAI,KAAKpI,UAAYsD,EAAmC,GAAjB,gBAChD,kBAAC,IAAD,CAASqC,GAAIoG,KAAkBO,EAAOO,EAAkBJ,GACrDnJ,EACGyI,KAAkBO,EAChB,cACA,eACF,KAGR,kBAAC,KAAKxM,KAAN,CAAWsI,IAAI,KAAKpI,UAAYsD,EAAmC,GAAjB,gBAChD,kBAAC,IAAD,CACEqC,GAAIoG,KAAkBO,EAAOQ,EAAoBJ,GAEhDpJ,EACGyI,KAAkBO,EAChB,gBACA,SACF,KAGR,kBAAC,KAAKxM,KAAN,CAAWsI,IAAI,KAAKpI,UAAYsD,EAAmC,GAAjB,gBAChD,kBAAC,IAAD,CAASqC,GAAIiH,EAAcjB,QAlDb,cAmDXrI,EAAkB,UAAY,MAIrC,yBAAKtD,UAAU,cACb,kBAAC,IAAD,CACE2F,GAAIgH,EACJhB,QAjEQ,WACdhI,aAAaqJ,WAAW,SACxBrJ,aAAaqJ,WAAW,eACxBrJ,aAAaqJ,WAAW,aACxB/I,EAAMiI,WA8DAlM,UAAYsD,EAA2C,UAAzB,wBAE7BA,EAAkB,WAAa,S,UCjFpC2J,I,mNACJ5J,MAAQ,CACN6J,QAAS,OACTC,SAAS,G,EAEXC,WAAa,WACX,EAAKC,SAAS,CACZF,SAAS,K,EAIbG,QAAU,WACR,EAAKD,SAAS,CACZF,SAAS,K,uDAOX,OAFAjK,QAAQC,IAAI2D,KAAK7C,MAAM+C,UAGrB,yBAAKhH,UAAU,WACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAS2F,GAAG,KAAZ,0BAIF,yBAAK3F,UAAU,WACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAQA,UAAU,WAAWyB,KAAK,UAAUkK,QAAS7E,KAAKsG,YACxD,0BAAMpN,UAAU,aAElB,kBAAC,KAAD,CACEuN,MAAM,OACNC,UAAU,QACVC,UAAU,EACVH,QAASxG,KAAKwG,QACdH,QAASrG,KAAKzD,MAAM8J,SAEpB,kBAAC,GAAD,CAAUb,KAAMxF,KAAK7C,e,GAzCZ3C,cAqDN8B,gBALS,SAACC,GACvB,MAAO,CACL2D,SAAU3D,EAAME,KAAKR,QAGe,KAAzBK,CAA+B6J,I,OCtD/B,SAASrC,GAAS3G,GAC/B,IAAMC,EAAUC,cADsB,EAEZ+B,mBAAS,IAFG,mBAE/BqB,EAF+B,KAExBsD,EAFwB,OAGA3E,mBAAS,IAHT,mBAG/B4E,EAH+B,KAGlBC,EAHkB,OAIJ7E,mBAAS,IAJL,mBAI/B8E,EAJ+B,KAIpBC,EAJoB,KAKhCC,EAAUjH,EAAMiH,QAEtB7G,qBAAU,WACRwG,EAAS5G,EAAMsD,MAAMU,aACpB,CAAChE,IAEJ,IAUIkH,EACFC,EAAe,GAWXC,EAAmB,SAACZ,EAAGtC,GACvBgD,GACFA,EAAUG,UAAUC,OAAO,kBAE7BJ,EAAYV,EAAEe,cACdf,EAAEe,cAAcF,UAAUG,IAAI,kBAC9BL,EAAe7D,EAAMY,IAGvB,OACE,oCACE,yBAAKnI,UAAU,yBACb,uBAAGA,UAAU,0BAA0BkL,GACvC,yBAAKlL,UAAU,6BACb,uBAAGA,UAAU,wBAAb,eACC,kBAACkK,GAAD,CAAWG,eArCG,SAACF,GACH,KAAfA,EAAmBc,EAAad,IAElCc,GAAa,GACbF,EACExD,EAAMkC,QAAO,SAAC9B,GAAD,OAAUA,EAAKU,SAASiC,cAAcoB,SAASvB,WAiCzC,GAAhB5C,EAAMQ,QACL,yBAAK/H,UAAU,eAAf,qBAIDuH,EAAMQ,OAAS,GAChB,yBAAK/H,UAAU,uBACb,uBAAGA,UAAU,0CAAb,eAGA,yBAAKA,UAAU,sBACZuH,EAAMQ,OAAS,EACA,KAAdiD,EACEF,EAAY5C,KAAI,SAACP,EAAMQ,GAAP,OACd,yBACEC,IAAKD,EACLnI,UAAS,gBACT2L,QAAS,SAAClB,GACRY,EAAiBZ,EAAGtC,KAGtB,uBAAGnI,UAAU,eAAeoI,IAAKD,GAC9BR,EAAKU,UAER,yBAAKrI,UAAU,cACb,uBAAGA,UAAU,cAAb,qCAGA,uBAAGA,UAAU,YAAb,2CAONuH,EAAMW,KAAI,SAACP,EAAMQ,GAAP,OACR,yBACEC,IAAKD,EACLnI,UAAS,gBACT2L,QAAS,SAAClB,GACRY,EAAiBZ,EAAGtC,KAGtB,uBAAGnI,UAAU,eAAeoI,IAAKD,GAC9BR,EAAKU,UAER,yBAAKrI,UAAU,cACb,uBAAGA,UAAU,cAAb,qCAGA,uBAAGA,UAAU,YAAb,2CAQR,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,2BACb,kBAAC,KAAS0I,OAAV,CACE1I,UAAU,yBACV2I,QAAQ,EACRC,KAAK,UACLC,MAAM,WAER,kBAAC,KAASC,MAAV,CACE9I,UAAU,wBACV2I,QAAQ,EACRC,KAAK,aAGT,yBAAK5I,UAAU,2BACb,kBAAC,KAAS0I,OAAV,CACE1I,UAAU,yBACV2I,QAAQ,EACRC,KAAK,UACLC,MAAM,WAER,kBAAC,KAASC,MAAV,CACE9I,UAAU,wBACV2I,QAAQ,EACRC,KAAK,aAGT,yBAAK5I,UAAU,2BACb,kBAAC,KAAS0I,OAAV,CACE1I,UAAU,yBACV2I,QAAQ,EACRC,KAAK,UACLC,MAAM,WAER,kBAAC,KAASC,MAAV,CACE9I,UAAU,wBACV2I,QAAQ,EACRC,KAAK,iBASlBrB,EAAMQ,OAAS,GAChB,yBAAK/H,UAAU,kBACb,kBAAC,IAAD,CAAQyB,KAAK,UAAUkK,QAnIL,WAAO,IAAD,EAC9B1H,EAAM2H,mBAAmBR,GACzBlH,EAAQI,KAAR,4BACa8G,EAAa/C,gBAD1B,aACa,EACPqF,QAAQ,OAAQ,KACjBpD,kBA8HC,eCnIV,IAYelH,gBAZS,SAACC,GACvB,MAAO,CACLkE,MAAOlE,EAAMkE,MAAMyB,kBAGI,SAAC9G,GAC1B,MAAO,CACLuF,WAAY,SAAC5D,GAAD,OAAe3B,EAASmF,GAAkBxD,KACtDgI,aAAc,SAACC,GAAD,OAAc5J,GNRGW,EMQyBiJ,ENRhB,SAAC5J,GAC3CA,EAjBO,CACLT,KAZgC,uBAahCqK,SAewBjJ,OADM,IAACA,MMYpBO,EAnCf,SAAoBa,GAAQ,IAClBsD,EAAqBtD,EAArBsD,MAAO1D,EAAcI,EAAdJ,UAUf,OAJAQ,qBAAU,WACRJ,EAAMwD,WAAW5D,KAChB,IAGD,oCACE,yBAAK7D,UAAU,2BACb,kBAAC,GAAD,CACAuH,MAAOA,EACP2D,QAdU,SAeVU,mBAdqB,SAACE,GAC1B7H,EAAM4H,aAAaC,WCSvB,IAMe1I,gBANS,SAACC,GACvB,MAAO,CACLQ,UAAWR,EAAME,KAAKR,KAAOM,EAAME,KAAKM,UAAY,QAIhB,KAAzBT,EArBf,SAAuBa,GAAQ,IACrBJ,EAAcI,EAAdJ,UACR,OACE,oCACE,yBAAK7D,UAAU,uBACb,kBAAC,IAAD,CAAKkJ,OAAQ,CAAC,GAAI,IAAK1E,QAAQ,UAC7B,kBAAC,IAAD,CAAKxE,UAAU,aAAa0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIuE,GAAI,IACtD,kBAAC,GAAD,CAAYtF,UAAWA,W,uCC6KnC,IAOeT,gBAPS,SAACC,GACvB,MAAO,CACLwI,aAAcxI,EAAMwI,aAAa8B,iBAChCpG,MAAOlE,EAAMkE,MAAMyB,iBAIgB,KAAzB5F,EAxLf,SAAyBa,GAAQ,IAAD,EAe1B2J,EAdE1J,EAAUC,cACR0J,EAAYC,KAAZD,QACAtG,EAAStD,EAATsD,MAHsB,EAa1BtD,EAAM4H,aARRkC,EAL4B,EAK5BA,WACAC,EAN4B,EAM5BA,UACAC,EAP4B,EAO5BA,QACAC,EAR4B,EAQ5BA,SAEA7F,GAV4B,EAS5BrI,UAT4B,EAU5BqI,UACAjD,EAX4B,EAW5BA,MAIa+I,GAfe,EAY5BC,KAGuB,GA4BzB,OA1BIhJ,IACFwI,EAAYxI,GAIdmC,EAAMW,KAAI,SAACP,EAAMQ,GACZR,EAAKU,WAAaA,IACnB8F,GAAU,MAoBZ,oCACE,yBAAKnO,UAAU,uBACb,kBAAC,IAAD,CAAKkJ,OAAQ,CAAC,GAAI,IAAK1E,QAAQ,UAC7B,kBAAC,IAAD,CAAKxE,UAAU,aAAa0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIuE,GAAI,IACtD,yBAAKnJ,UAAU,yBACb,kBAAC,IAAD,CAAKwE,QAAQ,UACX,kBAAC,IAAD,CAAKxE,UAAU,aAAa0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIuE,GAAI,IACtD,yBAAKnJ,UAAU,+BACb,uBAAGA,UAAU,yBAAb,qBACA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,gBAAf,cACA,yBAAKA,UAAU,uBAAuBqI,IAGxC,yBAAKrI,UAAU,qBACb,yBAAKA,UAAU,gBAAf,oBACA,yBAAKA,UAAU,uBAAf,OACGgO,QADH,IACGA,OADH,EACGA,EAAWjG,SAIhB,yBAAK/H,UAAU,qBACb,yBAAKA,UAAU,gBAAf,mBACA,yBAAKA,UAAU,uBACZiO,EADH,aAKF,yBAAKjO,UAAU,qBACb,yBAAKA,UAAU,gBAAf,aACA,yBAAKA,UAAU,uBAAuBkO,IAGxC,yBAAKlO,UAAU,qBACb,yBAAKA,UAAU,gBAAf,gBACA,yBAAKA,UAAU,uBAAuB+N,KAG1C,yBAAK/N,UAAU,sBACb,uBAAGA,UAAU,kCAAb,gBAGA,yBAAKA,UAAU,gBAAf,UACG4N,SADH,aACG,EAAW1F,KAAI,SAACmG,EAAMlG,GAAP,OACd,uBAAGnI,UAAU,OAAOoI,IAAKD,GACvB,kBAAC,KAAD,MAAuB,IACvB,0BAAMnI,UAAU,qBACbqO,EAAK1H,eAQpB,kBAAC,IAAD,CAAK3G,UAAU,aAAa0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIuE,GAAI,IACtD,yBAAKnJ,UAAU,gCACb,uBAAGA,UAAU,qCAAb,sBAGA,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,gCACb,kBAAC,IAAD,CACEP,MAAO,CAAEwJ,gBAAiB,WAC1BjJ,UAAU,oBAFZ,QAMA,uBAAGA,UAAU,uBAAb,sEAKF,yBAAKA,UAAU,gCACb,kBAAC,IAAD,CACEP,MAAO,CAAEwJ,gBAAiB,WAC1BjJ,UAAU,oBAFZ,YAMA,uBAAGA,UAAU,uBAAb,kFAKF,yBAAKA,UAAU,gCACb,kBAAC,IAAD,CACEP,MAAO,CAAEwJ,gBAAiB,WAC1BjJ,UAAU,oBAFZ,QAMA,uBAAGA,UAAU,uBAAb,gEAIF,yBAAKA,UAAU,gCACb,kBAAC,IAAD,CACEP,MAAO,CAAEwJ,gBAAiB,WAC1BjJ,UAAU,oBAFZ,YAMA,uBAAGA,UAAU,uBAAb,+DAKHmO,GAAa,yBAAKnO,UAAU,4BAAf,wCAId,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CACEyB,KAAK,UACLkK,QApII,WACxBkC,EAAQ,CACNN,MAAO,iCACPe,KAAM,kBAACC,GAAA,EAAD,MACNC,QAAS,2CACTC,KAJM,WAKJvL,QAAQC,IAAI,MACZe,EAAQI,KAAK,gBAEfoK,SARM,WASJxL,QAAQC,IAAI,cA2HIyD,SAAUuH,GAHZ,wB,uCC5CtB,IAMe/K,gBANS,SAACC,GACvB,MAAO,CACLwI,aAAcxI,EAAMwI,aAAa8C,0BAIG,KAAzBvL,EA1Hf,SAAoBa,GAAQ,IAGtB2K,EAEFC,EACAC,EACAC,EAEAC,EATuB,EACE/K,EAAM4H,aAAzBxD,EADiB,EACjBA,SAAU4G,EADO,EACPA,KACZC,EAAWjL,EAAM4H,aAAa,GAShCqD,IACFN,EAAQM,EAASC,QACjBN,EAAeK,EAASC,QACxBL,EAAgBI,EAASJ,cACzBC,EAAaG,EAASH,WAEtBC,EAAeH,IADAK,EAASE,OAG1B,IAAMC,EAAa,IAAIC,KAAKL,GAC5B,OACE,oCACE,yBAAKjP,UAAU,uBACb,kBAAC,IAAD,CAAKkJ,OAAQ,CAAC,GAAI,IAAK1E,QAAQ,UAC7B,kBAAC,IAAD,CAAKxE,UAAU,aAAa0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIuE,GAAI,IACtD,yBAAKnJ,UAAU,mBACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,sBAAf,eACA,yBAAKA,UAAU,6BAA6BqI,IAE9C,yBAAKrI,UAAU,mBACb,yBAAKA,UAAU,sBAAf,gBACA,yBAAKA,UAAU,6BACZ8O,GAAgC,KADnC,aAIF,yBAAK9O,UAAU,mBACb,yBAAKA,UAAU,sBAAf,uBACuB,KAEvB,yBAAKA,UAAU,6BACZqP,EAAWE,mBAAmB,YAIrC,kBAAC,KAAD,MACA,yBAAKvP,UAAU,yBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,uBAAf,cACA,kBAAC,KAAD,CACEwP,QAASC,KAAKC,MAAOd,EAAQG,EAAc,KAC3CY,OAAO,YAGX,yBAAK3P,UAAU,eACb,yBAAKA,UAAU,gBACb,kBAAC,KAAD,CACEL,MAAO,OACPS,OAAQ,OACRwP,UAAU,WACVC,OAAQ,8CACRhN,KAAM,CACJ,CAAC,OAAQ,iBACT,CAAC,UAAW+L,EAAQ,IACpB,CAAC,QAASG,EAAa,GAAKH,EAAQ,KAEtCkB,QAAS,CACPvC,MAAO,qBACPwC,QAAS,KAEXC,UAAW,CAAE,cAAe,QAGhC,yBAAKhQ,UAAU,SACb,wBAAIA,UAAU,WAAd,SACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mBACZ4O,EADH,MACaG,MAKnB,yBAAK/O,UAAU,aACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,uBAAf,cACcgP,EAAc,KAE5B,kBAAC,KAAD,CACEQ,QAASC,KAAKC,MAAOV,EAAeD,EAAc,KAClDY,OAAO,aAIb,yBAAK3P,UAAU,sBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,uBAAf,oBACoB6O,GAEpB,kBAAC,KAAD,CACEW,QAASC,KAAKC,MAAOb,EAAeE,EAAc,KAClDY,OAAO,uB,UCpFlBM,GAA2B,SAAChO,GAAD,OAAY,SAACC,GACnDA,EAnBO,CACLT,KANuC,gCAuBuB,IAG9DoC,EAME5B,EANF4B,UACAwE,EAKEpG,EALFoG,SACA6H,EAIEjO,EAJFiO,UACSC,EAGPlO,EAHFgM,QACK7G,EAEHnF,EAFFmM,IACAgC,EACEnO,EADFmO,yBAGFA,EAC+B,IAA7BA,EAAiCA,EAA2B,EAC9DlN,QAAQC,IAAIkN,SAASD,IACrB,IAAIE,EAC0B,GAA5BF,EAAgCC,SAASF,GAAaE,SAAS,GAM3DxN,EAAO,CAAEgB,YAAWwE,WAAU6H,YAAWK,cAJ3Bd,KAAKe,IACvBF,EAAeD,SAASD,EAA2B,IAGSD,aAC9DjN,QAAQC,IAAI+M,EAAWC,EAAWtN,EAAK0N,eAEvC,IAAMpO,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBqB,cAAeC,aAAaC,QAAQ,UAGtCtB,KAAMC,KAAKC,UAAUK,IAGvBJ,MAAM,+BAAD,OAAgC2E,GAAUjF,GAC5CO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACM,IAAD,EAANA,IACwB,uBAAlB,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMI,aAAN,eAAa6B,MACf5C,GzB+IsB,SAACA,GAC/BA,EA3IO,CACLT,KAzD0B,mBAoM5BS,EAtIO,CACLT,KA9D0B,uByBoDpBoB,EAAK2E,IAAIiJ,WAAWvI,KAAI,SAACP,EAAMQ,GACzBR,EAAKP,SAAWA,GAClBzD,aAAaG,QAAQsD,EAAQO,EAAK4I,kBAItCrN,QAAQC,IAAIN,EAAK2E,KACjBtF,EA5DD,CACLT,KAXuC,8BAYvCiP,KA0DsC/M,aAAaC,QAAQwD,UAI1DpE,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZf,EA3DG,CACLT,KAjBuC,qC,qBCA5B,SAASkP,GAAQ1M,GAAQ,IAElCyM,EADItJ,EAAyBnD,EAAzBmD,OAAQwJ,EAAiB3M,EAAjB2M,aAEhB,GAAqD,MAAjDrO,KAAKsO,MAAMlN,aAAaC,QAAb,UAAwBwD,KACrCsJ,EAAgC,GAAzBL,SAASO,OACX,CACL,IACIE,EADavO,KAAKsO,MAAMlN,aAAaC,QAAb,UAAwBwD,KACvB2J,GAC7BL,EAAOL,SAAyB,GAAhBS,GAMlB,OACE,oCACE,kBAAC,KAAD,CAAgBE,MAAON,EAAMO,SAAS,EAAMC,MANxB,WACtBjN,EAAMkN,oB,WCZWC,G,kDACnB,WAAYnN,GAAQ,IAAD,8BACjB,cAAMA,IAkBRoN,SAAW,SAACC,EAAcC,EAAUC,GAC9B,EAAKnO,MAAM8H,YACb,EAAK9H,MAAM8H,UAAUG,UAAUC,OAAO,YACtB,GAAZgG,GACF,EAAKlO,MAAM8H,UAAUG,UAAUC,OAAO,aAGtC,EAAKkG,iBAAiBH,IACxB,EAAKG,iBAAiBH,GAAchG,UAAUG,IAAI,YAChD8F,GAA6B,GAAjBC,GACd,EAAKC,iBAAiBH,GAAchG,UAAUG,IAAI,YAEpD,EAAK4B,SAAS,CACZlC,UAAW,EAAKsG,iBAAiBH,MAhClB,EAuDnBI,aAAe,WACb,EAAKrO,MAAM8H,UAAUG,UAAUG,IAAI,YAxDlB,EA8DnBkG,QAAU,WACR,EAAKtO,MAAM8H,UAAUG,UAAUG,IAAI,aA7DnC,EAAKgG,iBAAmB,GACxB,EAAKpO,MAAQ,CACXuO,cAAe,GACfzG,eAAW0G,EACXC,YAAa,EACbC,cAAe,GAPA,E,kEAmCGC,EAAWC,GAC/B,OACED,IAAclL,KAAK7C,OACnB+N,EAAUF,aAAehL,KAAK7C,MAAM6N,eAG3BE,EAAU7G,YAAcrE,KAAK7C,MAAMkH,YAEnC6G,EAAUE,OAASpL,KAAK7C,MAAMiO,OAGvCpL,KAAKuK,SACHW,EAAUF,YACVE,EAAUT,SACVS,EAAUG,cAGL,O,0CAOTrL,KAAK7C,MAAMmO,YAAYtL,KAAK4K,gB,+BAOpB,IAAD,OAeP,OACE,oCACE,yBAAK1R,UAAU,sBACZ8G,KAAKzD,MAAMuO,eACV9K,KAAKzD,MAAMuO,cAAc1J,KAAI,SAACmK,EAAUlK,GAAX,OAC3B,yBACEnI,UAAS,WACTsS,IAAK,SAACA,GAAD,OAAU,EAAKb,iBAAiBtJ,GAASmK,GAC9C3G,QAAS,SAAClB,GAAD,OAtBD,SAACA,EAAGtC,GAClB,EAAK9E,MAAM8H,WACb,EAAK9H,MAAM8H,UAAUG,UAAUC,OAAO,YAGxC,EAAK8B,SAAS,CACZlC,UAAW,EAAKsG,iBAAiBtJ,GACjC4J,cAAe5J,IAEjB,EAAKsJ,iBAAiBtJ,GAAOmD,UAAUG,IAAI,YAE3C,EAAKxH,MAAMsO,oBAAoBpK,GAWLqK,CAAY/H,EAAGtC,IAC/BC,IAAKD,GAEJA,IAAS,W,gDAjFQlE,EAAOZ,GACrC,MAAO,CACLuO,cAAe3N,EAAM2N,cACrBE,YAAa7N,EAAM6N,YACnBK,YAAalO,EAAMkO,iB,GAhBa7Q,a,oBCKhCmR,G,kDACJ,WAAYxO,GAAQ,IAAD,8BACjB,cAAMA,IAoBRyO,oBAAsB,SAACvK,GACrB,IAAIwK,EAAqB,EAAKtP,MAAMuP,gBACpC1P,QAAQC,IAAIwP,EAAmBxK,IAC/B,IAAI0K,OAC4BhB,IAA9Bc,EAAmBxK,GAErBwK,EAAmBxK,QAAS0J,EAC5B,EAAKxE,SAAS,CACZuF,gBAAiBD,IAEnB,EAAK1O,MAAMyO,oBAAoBvK,EAAO0K,IA/BrB,EAiCnBrI,SAAW,SAACC,EAAGtC,GACb,IAAIwK,EAAqB,EAAKtP,MAAMuP,qBACFf,IAA9Bc,EAAmBxK,GACrB,EAAKlE,MAAM6O,iBAAiB3K,EAAOsC,EAAEC,OAAO/D,OAAO,GAEnD,EAAK1C,MAAM6O,iBAAiB3K,EAAOsC,EAAEC,OAAO/D,OAAO,GAErDgM,EAAmBxK,GAASsC,EAAEC,OAAO/D,MACrC,EAAK0G,SAAS,CACZ1G,MAAO8D,EAAEC,OAAO/D,MAChBiM,gBAAiBD,KA3CF,EAkDnBI,0BAA4B,SAACC,GACA,mBAAvBA,GACF9P,QAAQC,IAAI,aACZD,QAAQC,IAAI,EAAKE,MAAMuO,cAAc7J,OAAQ,EAAK1E,MAAMyO,aACpD,EAAKzO,MAAMyO,YAAc,EAAKzO,MAAMuO,cAAc7J,OAAS,IAC7D,EAAKsF,SAAS,CACZyE,YAAa,EAAKzO,MAAMyO,YAAc,IAExC,EAAK7N,MAAMgP,yBAAyB,EAAK5P,MAAMyO,YAAc,KAE/B,uBAAvBkB,EACL,EAAK3P,MAAMyO,YAAc,IAC3B,EAAKzE,SAAS,CACZyE,YAAa,EAAKzO,MAAMyO,YAAc,IAExC,EAAK7N,MAAMgP,yBAAyB,EAAK5P,MAAMyO,YAAc,IAE/B,mBAAvBkB,GACuB,cAAvBA,GAET,EAAK3F,SAAS,CACZyE,YAAakB,KAvEA,EA8EnBE,WAAa,WAAO,IAchBC,EAde,EASb,EAAKlP,MAPPmP,EAFe,EAEfA,YACAC,EAHe,EAGfA,QACAhL,EAJe,EAIfA,SACAjB,EALe,EAKfA,OACAvD,EANe,EAMfA,UACAyP,EAPe,EAOfA,UACAC,EARe,EAQfA,SAEEpE,EAAU,EACZC,EAAQ,EACRoE,EAAa,EACbzE,EAAasE,EAAQtL,OAGvBqL,EAAYlL,KAAI,SAACuL,EAAStL,QACR0J,IAAZ4B,EACFD,GAA0B,EACjBC,IAAYJ,EAAQlL,GAC7BiH,GAAgB,EAEhBD,GAAoB,EAEtBgE,EAAe,CACb/L,SACA+H,UACAqE,aACAzE,aACAlL,YACAwE,WACAiL,YACAC,WACAnE,YAGJ,EAAKnL,MAAMiP,WAAWC,GACtB,EAAKlP,MAAMiI,WAjHX,EAAK7I,MAAQ,CACXyO,YAAa,EACbF,cAAe,GACf8B,YAAa,EACbC,cAAe,EACff,gBAAiBtK,MAAMsL,WAAM/B,EAAWvJ,MAAM,IAC9C3B,MAAO,KACPS,OAAQ,MATO,E,gEA+CjBN,KAAK7C,MAAM4P,MAAM/M,Q,6CA6BjBA,KAAK7C,MAAM4P,WAAMhC,K,+BA0CT,IAAD,OACDiC,EAAa,CACjBpU,QAAS,QACTU,OAAQ,OACR2T,WAAY,QAGd,OACE,oCACE,yBAAK/T,UAAU,wBACb,yBAAKA,UAAU,gBAAf,YACY8G,KAAKzD,MAAMyO,YAAc,EADrC,WACgDhL,KAAKzD,MAAMuO,cAAc7J,QAExEjB,KAAKzD,MAAMuO,eACV9K,KAAKzD,MAAMuO,cAAc1J,KAAI,SAACmK,EAAUlK,GACtC,GAAI,EAAK9E,MAAMyO,cAAgB3J,EAC7B,OACE,yBAAKnI,UAAU,mBAAmBoI,IAAKD,GACrC,yBAAKnI,UAAU,eAAf,IAA+BqS,EAASvQ,aACxC,yBAAK9B,UAAU,WACb,kBAAC,KAAMgU,MAAP,CACExJ,SAAU,SAACC,GAAD,OAAO,EAAKD,SAASC,EAAGtC,IAClCxB,MAAO,EAAKtD,MAAMuP,gBAAgBzK,IAElC,kBAAC,KAAD,CAAO1I,MAAOqU,EAAYnN,MAAO,GAC9B0L,EAASvC,QAAQ,GAAGmE,QAEvB,kBAAC,KAAD,CAAOxU,MAAOqU,EAAYnN,MAAO,GAC9B0L,EAASvC,QAAQ,GAAGmE,QAEvB,kBAAC,KAAD,CAAOxU,MAAOqU,EAAYnN,MAAO,GAC9B0L,EAASvC,QAAQ,GAAGmE,QAEvB,kBAAC,KAAD,CAAOxU,MAAOqU,EAAYnN,MAAO,GAC9B0L,EAASvC,QAAQ,GAAGmE,SAGzB,yBACEjU,UAAU,kBACV2L,QAAS,kBAAM,EAAK+G,oBAAoBvK,KAEvC,kBAAC+L,GAAA,EAAD,MAJH,6B,gDA9IYjQ,EAAOZ,GACrC,MAAO,CACLuO,cAAe3N,EAAM2N,cACrB+B,cAAe1P,EAAM0P,cACrBvM,OAAQnD,EAAMmD,Y,GAlBI9F,aA4LT8B,gBAhBS,SAACC,GACvB,MAAO,CACLwI,aAAcxI,EAAMwI,aAAa8B,iBACjC9J,UAAWR,EAAME,KAAKR,KAAOM,EAAME,KAAKM,UAAY,KACpDyP,UAAWjQ,EAAME,KAAKR,KAAKuQ,UAC3BC,SAAUlQ,EAAME,KAAKR,KAAKwQ,aAIH,SAACrR,GAC1B,MAAO,CACLgR,WAAY,SAACrQ,GAAD,OAAUX,ExBpEA,SAACW,GAAD,+CAAU,WAAOX,GAAP,uCAAAoF,EAAA,6DAEhCF,EASEvE,EATFuE,OACA+H,EAQEtM,EARFsM,QACAqE,EAOE3Q,EAPF2Q,WACAzE,EAMElM,EANFkM,WACAlL,EAKEhB,EALFgB,UACAwE,EAIExF,EAJFwF,SACAiL,EAGEzQ,EAHFyQ,UACAC,EAEE1Q,EAFF0Q,SACAnE,EACEvM,EADFuM,MAEItD,EAAWvJ,KAAKsO,MAAMlN,aAAaC,QAAQwD,IAC7C0H,EAAgBhD,EAASiF,GAevBoD,EAAa,CACjBC,SAfe,CACf,CACEjF,UACAqE,aACAzE,aACAlL,YACAwE,WACAiL,YACAC,WACAnE,QACAN,kBAMF1H,SACAiB,YAGIlG,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBqB,cAAeC,aAAaC,QAAQ,UAEtCtB,KAAMC,KAAKC,UAAU2R,IAxCW,SA2C5B1R,MAAM,wBAAD,OAAyB2E,GAAUjF,GAC3CO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACM,IAAD,EAANA,IACwB,uBAAlB,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMI,aAAN,eAAa6B,MACf5C,GJoCsB,SAACA,GAC/BA,EA3IO,CACLT,KAzD0B,mBAoM5BS,EAtIO,CACLT,KA9D0B,sBI+JpBS,EAASiF,GAAcC,QAI5BpE,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZf,EA/HG,CACLT,KA9C+B,2BAoHC,2CAAV,sDwBoESyR,CAAWrQ,KAC1CqJ,QAAS,kBAAMhK,G5Bea,SAACA,GAC/BA,EA3IO,CACLT,KAzD0B,mBAoM5BS,EAtIO,CACLT,KA9D0B,0B4BsLf2B,CAA6CqP,ICjMvCxR,G,4MACnBoT,WAAa,SAAC5J,GACZ,EAAKxG,MAAMqQ,oBAAoB7J,EAAEe,cAAcF,UAAU,K,EAE3D4H,WAAa,WACX,EAAKjP,MAAMsQ,oB,uDAEH,IAAD,OACP,OACE,oCACE,yBAAKvU,UAAU,mBACb,yBAAKA,UAAU,gBACb,yBACEA,UAAU,yBACV2L,QAAS,SAAClB,GAAD,OAAO,EAAK4J,WAAW5J,KAFlC,YAMA,yBACEzK,UAAU,qBACV2L,QAAS,SAAClB,GAAD,OAAO,EAAK4J,WAAW5J,KAFlC,QAMA,yBACEzK,UAAU,qBACV2L,QAAS,SAAClB,GAAD,OAAO,EAAK4J,WAAW5J,KAFlC,SAOF,yBAAKzK,UAAU,iBACb,yBAAKA,UAAU,gBAAgB2L,QAAS7E,KAAKoM,YAA7C,mB,GAhCwB5R,aCO9BkT,G,kDACJ,WAAYvQ,GAAQ,IAAD,8BACjB,cAAMA,IAkCRwQ,6BAA+B,SAACzB,GACH,mBAAvBA,GACF,EAAK3F,SAAS,CACZ8E,aAAa,IAEf,EAAKuC,MAAM3B,0BAA0BC,KAErC,EAAK2B,cACD,EAAKtR,MAAM6O,MAAQ,EAAK7O,MAAMuO,cAAc7J,QAC9C,EAAKsF,SAAS,CACZ6E,KAAM,EAAK7O,MAAM6O,KAAO,MA7Cb,EAkDnBqC,iBAAmB,WACjB,EAAKG,MAAMxB,cAnDM,EAqDnBD,yBAA2B,SAAC9K,GAC1B,EAAKkF,SAAS,CACZyE,YAAa3J,EACbgK,aAAa,KAxDE,EA2DnByC,uBAAyB,WACvB,EAAKL,oBA5DY,EA+DnBD,oBAAsB,SAACO,GACrB,EAAKJ,6BAA6BI,IAhEjB,EAmEnBnC,oBAAsB,SAACvK,EAAO0K,GAC5B,IAAKA,EAAmB,CACtB,IAAIiC,EAAqB,EAAKzR,MAAM+P,YACpC0B,EAAmB3M,QAAS0J,EAC5B,EAAKxE,SAAS,CACZ0H,cAAe,EAAK1R,MAAM0R,cAAgB,EAC1CC,aAAc,EAAK3R,MAAM2R,aAAe,EACxC5B,YAAa0B,EACbhD,YAAa3J,EACbgK,aAAa,EACbZ,UAAU,MA7EG,EAiFnBuB,iBAAmB,SAAC3K,EAAO8L,EAAQgB,GACjC,GAAKA,EAWE,CACL,IAAIH,EAAqB,EAAKzR,MAAM+P,YACpC0B,EAAmB3M,GAAS8L,EAC5B,EAAK5G,SAAS,CACZ+F,YAAa0B,EACbhD,YAAa3J,EACbgK,aAAa,EACbZ,UAAU,QAlBA,CACZ,IAAIuD,EAAqB,EAAKzR,MAAM+P,YACpC0B,EAAmB3M,GAAS8L,EAC5B,EAAK5G,SAAS,CACZ0H,cAAe,EAAK1R,MAAM0R,cAAgB,EAC1CC,aAAc,EAAK3R,MAAM2R,aAAe,EACxC5B,YAAa0B,EACbhD,YAAa3J,EACbgK,aAAa,EACbZ,UAAU,MA3FG,EAwGnBgB,oBAAsB,SAACpK,GACrB,EAAKuM,MAAM3B,0BAA0B5K,IAvGrC,EAAK9E,MAAQ,CACX+D,YAAQyK,EACRjB,kBAAciB,EACdD,cAAe,GACfyB,QAAS,GACT6B,WAAY,EACZ/C,aAAa,EACbL,YAAa,EACbiD,cAAe,EACfxD,UAAU,EACVyD,aAAc,KACdG,aAAc,EACdxB,cAAe,EACfzB,KAAM,EACN7J,SAAU,KACV+K,YAAa9K,MAAMsL,WAAM/B,EAAWvJ,MAAM,KAjB3B,E,gEAuBjBxB,KAAK7C,MAAMmR,WAAWtO,KAAK8N,wBAE3B9N,KAAKuG,SAAS,CACZuE,cAAe9K,KAAK7C,MAAM4H,aAAamC,UACvCqF,QAASvM,KAAK7C,MAAM4H,aAAawH,QACjCjM,OAAQN,KAAK7C,MAAMmD,OACnBiB,SAAUvB,KAAK7C,MAAM4H,aAAaxD,SAClC2M,aAAclO,KAAK7C,MAAM4H,aAAamC,UAAUjG,W,+BA8E1C,IAAD,OACP,OACE,oCACE,yBAAK/H,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aACf,yBAAKA,UAAU,cAAf,aACY,0BAAMA,UAAU,UAAU8G,KAAK7C,MAAMoE,WAEjD,yBAAKrI,UAAU,kBAAf,iBACiB,IACf,0BAAMA,UAAU,UAAU8G,KAAK7C,MAAM2M,gBAGzC,yBAAK5Q,UAAU,qBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBACb8G,KAAKzD,MAAM0R,cAAe,KAF/B,YAMA,yBAAK/U,UAAU,sBACb,0BAAMA,UAAU,kBAAkB8G,KAAKzD,MAAM6O,KAA7C,KADF,WAIA,yBAAKlS,UAAU,sBACb,0BAAMA,UAAU,kBACb8G,KAAKzD,MAAM2R,aAAc,KAF9B,YAOF,kBAAC,GAAD,CACEpD,cAAe9K,KAAKzD,MAAMuO,cAC1BW,oBAAqBzL,KAAKyL,oBAC1BT,YAAahL,KAAKzD,MAAMyO,YACxBP,SAAUzK,KAAKzD,MAAMkO,SACrBY,YAAarL,KAAKzD,MAAM8O,YACxB0B,MAAO,SAACvB,GAAD,OAAU,EAAKoC,MAAQpC,GAC9BF,YAAa,SAACiD,GAAD,OAAY,EAAKV,YAAcU,GAC5CnD,KAAMpL,KAAKzD,MAAM6O,QAGrB,kBAAC,GAAD,CACEN,cAAe9K,KAAKzD,MAAMuO,cAC1BkB,iBAAkBhM,KAAKgM,iBACvBa,cAAe7M,KAAKzD,MAAMsQ,cAC1BjB,oBAAqB5L,KAAK4L,oBAC1BmB,MAAO,SAACvB,GAAD,OAAU,EAAKoC,MAAQpC,GAC9BW,yBAA0BnM,KAAKmM,yBAC/BG,YAAatM,KAAKzD,MAAM+P,YACxBC,QAASvM,KAAKzD,MAAMgQ,QACpBjM,OAAQN,KAAKzD,MAAM+D,OACnBiB,SAAUvB,KAAKzD,MAAMgF,WAEvB,yBAAKrI,UAAU,UACb,kBAAC,GAAD,CACEsU,oBAAqBxN,KAAKwN,oBAC1BC,iBAAkBzN,KAAKyN,0B,GAxKRjT,aA6Ld8B,gBAZS,SAACC,GACvB,MAAO,CACLwI,aAAcxI,EAAMwI,aAAa8B,qBAIV,SAACzL,GAC1B,MAAO,CACLoT,YAAa,SAACzS,GAAD,OAAUX,EAAS+N,GAAyBpN,QAI9CO,CAA6CoR,IChMtDe,G,4MACJlS,MAAQ,CACNgF,SAAU,EAAKpE,MAAM4H,aAAaxD,SAClC4F,QAAS,EAAKhK,MAAM4H,aAAaoC,QACjCG,IAAK,EAAKnK,MAAM4H,aAAauC,IAC7BoH,WAAY,KACZC,MAAO,EAAKxR,MAAMwR,O,EAWpBtE,cAAe,WACb,EAAKuE,c,kEARL5O,KAAK6O,SAAS7O,KAAKzD,MAAM+K,KACzB,IAAMwH,EAAaC,YAAY/O,KAAK6O,SAASG,KAAKhP,MAAO,KACzDA,KAAKuG,SAAS,CAAEmI,WAAYI,EAAYH,MAAO3O,KAAKzD,MAAMoS,U,6CAG1DM,cAAcjP,KAAKzD,MAAMmS,c,iCAOzB,IAEE,IAAInN,EAAU2N,EAAI5H,EAAK2C,EACvB,GAAyD,OAArDxO,KAAKsO,MAAMlN,aAAaC,QAAQkD,KAAKzD,MAAM+K,MAC7C/F,EAAWvB,KAAKzD,MAAMgF,SACtB2N,EAAKlP,KAAKzD,MAAM4K,QAChBG,EAAMtH,KAAKzD,MAAM+K,IACjB2C,EAAKiF,EACLrS,aAAaG,QAAb,UACKsK,GACH7L,KAAKC,UAAU,CAAE6F,WAAU+F,MAAK4H,KAAIjF,YAEjC,CACL,IAAMjF,EAAWvJ,KAAKsO,MAAMlN,aAAaC,QAAb,UAAwBkD,KAAKzD,MAAM+K,OAEzD/F,EAA0ByD,EAA1BzD,SAAU2N,EAAgBlK,EAAhBkK,GAAI5H,EAAYtC,EAAZsC,IAAK2C,EAAOjF,EAAPiF,GACzBA,GAAU,EACVpN,aAAaG,QAAb,UACKsK,GACH7L,KAAKC,UAAU,CAAE6F,WAAU+F,MAAK4H,KAAIjF,SAGxC,MAAOtG,GACPvH,QAAQC,IAAIsH,M,+BAMN,IAAD,SACP,OACE,oCACE,kBAACkG,GAAD,CAASvJ,OAAQN,KAAKzD,MAAM+K,IAAKwC,aAAc9J,KAAKzD,MAAM4K,QAASkD,cAAgBrK,KAAKqK,gBACxF,kBAAC,IAAD,GACE/J,OAAQN,KAAKzD,MAAM+K,IACnBwC,aAAc9J,KAAKzD,MAAM4K,QACzB5F,SAAUvB,KAAKzD,MAAMgF,UAHvB,0BAIYvB,KAAKzD,MAAMgF,UAJvB,8BAKgBvB,KAAKzD,MAAM4K,SAL3B,6BAMe,SAAAoH,GAAK,OAAI,EAAKK,WAAaL,KAN1C,S,GAvDkB/T,aAiFX8B,gBAbS,SAACC,GACvB,MAAO,CACLwI,aAAcxI,EAAMwI,aAAa8B,iBACjC8H,MAAOpS,EAAM4S,kBAAkB1F,kBAIR,SAACrO,GAC1B,MAAO,CACLoT,YAAa,SAACzS,GAAD,OAAUX,EAAS+N,GAAyBpN,QAI9CO,CAA6CmS,IC5E5D,IAMenS,gBANS,SAACC,GACvB,MAAO,CACLwI,aAAcxI,EAAMwI,aAAa8B,oBAIG,KAAzBvK,EAdf,SAA4Ba,GAAQ,IAC1B4H,EAAiB5H,EAAjB4H,aACFqK,EAAiD,GAApCC,OAAOC,KAAKvK,GAAc9D,OAC7C,OACE,oCAAGmO,EAAa,kBAAC,GAAD,MAAkB,6D,UCDhCG,I,yDACJ,WAAYpS,GAAQ,IAAD,8BACjB,cAAMA,IAURqS,WAAa,SAACrU,GACZiB,QAAQC,IAAIlB,IAVZ,EAAKoB,MAAQ,CACXiQ,eAAWzB,EACX0B,cAAU1B,EACV0E,WAAO1E,EACP2E,WAAO3E,EACPvF,UAAMuF,EACN4E,aAAS5E,GARM,E,qDA0BjB,OACE,oCACE,kBAAC,IAAD,CAAKrN,QAAQ,SAASC,MAAM,SAASzE,UAAU,QAC7C,kBAAC,IAAD,CAAK0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG7E,UAAU,qBAC3C,yBAAKA,UAAU,kBACb,kBAAC,KAAD,CACE4I,KAAM,CAAElE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIsE,GAAI,GAAIuN,IAAK,KACrDzW,IAAI,yEACJD,UAAU,kBAEZ,uBACEA,UAAU,mBACVP,MAAO,CAAEkX,OAAQ,EAAGnR,UAAW,WAFjC,iBAOF,kBAAC,IAAD,CACEV,KAAK,QACLC,cAAe,CACbC,UAAU,GAEZC,SAAU6B,KAAKwP,YAEf,yBAAKtW,UAAU,oBACb,kBAAC,IAAKF,KAAN,KACE,kBAAC,IAAD,CACEwF,YAAY,aACZsR,SAAS,WACTjQ,MAAOG,KAAKzD,MAAMiQ,UAClBtT,UAAU,WAGd,kBAAC,IAAKF,KAAN,KACE,kBAAC,IAAD,CACEwF,YAAY,YACZsR,SAAS,WACTjQ,MAAOG,KAAKzD,MAAMkQ,SAClBvT,UAAU,YAIhB,kBAAC,IAAKF,KAAN,KACE,kBAAC,IAAD,CACEwF,YAAY,iBACZsR,SAAS,WACTjQ,MAAOG,KAAKzD,MAAMkT,MAClBvW,UAAU,WAGd,kBAAC,IAAKF,KAAN,KACE,kBAAC,IAAD,CACE2B,KAAK,MACL6D,YAAY,aACZsR,SAAS,WACTjQ,MAAOG,KAAKzD,MAAMmT,MAClBxW,UAAU,WAGd,yBAAKA,UAAU,oBACb,kBAAC,IAAKF,KAAN,KACE,kBAAC,IAAD,CACEwF,YAAY,OACZsR,SAAS,WACTjQ,MAAOG,KAAKzD,MAAMiJ,KAClBtM,UAAU,WAGd,kBAAC,IAAKF,KAAN,CACEE,UAAW+L,KAAkBjF,KAAKzD,MAAMiJ,KAAO,SAAW,IAE1D,kBAAC,IAAD,CACEhH,YAAY,QACZsR,SAAS,WACTjQ,MAAOG,KAAKzD,MAAMrD,UAClBA,UAAU,WAGd,kBAAC,IAAKF,KAAN,CACEE,UAAW+L,KAAkBjF,KAAKzD,MAAMiJ,KAAO,SAAW,IAE1D,kBAAC,IAAD,CACEhH,YAAY,UACZsR,SAAS,WACTjQ,MAAOG,KAAKzD,MAAMoT,QAClBzW,UAAU,mB,gDAjGIiE,EAAOZ,GACrC,MAAO,CACLiQ,UAAWrP,EAAMlB,KAAKuQ,UACtBC,SAAUtP,EAAMlB,KAAKwQ,SACrBgD,MAAOtS,EAAMlB,KAAKwT,MAClBC,MAAOvS,EAAMlB,KAAKyT,MAClBlK,KAAMrI,EAAMlB,KAAKuJ,KACjBmK,QAASxS,EAAMlB,KAAK0T,QACpBzW,UAAWiE,EAAMlB,KAAK/C,e,GAvBNsB,cAqIP8B,gBATS,SAACC,GACvB,MAAO,CACLN,KAAMM,EAAME,KAAKR,KAAOM,EAAME,KAAKR,KAAO,SAGnB,SAACb,GAC1B,MAAO,KAGMkB,CAA6CiT,I,uCCvI7C,SAASQ,GAAM5S,GAAQ,IAAD,EACXiC,mBAAS,IADE,mBAC5BmI,EAD4B,KACtByI,EADsB,KAE7BC,EACJ,6BACE,uBAAG/W,UAAU,qBAAb,aAcJ,OACE,oCACE,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CACEsF,YAAY,2BACZtF,UAAU,QACV2G,MAAO0H,EACP7D,SAlBa,SAACC,GACtBqM,EAAQrM,EAAEC,OAAO/D,QAkBTlH,MAAO,CAAEkX,OAAQ,WAEnB,yBAAK3W,UAAU,WAAW2L,QAlBZ,WACP,KAAT0C,IACFpK,EAAM+S,QAAQ3I,GACdyI,EAAQ,OAiBA,kBAAC,KAAD,CAAStI,QAASuI,GAChB,kBAAC,KAAD,CAAkB/W,UAAU,iBChC7B,SAASiX,GAAUhT,GAAQ,IAAD,EACeiC,mBAAS,IADxB,mBAChCgR,EADgC,KACXC,EADW,OAETjR,mBAAS,IAFA,mBAEhCkR,EAFgC,KAEvBC,EAFuB,OAGTnR,mBAAS,IAHA,mBAGhCoR,EAHgC,KAGvBC,EAHuB,OAITrR,mBAAS,IAJA,mBAIhCsR,EAJgC,KAIvBC,EAJuB,OAKTvR,mBAAS,IALA,mBAKhCwR,EALgC,KAKvBC,EALuB,OAMXzR,mBAAS,IANE,mBAMhC0R,EANgC,KAMxBC,EANwB,KAOjCd,EACJ,6BACE,uBAAG/W,UAAU,qBAAb,iDA0CJ,OACE,oCACE,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qBACb,kBAAC,IAAM8X,SAAP,CACExS,YAAY,uBACZtF,UAAU,SACV2G,MAAOuQ,EACP1M,SA9CqB,SAACC,GAC9B0M,EAAuB1M,EAAEC,OAAO/D,QA8CxBlH,MAAO,CAAEkX,OAAQ,WAEnB,yBAAK3W,UAAU,WAAW2L,QA/BR,WACxB,IAAMoM,EAAe,CACnBb,sBACAE,UACAE,UACAE,UACAE,UACAE,UAGF3T,EAAM+T,YAAYD,GAClB7U,QAAQC,IAAI4U,GACZZ,EAAuB,IACvBE,EAAW,IACXE,EAAW,IACXE,EAAW,IACXE,EAAW,IACXE,EAAU,MAgBA,kBAAC,KAAD,CAASrJ,QAASuI,GAChB,kBAAC,KAAD,CAAkB/W,UAAU,eAKpC,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CACEsF,YAAY,WACZtF,UAAU,eACV2G,MAAOyQ,EACP5M,SA3DY,SAACC,GACrB4M,EAAW5M,EAAEC,OAAO/D,QA2DZlH,MAAO,CAAEkX,OAAQ,YAEnB,kBAAC,IAAD,CACErR,YAAY,WACZtF,UAAU,eACV2G,MAAO2Q,EACP9M,SA/DY,SAACC,GACrB8M,EAAW9M,EAAEC,OAAO/D,QA+DZlH,MAAO,CAAEkX,OAAQ,YAEnB,kBAAC,IAAD,CACErR,YAAY,WACZtF,UAAU,eACV2G,MAAO6Q,EACPhN,SAnEY,SAACC,GACrBgN,EAAWhN,EAAEC,OAAO/D,QAmEZlH,MAAO,CAAEkX,OAAQ,YAEnB,kBAAC,IAAD,CACErR,YAAY,WACZtF,UAAU,eACV2G,MAAO+Q,EACPlN,SAvEY,SAACC,GACrBkN,EAAWlN,EAAEC,OAAO/D,QAuEZlH,MAAO,CAAEkX,OAAQ,YAEnB,kBAAC,IAAD,CACErR,YAAY,wCACZ7D,KAAK,SACLzB,UAAU,eACV2G,MAAOiR,EACPpN,SA5EW,SAACC,GACpBoN,EAAUpN,EAAEC,OAAO/D,QA4EXlH,MAAO,CAAEkX,OAAQ,UACjBsB,IAAK,EACLC,IAAK,O,cC3GF,SAASC,GAAWlU,GAAQ,IACjCmU,EAA4CnU,EAA5CmU,SAAUL,EAAkC9T,EAAlC8T,aAAwB3S,GAAUnB,EAApBoO,SAAoBpO,EAAVmB,OAEpCoN,EAAc,SAACrK,GACnBlE,EAAMoU,YAAYlQ,IAEpB,OACE,yBAAKnI,UAAU,uBACZoF,EACGgT,GACAA,EAASlQ,KAAI,SAACM,EAAML,GAAP,OACX,yBAAKC,IAAKD,GACR,uBAAGnI,UAAU,wBAAb,QAA0CmI,EAAQ,GAClD,yBAAKnI,UAAU,gBACb,kBAAC,IAAD,CACE4W,SAAS,WACTjQ,MAAO6B,EAAK7B,MACZ3G,UAAU,QACVP,MAAO,CAAEkX,OAAQ,WAEnB,kBAAC,KAAD,CACE3W,UAAU,SACV2L,QAAS,kBAAM6G,EAAYrK,IAC3B1I,MAAO,CAAE6Y,SAAS,eAK1BP,GACAA,EAAa7P,KAAI,SAACM,EAAML,GAAP,OACf,yBAAKC,IAAKD,GACR,uBAAGnI,UAAU,wBAAb,YAA8CmI,EAAQ,GACtD,yBAAKnI,UAAU,gBACb,kBAAC,IAAM8X,SAAP,CACElB,SAAS,WACTjQ,MAAO6B,EAAK0O,oBACZlX,UAAU,QACVP,MAAO,CAAEkX,OAAQ,WAEnB,kBAAC,KAAD,CACE3W,UAAU,SACV2L,QAAS,kBAAM6G,EAAYrK,IAC3B1I,MAAO,CAAE6Y,SAAS,WAGtB,yBAAKtY,UAAU,qBACb,kBAAC,IAAD,CACEA,UAAU,eACV2G,MAAO6B,EAAK4O,QACZR,SAAS,WACTnX,MAAO,CAAEkX,OAAQ,YAEnB,kBAAC,IAAD,CACE3W,UAAU,eACV2G,MAAO6B,EAAK8O,QACZV,SAAS,WACTnX,MAAO,CAAEkX,OAAQ,YAEnB,kBAAC,IAAD,CACE3W,UAAU,eACV2G,MAAO6B,EAAKgP,QACZZ,SAAS,WACTnX,MAAO,CAAEkX,OAAQ,YAEnB,kBAAC,IAAD,CACE3W,UAAU,eACV2G,MAAO6B,EAAKkP,QACZd,SAAS,WACTnX,MAAO,CAAEkX,OAAQ,YAEnB,kBAAC,IAAD,CACElV,KAAK,SACLzB,UAAU,eACV2G,MAAO6B,EAAKoP,OACZhB,SAAS,WACTnX,MAAO,CAAEkX,OAAQ,kBC7E5B,ICOD4B,G,kDACJ,WAAYtU,GAAQ,IAAD,8BACjB,cAAMA,IAgBRqS,WAAa,SAACrU,GACZ,IAAI+L,EACAqF,EAAU,GACdnQ,QAAQC,IAAIlB,GAHW,IAMrBoG,EAMEpG,EANFoG,SACA6F,EAKEjM,EALFiM,SACAlO,EAIEiC,EAJFjC,UACAyW,EAGExU,EAHFwU,QACAxI,EAEEhM,EAFFgM,QACAF,EACE9L,EADF8L,WAIFC,EAAY,EAAK3K,MAAM2K,UAAU9F,KAAI,SAACmK,EAAUlK,GAC9C,MAAO,CACLrG,YAAauQ,EAAS6E,oBACtBpH,QAAS,CACP,CACEmE,OAAQ5B,EAAS+E,SAEnB,CACEnD,OAAQ5B,EAASiF,SAEnB,CACErD,OAAQ5B,EAASmF,SAEnB,CACEvD,OAAQ5B,EAASqF,cAKzB,EAAKrU,MAAM2K,UAAU9F,KAAI,SAACmK,EAAUlK,GAClCkL,EAAQ/O,KAAK+L,SAASgC,EAASuF,YAEjC,IAGMY,EAAW,CACfC,UAJgB,EAAKxU,MAAMyU,UAK3BrQ,WACA6F,WACAlO,YACAyW,UACArR,MARY,EAAK/B,MAAM+B,MASvBuT,aAAa,EACb1K,UACAF,aACAC,YACAqF,WAGF,EAAKpP,MAAMiP,WAAWsF,IAvEL,EA0EnBtT,eAAiB,SAACC,GAChBjC,QAAQC,IAAI,UAAWgC,IA3EN,EA8EnByT,aAAe,SAACnS,EAAQC,KA9EL,EAgFnBmS,iBAAmB,SAACC,GAElB,EAAKzL,SAAS,CACZjI,MAAO,EAAK/B,MAAM+B,MAAMqE,QAAO,SAACjB,EAAML,GAAP,OAAiBA,IAAU2Q,QAnF3C,EAsFnBC,qBAAuB,SAACD,GAEtB,EAAKzL,SAAS,CACZW,UAAW,EAAK3K,MAAM2K,UAAUvE,QAAO,SAACjB,EAAML,GAAP,OAAiBA,IAAU2Q,QAzFnD,EA4FnB9B,QAAU,SAACrQ,GACT,EAAK0G,SAAS,CACZjI,MAAM,GAAD,oBAAM,EAAK/B,MAAM+B,OAAjB,CAAwB,CAAEuB,cA9FhB,EAmGnBqS,iBAAmB,WAMjBrX,IAAaC,KALA,CACXC,QAAS,gBACTC,YAAa,sDACbC,SAAU,KAvGK,EA4GnBiW,YAAc,YAOP,IANLd,EAMI,EANJA,oBACAE,EAKI,EALJA,QACAE,EAII,EAJJA,QACAE,EAGI,EAHJA,QACAE,EAEI,EAFJA,QACAE,EACI,EADJA,OAEA,EAAKvK,SAAS,CACZW,UAAU,GAAD,oBACJ,EAAK3K,MAAM2K,WADP,CAEP,CAAEkJ,sBAAqBE,UAASE,UAASE,UAASE,UAASE,eArH/D,EAAKvU,MAAQ,CACX+B,MAAO,GACP4I,UAAW,GACXxK,WAAW,EACXmV,aAAa,GANE,E,iEA6Hb7R,KAAK7C,MAAM0U,cACb7R,KAAK7C,MAAMgV,mBACXnS,KAAKkS,sB,+BAIC,IACA3S,EAAWC,IAAXD,OAER,OACE,oCACE,kBAAC,IAAD,CAAK7B,QAAQ,SAASC,MAAM,UAC1B,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI7E,UAAU,qBAC7C,uBAAGA,UAAU,qBAAb,gBACA,kBAAC,IAAD,CACE8E,KAAK,QACL9E,UAAU,qBACV+E,cAAe,CACbC,UAAU,GAEZC,SAAU6B,KAAKwP,WACfpR,eAAgB4B,KAAK5B,gBAErB,yBAAKlF,UAAU,oBACb,kBAAC,IAAKF,KAAN,CACEgF,KAAK,WACLM,MAAO,CACL,CACEC,UAAU,EACVxD,QAAS,6BAIb,kBAAC,IAAD,CAAOyD,YAAY,YAAYtF,UAAU,WAE3C,kBAAC,IAAKF,KAAN,CACEgF,KAAK,aACLM,MAAO,CACL,CACEC,UAAU,EACVxD,QAAS,+BAIb,kBAAC,IAAD,CACEyD,YAAY,cACZtF,UAAU,QACVyB,KAAK,aAIX,kBAAC,IAAK3B,KAAN,CACEgF,KAAK,WACLM,MAAO,CACL,CACEC,UAAU,EACVxD,QAAS,6BAIb,kBAAC,IAAD,CAAOyD,YAAY,oBAAoBtF,UAAU,WAEnD,kBAAC,IAAKF,KAAN,CACEgF,KAAK,UACLM,MAAO,CACL,CACEC,UAAU,EACVxD,QAAS,yCAIb,kBAAC,IAAD,CACEyD,YAAY,kCACZtF,UAAU,QACVyB,KAAK,YAIT,yBAAKzB,UAAU,oBACb,kBAAC,IAAKF,KAAN,CACEgF,KAAK,UACLM,MAAO,CACL,CAAEC,UAAU,EAAMxD,QAAS,gCAG7B,kBAAC,IAAD,CAAQ0E,aAAa,WACnB,kBAACF,EAAD,CAAQM,MAAM,KAAd,KACA,kBAACN,EAAD,CAAQM,MAAM,KAAd,KACA,kBAACN,EAAD,CAAQM,MAAM,KAAd,KACA,kBAACN,EAAD,CAAQM,MAAM,KAAd,OAIJ,kBAAC,IAAK7G,KAAN,CACEgF,KAAK,YACLM,MAAO,CAAC,CAAEC,UAAU,EAAMxD,QAAS,2BAEnC,kBAAC,IAAD,CAAQ0E,aAAa,SACrB,kBAACF,EAAD,CAAQM,MAAM,KAAd,KACA,kBAACN,EAAD,CAAQM,MAAM,MAAd,MACA,kBAACN,EAAD,CAAQM,MAAM,OAAd,OACA,kBAACN,EAAD,CAAQM,MAAM,QAAd,QACA,kBAACN,EAAD,CAAQM,MAAM,MAAd,MACA,kBAACN,EAAD,CAAQM,MAAM,KAAd,KACA,kBAACN,EAAD,CAAQM,MAAM,MAAd,MACA,kBAACN,EAAD,CAAQM,MAAM,OAAd,UAIJ,uBAAG3G,UAAU,sBAAsBP,MAAO,CAAEgG,WAAY,QACrD,IADH,cAIA,kBAAC0S,GAAD,CACEC,SAAUtR,KAAKzD,MAAM+B,MACrBA,OAAO,EACPiT,YAAavR,KAAK+R,mBAEpB,kBAAC,IAAK/Y,KAAN,KACE,kBAAC+W,GAAD,CAAOG,QAASlQ,KAAKkQ,WAEvB,uBAAGhX,UAAU,sBAAsBP,MAAO,CAAEgG,WAAY,QACrD,IADH,kBAIA,kBAAC0S,GAAD,CACEJ,aAAcjR,KAAKzD,MAAM2K,UACzBA,WAAW,EACXqK,YAAavR,KAAKiS,uBAEpB,kBAAC,IAAKjZ,KAAN,KACE,kBAACmX,GAAD,CAAWe,YAAalR,KAAKkR,eAE/B,kBAAC,IAAKlY,KAAN,KACE,kBAAC,IAAD,CACE2B,KAAK,UACLoE,QAASiB,KAAKzD,MAAMG,UACpBxD,UAAU,WACV8F,SAAS,SACTc,SAAWE,KAAKzD,MAAM2K,UAAUjG,OAAO,GAEtCjB,KAAKzD,MAAMG,UAAY,gBAAkB,uB,gDAhQ1BS,EAAOZ,GACrC,MAAO,CACLG,UAAWS,EAAMT,UACjBmV,YAAa1U,EAAM0U,iB,GAdArX,aAmSV8B,gBAdS,SAACC,GACvB,MAAO,CACLqV,UAAWrV,EAAME,KAAKM,UACtBL,UAAWH,EAAM6V,QAAQxR,cACzBiR,YAAatV,EAAM6V,QAAQP,gBAGJ,SAACzW,GAC1B,MAAO,CACLgR,WAAY,SAACjR,GAAD,OAAYC,ED/OF,SAACD,GAAD,OAAY,SAACC,GACrCgB,QAAQC,IAAIlB,GAEZC,EA7CO,CACLT,KAb+B,wBA2DjC,IAAMU,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBqB,cAAeC,aAAaC,QAAQ,UAGtCtB,KAAMC,KAAKC,UAAUP,IAEvBQ,MAAM,uBAAwBN,GAC3BO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAU,IAAD,EACY,uBAAlB,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMI,aAAN,eAAa6B,MACf5C,GrCoIwB,SAACA,GAC/BA,EA3IO,CACLT,KAzD0B,mBAoM5BS,EAtIO,CACLT,KA9D0B,sBqC+DtBS,GAA2BW,EAAKE,KAxD/B,CACLtB,KAlB+B,4BA4E9BuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZf,EAvDG,CACLT,KAvB+B,4BCmSEyR,CAAWjR,KAC5CgX,iBAAkB,kBAAM/W,EDvLI,wCAAM,WAAOA,GAAP,SAAAoF,EAAA,sDACpCpF,EA/DO,CACLT,KAzCkC,2BAsGA,2CAAN,2DC2LjB2B,CAA6CmV,I,OCtS7C,SAAS3N,GAAS3G,GAC/B,IAAMC,EAAUC,cADsB,EAEZ+B,mBAAS,IAFG,mBAE/BqB,EAF+B,KAExBsD,EAFwB,OAGA3E,mBAAS,IAHT,mBAG/B4E,EAH+B,KAGlBC,EAHkB,OAIJ7E,mBAAS,IAJL,mBAI/B8E,EAJ+B,KAIpBC,EAJoB,KAKhCC,EAAUjH,EAAMiH,QAEtB7G,qBAAU,WACRwG,EAAS5G,EAAMsD,MAAMU,aACpB,CAAChE,IAEJ,IAUIkH,EACFC,EAAe,GAWXC,EAAmB,SAACZ,EAAGtC,GACvBgD,GACFA,EAAUG,UAAUC,OAAO,kBAE7BJ,EAAYV,EAAEe,cACdf,EAAEe,cAAcF,UAAUG,IAAI,kBAC9BL,EAAe7D,EAAMY,IAGvB,OACE,oCACE,yBAAKnI,UAAU,yBACb,uBAAGA,UAAU,0BAA0BkL,GACvC,yBAAKlL,UAAU,6BACb,uBAAGA,UAAU,wBAAb,eACC,kBAACkK,GAAD,CAAWG,eArCG,SAACF,GACH,KAAfA,EAAmBc,EAAad,IAElCc,GAAa,GACbF,EACExD,EAAMkC,QAAO,SAAC9B,GAAD,OAAUA,EAAKU,SAASiC,cAAcoB,SAASvB,WAiCzC,GAAhB5C,EAAMQ,QACL,yBAAK/H,UAAU,eAAf,qBAIDuH,EAAMQ,OAAS,GAChB,yBAAK/H,UAAU,uBACb,uBAAGA,UAAU,0CAAb,eAGA,yBAAKA,UAAU,sBACZuH,EAAMQ,OAAS,EACA,KAAdiD,EACEF,EAAY5C,KAAI,SAACP,EAAMQ,GAAP,OACd,yBACEC,IAAKD,EACLnI,UAAS,gBACT2L,QAAS,SAAClB,GACRY,EAAiBZ,EAAGtC,KAGtB,uBAAGnI,UAAU,eAAeoI,IAAKD,GAC9BR,EAAKU,UAER,yBAAKrI,UAAU,cACb,uBAAGA,UAAU,cAAb,qCAGA,uBAAGA,UAAU,YAAb,2CAONuH,EAAMW,KAAI,SAACP,EAAMQ,GAAP,OACR,yBACEC,IAAKD,EACLnI,UAAS,gBACT2L,QAAS,SAAClB,GACRY,EAAiBZ,EAAGtC,KAGtB,uBAAGnI,UAAU,eAAeoI,IAAKD,GAC9BR,EAAKU,UAER,yBAAKrI,UAAU,cACb,uBAAGA,UAAU,cAAb,qCAGA,uBAAGA,UAAU,YAAb,2CAQR,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,2BACb,kBAAC,KAAS0I,OAAV,CACE1I,UAAU,yBACV2I,QAAQ,EACRC,KAAK,UACLC,MAAM,WAER,kBAAC,KAASC,MAAV,CACE9I,UAAU,wBACV2I,QAAQ,EACRC,KAAK,aAGT,yBAAK5I,UAAU,2BACb,kBAAC,KAAS0I,OAAV,CACE1I,UAAU,yBACV2I,QAAQ,EACRC,KAAK,UACLC,MAAM,WAER,kBAAC,KAASC,MAAV,CACE9I,UAAU,wBACV2I,QAAQ,EACRC,KAAK,aAGT,yBAAK5I,UAAU,2BACb,kBAAC,KAAS0I,OAAV,CACE1I,UAAU,yBACV2I,QAAQ,EACRC,KAAK,UACLC,MAAM,WAER,kBAAC,KAASC,MAAV,CACE9I,UAAU,wBACV2I,QAAQ,EACRC,KAAK,iBASlBrB,EAAMQ,OAAS,GAChB,yBAAK/H,UAAU,kBACb,kBAAC,IAAD,CAAQyB,KAAK,UAAUkK,QAnIL,WAAO,IAAD,EAC9B1H,EAAM2H,mBAAmBR,GACzBlH,EAAQI,KAAR,iCACkB8G,EAAa/C,gBAD/B,aACkB,EACZqF,QAAQ,OAAQ,KACjBpD,kBA8HC,eClIV,IAaelH,gBAbS,SAACC,GACvB,MAAO,CACLkE,MAAOlE,EAAM6V,QAAQC,kBAIE,SAACjX,GAC1B,MAAO,CACLuF,WAAY,SAAC5D,GAAD,OAAe3B,EH8CG,SAAC2B,GAAD,+CAAe,WAAO3B,GAAP,eAAAoF,EAAA,6DAC/CpF,EAtDO,CACLT,KA1BiC,0BAiF7BU,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBqB,cAAeC,aAAaC,QAAQ,WAPO,SAWzCnB,MAAM,kBAAD,OAAmBoB,GAAa1B,GACxCO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACM,IAAD,EAANA,IACwB,uBAAlB,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMI,aAAN,eAAa6B,MACf5C,GrCyGsB,SAACA,GAC/BA,EA3IO,CACLT,KAzD0B,mBAoM5BS,EAtIO,CACLT,KA9D0B,sBqC0FpBS,EAjED,CACLT,KA/BiC,wBAgCjC8F,MA+DmC1E,EAAK2E,UAIvCxE,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZf,EAhEG,CACLT,KArCiC,6BA4EY,2CAAf,sDG9CM2X,CAAmBvV,KACvDgI,aAAc,SAACC,GAAD,OAAc5J,GzBPKW,EyBOyBiJ,EzBPhB,SAAC5J,GAC7CA,EAdO,CACLT,KAjBkC,yBAkBlCqK,SAY0BjJ,OADM,IAACA,MyBWtBO,EArCf,SAAoBa,GAAQ,IAClBsD,EAAqBtD,EAArBsD,MAAO1D,EAAcI,EAAdJ,UAWf,OAJAQ,qBAAU,WACRJ,EAAMwD,WAAW5D,KAChB,IAGD,oCACE,yBAAK7D,UAAU,2BACb,kBAAC,GAAD,CACAuH,MAAOA,EACP2D,QAfU,iBAgBVU,mBAdqB,SAACE,GAC1B7H,EAAM4H,aAAaC,WCQvB,IAMe1I,gBANS,SAACC,GACvB,MAAO,CACLQ,UAAWR,EAAME,KAAKR,KAAOM,EAAME,KAAKM,UAAY,QAIhB,KAAzBT,EArBf,SAA8Ba,GAAQ,IAC5BJ,EAAcI,EAAdJ,UACR,OACE,oCACE,yBAAK7D,UAAU,uBACb,kBAAC,IAAD,CAAKkJ,OAAQ,CAAC,GAAI,IAAK1E,QAAQ,UAC7B,kBAAC,IAAD,CAAKxE,UAAU,aAAa0E,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIuE,GAAI,IACtD,kBAAC,GAAD,CAAYtF,UAAWA,W,OCRpB,SAASwV,GAAcpV,GACpC,IAAMqV,EAAUrV,EAAMqV,QAChBjR,EAAWpE,EAAMoE,SACjB0G,EAAauK,EAAQvK,WACrBI,EAAUmK,EAAQnK,QAClBC,EAAQkK,EAAQlK,MAChBmK,EAAa9J,KAAKC,MAAOP,EAAUJ,EAAc,KACvD,OACE,oCACE,kBAAC,IAAD,CAAK/O,UAAU,8BAA8B2E,GAAI,GAAID,GAAI,GAAIE,GAAI,EAAGC,GAAI,GACtE,yBAAK7E,UAAU,4BACb,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,2BACVsZ,EAAQhG,UAAUkG,cADrB,IACqCF,EAAQ/F,SAASiG,gBAGxD,yBAAKxZ,UAAU,yBACb,yBAAKA,UAAU,gBAAf,cACa,0BAAMA,UAAU,oBAAhB,IAAqCqI,IAElD,yBAAKrI,UAAU,uBAAf,eACe,IACb,0BAAMA,UAAU,oBAAoB+O,IAEtC,yBAAK/O,UAAU,0BAAf,kBACkB,IAChB,0BAAMA,UAAU,oBAAoBmP,EAApC,IAA8CJ,IAEhD,yBAAK/O,UAAU,uBAAf,cACc,IACZ,0BAAMA,UAAU,oBAAoBuZ,EAApC,MAEF,yBAAKvZ,UAAU,yBAAf,mBACmB,IACjB,0BAAMA,UAAU,wCACbmP,IAGL,yBAAKnP,UAAU,uBAAf,iBACiB,IACf,0BAAMA,UAAU,2BAA2BoP,IAE7C,yBAAKpP,UAAU,4BAAf,gBACgB,IACd,0BAAMA,UAAU,wCACb+O,GAAcI,IAAYC,SCd3C,IAMehM,gBANS,SAACC,GACvB,MAAO,CACLwI,aAAcxI,EAAMwI,aAAa4N,4BAIG,KAAzBrW,EApCf,SAAoBa,GAClBf,QAAQC,IAAIc,EAAM4H,cAClB,IACM6N,EAAWzV,EAAM4H,aAAauI,SAC9BpU,EAAYiE,EAAM4H,aAAa7L,UAC/BqI,EAAWpE,EAAM4H,aAAaxD,SACpC,OACE,oCACE,yBAAKrI,UAAU,6BACb,yBAAKA,UAAU,wBAAf,gBACgBA,GAEI,GAAnB0Z,EAAS3R,QAAe,yBAAK/H,UAAU,eAAf,6BAIzB,kBAAC,IAAD,CAAKkJ,OAAQ,CAAExE,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KACvC6U,EAAS3R,OAAS,GACjB2R,EAASxR,KAAI,SAACoR,EAASnR,GAAV,OACX,kBAAC,GAAD,CACEE,SAAUA,EACViR,QAASA,EACTlR,IAAKD,a,oBCwFrB,IAYe/E,gBAZS,SAACC,GAAW,IAAD,IACjC,MAAO,CACLsW,iBAAgB,UAAEtW,EAAMwI,aAAa8C,uBAAuBtG,gBAA5C,aAAE,EACdqF,QAAQ,OAAQ,KACjBpD,cACHtD,SAAU3D,EAAME,KAAKR,KACrB6W,yBAAwB,UAAEvW,EAAMwI,aAAa4N,yBAAyBpR,gBAA9C,aAAE,EACtBqF,QAAQ,OAAQ,KACjBpD,iBAIiC,KAAzBlH,EAtGf,SAAaa,GAAQ,IAAD,EACQiC,mBAAS,GADjB,mBACX8K,EADW,KACJ6I,EADI,KAWlBxV,qBAAU,WACRyV,OAAOC,iBAAiB,eAAe,SAACtP,GACtCA,EAAEuP,oBAEJF,OAAOC,iBAAiB,WAAW,SAACtP,GAClCvH,QAAQC,IAAIsH,GACC,OAATA,EAAErC,KACJqC,EAAEuP,sBAGL,IArBe,IAuBVL,EAA+C1V,EAA/C0V,iBAAkBC,EAA6B3V,EAA7B2V,yBACpBtN,EAAOrI,EAAM+C,SAASsF,KAI5B,OAHoBwB,KAAZD,QACQ1J,cAGd,yBAAKnE,UAAWgR,EAAQ,EAAI,GAAK,0BAC/B,kBAAC,WAAD,CAASxG,SAAU,SAACC,GAAD,OA1BrBoP,EAAS7I,EAAQ,QACbA,EAAQ,GAAK,EACfnP,KAAQoY,QAAQ,yBAEhBpY,KAAQoB,MAAM,kCAuBd,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiX,OAAO,EAAMC,KAAM,IAAKpT,UAAW1F,IAC1C,kBAAC,IAAD,CAAO6Y,OAAO,EAAMC,KAAM,UAAWpT,UAAWqT,IAChD,kBAAC,IAAD,CAAOF,OAAO,EAAMC,KAAK,UAAUpT,UAAWsT,IAC9C,kBAAC,EAAD,CACEH,OAAO,EACPC,KAAK,aACLpT,UACEgF,KAAkBO,EAAOgO,GAAmBC,KAGhD,kBAAC,EAAD,CACEL,OAAO,EACPC,KAAK,gBACLpT,UAAWyT,KAEb,kBAAC,EAAD,CACEN,OAAO,EACPC,KAAK,eACLpT,UAAWgF,KAAkBO,EAAOiM,GAAaiC,KAEnD,kBAAC,EAAD,CAAgBN,OAAO,EAAMC,KAAK,UAAUpT,UAAW0T,KACvD,kBAAC,EAAD,CACEP,OAAO,EACPC,KAAI,kBAAaR,GACjB5S,UAAW2T,KAEb,kBAAC,EAAD,CACER,OAAO,EACPC,KAAK,qBACLpT,UAAW4T,KAEb,kBAAC,EAAD,CACET,OAAO,EACPC,KAAK,cACLpT,UAAW6T,KAEb,kBAAC,EAAD,CAAgBV,OAAO,EAAMC,KAAK,WAAWpT,UAAWsP,KACxD,kBAAC,EAAD,CACE6D,OAAO,EACPC,KAAK,iBACLpT,UACEgF,KAAkBO,EAAOuO,GAAuBN,KAGpD,kBAAC,EAAD,CACEL,OAAO,EACPC,KAAI,uBAAkBP,GACtB7S,UAAW+T,KAEb,kBAAC,EAAD,CAAgB/T,UAAWqT,U,2BC1F/BW,GAAe,CACnBC,aAAa,EACbC,aAAa,EACbzX,WAAW,EACX0X,cAAc,EACdC,aAAa,EACbC,YAAY,EACZ7Z,aAAa,EACb8Z,aAAa,EACbtV,gBAAgB,EAChBzC,kBAAiBK,aAAaC,QAAQ,SACtC0X,sBAAsB,EACtBC,oBAAoB,EACpB1X,UAAWF,aAAaC,QAAQ,aAChCb,KAAMR,KAAKsO,MAAMlN,aAAaC,QAAQ,gBAClCrB,KAAKsO,MAAMlN,aAAaC,QAAQ,gBAChC,ICtBAmX,GAAe,CACnBS,YAAY,EACZ9T,eAAe,EACfqB,wBAAwB,EACxB0S,eAAe,EACfC,WAAW,EACXvU,eAAe,EACfwU,iBAAiB,EACjBhU,KAAM,GACNqB,cAAe,ICfX+R,GAAe,CACnBpN,iBAAkB,GAClBgB,uBAAwB,GACxB8K,yBAA0B,ICHtBsB,GAAe,CACnBxK,cAAe,EACfiL,YAAY,EACZE,WAAW,EACXE,iBAAiB,EACjBC,iBAAiB,GCLbd,GAAe,CACnBvX,WAAW,EACXkY,WAAW,EACXI,cAAc,EACdxS,QAAS,ICALyR,GAAe,CACnBS,YAAY,EACZ9T,eAAe,EACf+T,eAAe,EACfC,WAAW,EACX/C,aAAa,EACbxR,eAAe,EACfwU,iBAAiB,EACjBxC,cAAe,ICVF4C,gBAAgB,CAC7BxY,KN4Ba,WAAyC,IAA/BF,EAA8B,uDAAtB0X,GAAciB,EAAQ,uCACrD,OAAQA,EAAOva,MACb,I7CrCyB,gB6CuCvB,OADAyB,QAAQC,IAAI,uBACL,6BACFE,GADL,IAEE2X,aAAa,EACbxX,WAAW,EACX4X,YAAY,IAEhB,I7C5CyB,gB6C8CvB,OADAlY,QAAQC,IAAI,sBAAuB6Y,EAAOxU,KACnC,6BACFnE,GADL,IAEE2X,aAAa,EACbxX,WAAW,EACXF,iBAAiB,EACjBP,KAAMiZ,EAAOjZ,KACbc,UAAWmY,EAAOnY,YAEtB,I7CrDyB,gB6CuDvB,OADAX,QAAQC,IAAI,uBACL,6BACFE,GADL,IAEE2X,aAAa,EACb1X,iBAAiB,EACjBE,WAAW,EACX4X,YAAY,IAGhB,I7C5D2B,kB6C6DzB,OAAO,6BACF/X,GADL,IAEE4X,aAAa,EACbzX,WAAW,EACXjC,aAAa,IAGjB,I7CnE2B,kB6CoEzB,OAAO,6BACF8B,GADL,IAEE4X,aAAa,EACbzX,WAAW,EACXjC,aAAa,EACbwE,gBAAgB,IAGpB,I7C3E2B,kB6C4EzB,OAAO,6BACF1C,GADL,IAEE4X,aAAa,EACbzX,WAAW,EACXjC,YAAaya,EAAOxa,UAGxB,I7CnEgC,uB6CoE9B,OAAO,6BACF6B,GADL,IAEE0C,gBAAgB,IAGpB,I7C7E2B,kB6C8EzB,OAAO,6BACF1C,GADL,IAEEG,WAAW,EACX8X,sBAAsB,EACtBC,oBAAoB,IAGxB,I7CnFmC,0B6CoFjC,OAAO,6BACFlY,GADL,IAEEG,WAAW,EACX8X,sBAAsB,EACtBC,oBAAoB,IAGxB,I7C5FiC,wB6C6F/B,OAAO,6BACFlY,GADL,IAEEG,WAAW,EACX8X,sBAAsB,EACtBC,mBAAoBS,EAAOxa,UAG/B,I7C9G0B,iB6C+GxB,OAAO,6BAAK6B,GAAZ,IAAmB6X,cAAc,EAAMG,aAAa,IAEtD,I7ChH0B,iB6CoHxB,OAHA1X,aAAaqJ,WAAW,SACxBrJ,aAAaqJ,WAAW,eACxBrJ,aAAaqJ,WAAW,aACjB,6BACF3J,GADL,IAEE6X,cAAc,EACd5X,iBAAiB,EACjBP,KAAM,KAGV,I7C1H0B,iB6C2HxB,OAAO,6BAAKM,GAAZ,IAAmB6X,cAAc,EAAOG,aAAa,IAEvD,I7C1H0B,iB6C2HxB,OAAO,6BAAKhY,GAAZ,IAAmB8X,aAAa,EAAMc,gBAAgB,IAExD,I7C5H0B,iB6C6HxB,OAAO,6BAAK5Y,GAAZ,IAAmB8X,aAAa,IAClC,QACE,OAAO9X,IMvIXkE,MLca,WAAyC,IAA/BlE,EAA8B,uDAAtB0X,GAAciB,EAAQ,uCACrD,OAAQA,EAAOva,MACb,I1CxB8B,qB0CyB5B,OAAO,6BACF4B,GADL,IAEEmY,YAAY,EACZ9T,eAAe,EACfqB,wBAAwB,EACxB0S,eAAe,IAEnB,I1C/B8B,qB0CgC5B,OAAO,6BACFpY,GADL,IAEEmY,YAAY,EACZ9T,eAAe,EACfgU,WAAW,EACX/T,KAAMqU,EAAOzU,QAEjB,I1ChCsC,6B0CiCpC,OAAO,6BACFlE,GADL,IAEEmY,YAAY,EACZ9T,eAAe,EACfqB,wBAAwB,EACxB0S,eAAe,IAGnB,I1CxCsC,6B0CyCpC,OAAO,6BACFpY,GADL,IAEEmY,YAAY,EACZ9T,eAAe,EACfgU,WAAW,EACX/T,KAAMqU,EAAOzU,QAGjB,I1ChDsC,6B0CiDpC,OAAO,6BACFlE,GADL,IAEEmY,YAAY,EACZE,WAAW,EACXhU,eAAe,EACfqB,wBAAwB,EACxBmT,YAAY,IAGhB,I1ClEsC,6B0CmEpC,OAAO,6BACF7Y,GADL,IAEEmY,YAAY,EACZzS,wBAAwB,EACxBC,cAAegT,EAAOzU,MAAM,GAAGyB,gBAGnC,I1CzE8B,qB0C0E5B,OAAO,6BACF3F,GADL,IAEEmY,YAAY,EACZE,WAAW,EACXhU,eAAe,EACfqB,wBAAwB,EACxBmT,YAAY,IAEhB,I1ChF+B,sB0CkF7B,OADAvY,aAAaqJ,WAAWgP,EAAO5U,QACxB,6BACF/D,GADL,IAEE8D,eAAe,EACfwU,iBAAiB,IAErB,I1CxF+B,sB0CyF7B,OAAO,6BACFtY,GADL,IAEE8D,eAAe,EACfwU,iBAAiB,IAGrB,QACE,OAAOtY,IK3FXwI,aJCa,WAAyC,IAA/BxI,EAA8B,uDAAtB0X,GAAciB,EAAQ,uCACrD,OAAQA,EAAOva,MACb,IhCZyB,gBgCavB,OAAO,6BACF4B,GADL,IAEEsK,iBAAkBqO,EAAOlQ,WAG7B,IhCjBgC,uBgCkB9B,OAAO,6BACFzI,GADL,IAEEsL,uBAAwBqN,EAAOlQ,WAEnC,IhCrBkC,yBgCsBhC,OAAO,6BACFzI,GADL,IAEEoW,yBAA0BuC,EAAOlQ,WAGrC,QACE,OAAOzI,IIpBX4S,kBHEa,WAAyC,IAA/B5S,EAA8B,uDAAtB0X,GAAciB,EAAQ,uCACrD,OAAQA,EAAOva,MACb,IvBfuC,8BuBgBrC,OAAO,6BACF4B,GADL,IAEEmY,YAAY,IAGhB,IvBpBuC,8BuBqBrBnY,EAAMwY,gBACtB,OAAO,6BACFxY,GADL,IAEEqY,WAAW,EACXF,YAAY,EACZjL,cAAeyL,EAAOtL,KACtBmL,iBAAiB,IAErB,IvB5BuC,8BuB6BrC,OAAO,6BACFxY,GADL,IAEEmY,YAAY,EACZE,WAAW,EACXE,iBAAiB,IAGrB,QACE,OAAOvY,IG3BXgG,YFAa,WAAyC,IAA/BhG,EAA8B,uDAAtB0X,GAAciB,EAAQ,uCACrD,OAAQA,EAAOva,MACb,IxCbiC,wBwCc/B,OAAO,6BACF4B,GADL,IAEEG,WAAW,IAGf,IxClBiC,wBwCmB/B,OAAO,6BACFH,GADL,IAEEG,WAAW,EACXkY,WAAW,EACXpS,QAAS0S,EAAOnZ,OAGpB,IxCzBiC,wBwC0B/B,OAAO,6BACFQ,GADL,IAEE8Y,WAAW,EACX3Y,WAAW,IAGf,QACE,OAAOH,IEvBX6V,QDOa,WAAyC,IAA/B7V,EAA8B,uDAAtB0X,GAAciB,EAAQ,uCACrD,OAAQA,EAAOva,MACb,IbrB+B,sBasB7B,OAAO,6BACF4B,GADL,IAEEmY,YAAY,EACZ9T,eAAe,EACf+T,eAAe,IAEnB,Ib3B+B,sBa4B7B,OAAO,6BACFpY,GADL,IAEEmY,YAAY,EACZ7C,aAAa,EACbjR,eAAe,EACfgU,WAAW,IAEf,IblC+B,sBayC/B,IbtCiC,wBauC/B,OAAO,6BACFrY,GADL,IAEEmY,YAAY,EACZ9T,eAAe,EACf+T,eAAe,IAEnB,Ib5CiC,wBa6C/B,OAAO,6BACFpY,GADL,IAEEmY,YAAY,EACZ7C,aAAa,EACbjR,eAAe,EACfgU,WAAW,EACXvC,cAAe6C,EAAOzU,QAE1B,IbpDiC,wBaqD/B,OAAO,6BACFlE,GADL,IAEEmY,YAAY,EACZ9T,eAAe,EACf+T,eAAe,IAEnB,IbzDkC,yBa0DhC,OAAO,6BACFpY,GADL,IAEEsV,aAAa,IAGjB,QACE,OAAOtV,MEtEP+Y,I,OAAeC,aAAQC,aAAgBC,QAG9BC,GADDC,aAAYC,GAASN,ICCnCO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.844f4519.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Carousel-1.7f174aaa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Carousel-2.fa86ba9a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Carousel-3.cbdecf49.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Card-1.de2d0433.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Card-2.0fab7d90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Card-3.2f878f41.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Card-4.3b3c74b8.jpg\";","import React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport \"./HomeComponents.css\"\r\nimport Carousel1 from './images/Carousel-1.jpg';\r\nimport Carousel2 from './images/Carousel-2.jpg';\r\nimport Carousel3 from './images/Carousel-3.jpg';\r\n\r\nexport default function CarouselComponent() {\r\nreturn (\r\n\t<div style={{ display: 'block', width: 'auto', padding: 10 }}>\r\n\t<Carousel>\r\n\t\t<Carousel.Item interval={1500}>\r\n\t\t<img\r\n\t\t\tclassName=\"d-block w-100 h-20\"\r\n\t\t\tsrc={Carousel1}\r\n\t\t\talt=\"Image One\"\r\n\t\t\theight=\"auto\"\r\n\t\t/>\r\n\t\t<Carousel.Caption>\r\n\t\t\t<h3 className=\"caption\">Exams Simplified</h3>\r\n\t\t\t<p className=\"description\">A one-stop solution for all your examination needs.</p>\r\n\t\t</Carousel.Caption>\r\n\t\t</Carousel.Item>\r\n\t\t<Carousel.Item interval={500}>\r\n\t\t<img\r\n\t\t\tclassName=\"d-block w-100\"\r\n\t\t\tsrc={Carousel2}\r\n\t\t\talt=\"Image Two\"\r\n\t\t/>\r\n\t\t<Carousel.Caption>\r\n\t\t\t<h3 className=\"caption\">Student Support</h3>\r\n\t\t\t<p className=\"description\">Access to all the examination resources and records.</p>\r\n\t\t</Carousel.Caption>\r\n\t\t</Carousel.Item>\r\n\t\t<Carousel.Item interval={500}>\r\n\t\t<img\r\n\t\t\tclassName=\"d-block w-100\"\r\n\t\t\tsrc={Carousel3}\r\n\t\t\talt=\"Image Two\"\r\n\t\t/>\r\n\t\t<Carousel.Caption>\r\n\t\t\t<h3 className=\"caption\">Teacher Support</h3>\r\n\t\t\t<p className=\"description\">Create and manage the examination resources easily.</p>\r\n\t\t</Carousel.Caption>\r\n\t\t</Carousel.Item>\r\n\t</Carousel>\r\n\t</div>\r\n);\r\n}","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport \"./HomeComponents.css\";\r\nimport Card1 from \"./images/Card-1.jpg\";\r\nimport Card2 from \"./images/Card-2.jpg\";\r\nimport Card3 from \"./images/Card-3.jpg\";\r\nimport Card4 from \"./images/Card-4.jpg\";\r\n\r\nexport default function CardComponent() {\r\nreturn (\r\n<CardGroup>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src={Card1} />\r\n    <Card.Body>\r\n      <Card.Title className=\"card_title\">Create Test</Card.Title>\r\n      <Card.Text>\r\n        ExamPlus allows you to create your customizable test, schedule the date\r\n        and duration, and monitor the results.\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src={Card2} />\r\n    <Card.Body>\r\n      <Card.Title className=\"card_title\"> Unlimited Tests</Card.Title>\r\n      <Card.Text>\r\n        ExamPlus allows you to attempt unlimited tests and\r\n        keep a track of the past and upcoming tests.\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src={Card3} />\r\n    <Card.Body>\r\n      <Card.Title className=\"card_title\">Score Records</Card.Title>\r\n      <Card.Text>\r\n        With ExamPlus, you can keep a track of the your scores and past records, all in one-place! \r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src={Card4} />\r\n    <Card.Body>\r\n      <Card.Title className=\"card_title\">Customer Support</Card.Title>\r\n      <Card.Text>\r\n        You can contact our customer team directly in case of queries.\r\n        {<br/>}Write to us: ExamPlus@gmail.com\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n</CardGroup>\r\n)\r\n}","import React, {Component} from \"react\";\r\nimport Carousel from \"../homeComponents/CarouselComponent\";\r\nimport Card from \"../homeComponents/CardComponent\";\r\n\r\nclass Home extends Component {\r\n    render() \r\n    {\r\n        return (\r\n            <div>\r\n                <Carousel/>\r\n                <Card/>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Home;","import {notification} from \"antd\";\r\n//Login action types\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\n//Signup action types\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\n//Logout action types\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\n//Verification action types\r\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\r\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\r\n\r\n//Password Reset action types\r\nexport const SEND_PASS_RESET = \"SEND_PASS_RESET\";\r\nexport const SEND_PASS_RESET_ERROR = \"SEND_PASS_RESET_ERROR\";\r\nexport const SEND_PASS_RESET_SUCCESS = \"SEND_PASS_RESET_SUCCESS\";\r\n\r\nexport const USER_ACCOUNT_CREATED = \"USER_ACCOUNT_CREATED\";\r\n\r\nconst requestLogin = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveLogin = (user, profileID) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user,\r\n    profileID,\r\n  };\r\n};\r\n\r\nconst loginError = () => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n  };\r\n};\r\n\r\nconst requestsignup = () => {\r\n  return {\r\n    type: SIGN_UP_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveSignup = (user) => {\r\n  return {\r\n    type: SIGN_UP_SUCCESS,\r\n    user,\r\n  };\r\n};\r\n\r\nconst signupError = (errMess) => {\r\n  return {\r\n    type: SIGN_UP_FAILURE,\r\n    errMess,\r\n  };\r\n};\r\n\r\nconst requestLogout = () => {\r\n  return {\r\n    type: LOGOUT_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveLogout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n  };\r\n};\r\n\r\nconst logoutError = () => {\r\n  return {\r\n    type: LOGOUT_FAILURE,\r\n  };\r\n};\r\n\r\nconst verifyRequest = () => {\r\n  return {\r\n    type: VERIFY_REQUEST,\r\n  };\r\n};\r\n\r\nconst verifySuccess = () => {\r\n  return {\r\n    type: VERIFY_SUCCESS,\r\n  };\r\n};\r\n\r\nconst sendingPassReset = () => {\r\n  return {\r\n    type: SEND_PASS_RESET,\r\n  };\r\n};\r\n\r\nconst sendPassResetError = (errMess) => {\r\n  return {\r\n    type: SEND_PASS_RESET_ERROR,\r\n    errMess,\r\n  };\r\n};\r\n\r\nconst sendPassResetSuccess = () => {\r\n  return {\r\n    type: SEND_PASS_RESET_SUCCESS,\r\n  };\r\n};\r\n\r\nconst userAccountCreated = () => {\r\n  return {\r\n    type: USER_ACCOUNT_CREATED,\r\n  };\r\n};\r\n\r\nconst openLoginErrorNotification = () => {\r\n  const args = {\r\n    message: \"Error!\",\r\n    description:\r\n      \"Invalid Username or Password.\",\r\n    duration: 3,\r\n  };\r\n  notification.open(args);\r\n};\r\n\r\nconst openSignupErrorNotification = () => {\r\n  const args = {\r\n    message: \"Error!\",\r\n    description:\r\n      \"Email Address aready in use. Try a new one.\",\r\n    duration: 3,\r\n  };\r\n  notification.open(args);\r\n};\r\n\r\nexport const loginUser = (values) => (dispatch) => {\r\n  dispatch(requestLogin());\r\n   \r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    body: JSON.stringify(values),\r\n  };\r\n  fetch(\"/user/login\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(\"hellooo\");\r\n      if (data.token) {\r\n        console.log(\"hellooo\");\r\n        localStorage.setItem(\"token\", `Bearer ${data.token}`);\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(data.payload.user));\r\n        localStorage.setItem(\"profileID\", data.payload.profileID);\r\n        dispatch(receiveLogin(data.payload.user, data.payload.profileID));\r\n      }\r\n      else {\r\n        openLoginErrorNotification();\r\n        dispatch(loginError());\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      openLoginErrorNotification();\r\n      dispatch(loginError());\r\n    });\r\n};\r\n\r\nexport const signUpUser = (values) => (dispatch) => {\r\n  dispatch(requestsignup());\r\n\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(values),\r\n  };\r\n  fetch(\"/user/signup\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.token) {\r\n        dispatch(receiveSignup(data.user));\r\n      }\r\n      else\r\n      {\r\n        openSignupErrorNotification();\r\n        dispatch(signupError());\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      dispatch(signupError());\r\n    });\r\n};\r\n\r\nexport const accountCreated = () => (dispatch) => {\r\n  dispatch(userAccountCreated());\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  dispatch(requestLogout());\r\n  dispatch(receiveLogout());\r\n};","import { Form, Input, Button } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Row, Col, Typography, notification} from \"antd\";\r\nimport \"./Login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginUser } from \"../actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ParticlesBg from 'particles-bg'\r\nfunction Login(props) {\r\n  const history = useHistory();\r\n  const { Title } = Typography;\r\n  const { isLoading } = props;\r\n\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n  const openSuccessNotification = () => {\r\n    const args = {\r\n      message: \"Welcome!\",\r\n      description:\r\n        \"Logged in Successfully.\",\r\n      duration: 3,\r\n    };\r\n    notification.open(args);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.isAuthenticated) {\r\n      openSuccessNotification();\r\n      history.push(\"/\");\r\n    }\r\n  }, [props]);\r\n\r\n  const submitForm = (values) => {\r\n    props.sendLoginRequest(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  return (\r\n    <>\r\n    <ParticlesBg type=\"cobweb\" bg={true} />\r\n      <Row justify=\"center\" align=\"middle\" className=\"hero\">\r\n        <Col xs={22} sm={22} md={6} lg={6} className=\"signin__container\">\r\n          <p className=\"sub-title\">ExamPlus 💎</p>\r\n\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={submitForm}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your email!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Email\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"Password\" />\r\n            </Form.Item>\r\n            <div\r\n              className=\"link\"\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontWeight: 500,\r\n                marginBottom: \"15px\",\r\n              }}\r\n            >\r\n              <Link to=\"/signup\">New here? Create your account.</Link>\r\n            </div>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"sign__in\"\r\n                style={{ minWidth: \"44px\" }}\r\n                loading={isLoading}\r\n                htmlType=\"submit\"\r\n              >\r\n                {!isLoading ? \"Sign In!\" : \"Logging In\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isLoading: state.auth.isLoading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendLoginRequest: (values) => dispatch(loginUser(values)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  notification,\r\n} from \"antd\";\r\nimport \"./Signup.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { signUpUser, accountCreated } from \"../actions/authActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ParticlesBg from 'particles-bg'\r\n\r\nfunction Signup(props) {\r\n  const [showSelect, setShowSelect] = useState(false);\r\n  const history = useHistory();\r\n  const { Option } = Select;\r\n  const { isLoading } = props;\r\n\r\n  const submitForm = (values) => {\r\n    props.sendSignUpRequest(values);\r\n    console.log(values);\r\n  };\r\n\r\n  const openNotification = () => {\r\n    const args = {\r\n      message: \"Account Created!\",\r\n      description:\r\n        \"Congratulations, your account has been created successfully. Please login to continue.\",\r\n      duration: 3,\r\n    };\r\n    notification.open(args);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  useEffect(() => {\r\n    if (props.accountCreated) {\r\n      openNotification();\r\n      props.sendUserAccountCreated();\r\n    }\r\n  }, [props]);\r\n\r\n  const handleSelect = (select, optionData) => {\r\n    console.log(optionData);\r\n    if (optionData.value === \"teacher\") {\r\n      setShowSelect(true);\r\n    } else {\r\n      setShowSelect(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n    <ParticlesBg type=\"cobweb\" bg={true} />\r\n      <Row justify=\"center\" align=\"middle\" className=\"hero\">\r\n        <Col xs={22} sm={22} md={8} lg={8} className=\"signup__container\">\r\n          <p className=\"sub-title__signup\">ExamPlus 💎</p>\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={submitForm}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <div className=\"element__wrapper\">\r\n              <Form.Item\r\n                name=\"firstName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your First Name!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"First Name\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"lastName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Last Name!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Last Name\" />\r\n              </Form.Item>\r\n            </div>\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your email!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"abcd@gmail.com\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"Password\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"phone\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your Phone Number!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input type=\"tel\" placeholder=\"XXXXXXXXXX\" />\r\n            </Form.Item>\r\n\r\n            <div className=\"element__wrapper\">\r\n              <Form.Item\r\n                name=\"role\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your role!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select defaultValue=\"Role\" onSelect={handleSelect}>\r\n                  <Option value=\"student\">Student</Option>\r\n                  <Option value=\"teacher\">Teacher</Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"section\"\r\n                rules={[\r\n                  {\r\n                    message: \"Please input your section!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select defaultValue=\"Section\" disabled={showSelect}>\r\n                  <Option value=\"A\">A</Option>\r\n                  <Option value=\"B\">B</Option>\r\n                  <Option value=\"C\">C</Option>\r\n                  <Option value=\"D\">D</Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"className\"\r\n                rules={[\r\n                  {\r\n                    message: \"Please input your email!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select defaultValue=\"Class\" disabled={showSelect}>\r\n                  <Option value=\"V\">V</Option>\r\n                  <Option value=\"VI\">VI</Option>\r\n                  <Option value=\"VII\">VII</Option>\r\n                  <Option value=\"VIII\">VIII</Option>\r\n                  <Option value=\"IX\">IX</Option>\r\n                  <Option value=\"X\">X</Option>\r\n                  <Option value=\"XI\">XI</Option>\r\n                  <Option value=\"XII\">XII</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div\r\n              className=\"link\"\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontWeight: 500,\r\n                marginBottom: \"15px\",\r\n              }}\r\n            >\r\n              <Link to=\"/sigin\">Already have an account? Sign in!</Link>\r\n            </div>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"sign__up\"\r\n                htmlType=\"submit\"\r\n                loading={isLoading}\r\n              >\r\n                {!isLoading ? \"Sign Up!\" : \"Creating Account\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isLoading: state.auth.isLoading,\r\n    accountCreated: state.auth.accountCreated,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendSignUpRequest: (values) => dispatch(signUpUser(values)),\r\n    sendUserAccountCreated: () => dispatch(accountCreated()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  render() {\r\n    const Component = this.props.component;\r\n    return this.props.isAuthenticated ? (\r\n      <Component userInfo={this.props.userInfo} />\r\n    ) : (\r\n      <Redirect to={{ pathname: \"/signin\" }} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    userInfo: state.auth.user,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(ProtectedRoute);\r\n","import { logoutUser } from \"./authActions\";\r\n// Test action types\r\nexport const FETCH_TEST_REQUEST = \"FETCH_TEST_REQUEST\";\r\nexport const FETCH_TEST_SUCCESS = \"FETCH_TEST_SUCCESS\";\r\nexport const FETCH_ATTEMPT_TEST_SUCCESS = \"FETCH_ATTEMPT_TEST_SUCCESS\";\r\nexport const FETCH_TEST_FAILURE = \"FETCH_TEST_FAILURE\";\r\nexport const SUBMIT_TEST_FAILURE = \"SUBMIT_TEST_FAILURE\";\r\nexport const SUBMIT_TEST_SUCCESS = \"SUBMIT_TEST_SUCCESS\";\r\n\r\n// Teacher action types\r\nexport const FETCH_TEACHER_TEST_REQUEST = \"FETCH_TEACHER_TEST_REQUEST\";\r\nexport const FETCH_TEACHER_TEST_SUCCESS = \"FETCH_TEACHER_TEST_SUCCESS\";\r\nexport const FETCH_TEACHER_TEST_FAILURE = \"FETCH_TEACHER_TEST_FAILURE\";\r\n\r\nconst requestTests = () => {\r\n  return {\r\n    type: FETCH_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveTests = (tests) => {\r\n  return {\r\n    type: FETCH_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nconst testsError = (errorData) => {\r\n  return {\r\n    type: FETCH_TEST_FAILURE,\r\n  };\r\n};\r\nconst requestTeacherTests = () => {\r\n  return {\r\n    type: FETCH_TEACHER_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveTeacherTests = (tests) => {\r\n  return {\r\n    type: FETCH_TEACHER_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nconst testsTeacherError = () => {\r\n  return {\r\n    type: FETCH_TEACHER_TEST_FAILURE,\r\n  };\r\n};\r\nconst testSubmitError = () => {\r\n  return {\r\n    type: SUBMIT_TEST_FAILURE,\r\n  };\r\n};\r\nconst testSubmitted = (testID) => {\r\n  return {\r\n    type: SUBMIT_TEST_SUCCESS,\r\n    testID: testID,\r\n  };\r\n};\r\n\r\nconst receiveAttemptTests = (tests) => {\r\n  return {\r\n    type: FETCH_ATTEMPT_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nexport const fetchAttemptTests = (profileID) => async (dispatch) => {\r\n  dispatch(requestTests());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/student/attempt-tests/${profileID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          dispatch(receiveAttemptTests(data.obj));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(testsError());\r\n    });\r\n};\r\n\r\nexport const fetchTests = (className) => async (dispatch) => {\r\n  dispatch(requestTests());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/student/tests/${className}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data?.error?.name === \"TokenExpiredError\") {\r\n        dispatch(logoutUser());\r\n      } else {\r\n        dispatch(receiveTests(data.obj));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const submitTest = (data) => async (dispatch) => {\r\n  const {\r\n    testID,\r\n    correct,\r\n    unanswered,\r\n    totalMarks,\r\n    profileID,\r\n    testName,\r\n    firstName,\r\n    lastName,\r\n    wrong,\r\n  } = data;\r\n  const testData = JSON.parse(localStorage.getItem(testID));\r\n  let submitMinutes = testData.rM;\r\n  const submitBy = [\r\n    {\r\n      correct,\r\n      unanswered,\r\n      totalMarks,\r\n      profileID,\r\n      testName,\r\n      firstName,\r\n      lastName,\r\n      wrong,\r\n      submitMinutes,\r\n    },\r\n  ];\r\n\r\n  const postedData = {\r\n    submitBy,\r\n    testID,\r\n    testName,\r\n  };\r\n\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n    body: JSON.stringify(postedData),\r\n  };\r\n\r\n  await fetch(`/student/submit-test/${testID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          dispatch(testSubmitted(testID));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(testSubmitError());\r\n    });\r\n};\r\n\r\n/* Teacher Actions*/\r\n\r\nexport const fetchTeacherTests = (profileID) => async (dispatch) => {\r\n  dispatch(requestTeacherTests());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/teacher/tests/${profileID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          dispatch(receiveTeacherTests(data.obj));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(testsTeacherError());\r\n    });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./TestCard.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchTests } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction TestCard(props) {\r\n  let { tests, isLoading, studentClassName, trimLength } = props;\r\n  if (tests)\r\n    tests =\r\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(studentClassName);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header red__header\">\r\n        <p className=\"left__header__text\">\r\n          Recently Assigned Tests\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && tests ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {tests.map((test, index) => (\r\n              <Link to=\"/attempt-test\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p className=\"index__box red__index\">{index + 1}</p>\r\n                  </div>\r\n                  <div className=\"test__name \"> {test.testName}</div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingTest,\r\n    tests: state.tests.test,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (classID) => dispatch(fetchTests(classID)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestCard);","import React, { useEffect } from \"react\";\r\nimport \"./TestCard.css\";\r\nimport { HiClipboardCheck } from \"react-icons/hi\";\r\nimport { fetchAttemptTests } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction ResultCard(props) {\r\n  let { tests, isLoading, profileID, trimLength } = props;\r\n  if (tests)\r\n    tests =\r\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n    console.log(\"fired\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header\">\r\n        <p className=\"left__header__text\">\r\n          Recently Attempted Tests\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && tests ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {tests.map((test, index) => (\r\n              <Link to=\"/result\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p\r\n                      className=\"index__box \"\r\n                      style={{ backgroundColor: \"#1e90ff\" }}\r\n                    >\r\n                      {index + 1}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"test__name\"> {test.testName}</div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCheck />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingAttemptedTest,\r\n    tests: state.tests.attemptedTest,\r\n    profileID: state.auth.profileID,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultCard);","import React, { useState } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport TestCard from \"./TestCard\";\r\nimport ResultCard from \"./ResultCard\";\r\n\r\nfunction Dashboard(props) {\r\n  const { studentClassName, profileID, userInfo } = props;\r\n  const trimLength = 8;\r\n\r\n  return (\r\n    <>\r\n      <div className={\"container dashboard\"}>\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <TestCard\r\n              studentClassName={studentClassName}\r\n              trimLength={trimLength}\r\n            />\r\n          </Col>\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <ResultCard trimLength={trimLength} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    studentClassName: state.auth.user ? state.auth.user.className : null,\r\n    profileID: state.auth.user ? state.auth.user.profileID : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Dashboard);","import React, { useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HiArrowCircleRight } from \"react-icons/hi\";\r\nimport { fetchClasses } from \"../../actions/classesActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction Classes(props) {\r\n  let { classesList, isLoading, studentClassName, trimLength, classes } = props;\r\n  if (classesList)\r\n    classesList =\r\n      classesList.length > trimLength\r\n        ? classesList.slice(-trimLength).reverse()\r\n        : classesList;\r\n\r\n  useEffect(() => {\r\n    props.fetchClasses();\r\n  }, []);\r\n  console.log(props);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header red__header\">\r\n        <p className=\"left__header__text\">\r\n          Registered Classes\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && classesList ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {classesList.map((individualClass, index) => (\r\n              <Link to=\"/assigned-test\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p className=\"index__box red__index\">{index + 1}</p>\r\n                  </div>\r\n                  <div className=\"test__name \">\r\n                    {\" \"}\r\n                    Class - {individualClass.className}\r\n                  </div>\r\n                  <div className=\"test__icon\">\r\n                    <HiArrowCircleRight />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingTest,\r\n    tests: state.tests.test,\r\n    classesList: state.classesData.classes,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchClasses: () => dispatch(fetchClasses()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Classes);\r\n","import { logoutUser } from \"./authActions\";\r\n// Class action types\r\nexport const FETCH_CLASSES_REQUEST = \"FETCH_CLASSES_REQUEST\";\r\nexport const FETCH_CLASSES_SUCCESS = \"FETCH_CLASSES_SUCCESS\";\r\nexport const FETCH_CLASSES_FAILURE = \"FETCH_CLASSES_FAILURE\";\r\n\r\nconst requestClasses = () => {\r\n  return {\r\n    type: FETCH_CLASSES_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveClasses = (data) => {\r\n  return {\r\n    type: FETCH_CLASSES_SUCCESS,\r\n    data,\r\n  };\r\n};\r\n\r\nconst ClassesError = () => {\r\n  return {\r\n    type: FETCH_CLASSES_FAILURE,\r\n  };\r\n};\r\n\r\nexport const fetchClasses = (values) => (dispatch) => {\r\n  dispatch(requestClasses());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n  fetch(\"/teacher/classes\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data?.error?.name === \"TokenExpiredError\") {\r\n        dispatch(logoutUser());\r\n      } else {\r\n        const filteredDupicates = data.obj.filter(\r\n          (v, i, a) => a.findIndex((t) => t.className === v.className) === i\r\n        );\r\n        dispatch(receiveClasses(filteredDupicates));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(ClassesError());\r\n    });\r\n};","import React, { useEffect } from \"react\";\r\nimport { HiClipboardList } from \"react-icons/hi\";\r\nimport { fetchTeacherTests } from \"../../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\nimport \"./index.css\";\r\n\r\nfunction AssignedTests(props) {\r\n  let { tests, isLoading, profileID, trimLength } = props;\r\n  if (tests)\r\n    tests =\r\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n    console.log(\"fired\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__teacher__header\">\r\n        <p className=\"left__teacher__header__text\">\r\n          Recently Assigned Tests\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && tests ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {tests.map((test, index) => (\r\n              <Link to=\"/assigned-test\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p className=\"index__box index__box__teacher \">\r\n                      {index + 1}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"test__name\">\r\n                    {\" \"}\r\n                    {test.testName} - Class {test.className}\r\n                  </div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardList />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingTest,\r\n    tests: state.tests.test,\r\n    profileID: state.auth.profileID,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchTeacherTests(profileID)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignedTests);","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport Classes from \"./Classes\";\r\nimport AssignedTests from \"./AssignedTests\";\r\n\r\nfunction Dashboard(props) {\r\n  const trimLength = 8;\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <AssignedTests trimLength={trimLength} />\r\n          </Col>\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <Classes trimLength={trimLength} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nconst { Search } = Input;\r\nexport default function SearchBox(props) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    props.handleListData(searchTerm.toLowerCase());\r\n  }, [searchTerm]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n  const onSearch = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search__input\">\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          onSearch={onSearch}\r\n          onChange={handleSearchChange}\r\n          enterButton\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport SearchBox from \"../homeComponents/SearchBox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nexport default function TestList(props) {\r\n  const history = useHistory();\r\n  const [tests, setTests] = useState([]);\r\n  const [searchTests, setSearchTests] = useState([]);\r\n  const [searching, setSearching] = useState(\"\");\r\n  const heading = props.heading;\r\n\r\n  useEffect(() => {\r\n    setTests(props.tests.reverse());\r\n  }, [props]);\r\n\r\n  const handleListData = (searchTerm) => {\r\n    if (searchTerm === \"\") setSearching(searchTerm);\r\n    else {\r\n      setSearching(true);\r\n      setSearchTests(\r\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\r\n      );\r\n    }\r\n  };\r\n\r\n  let selectRef,\r\n    selectedData = {};\r\n\r\n  const handleButtonClick = () => {\r\n    props.handleSelectedTest(selectedData);\r\n    history.push(\"/test-instructions\");\r\n  };\r\n\r\n  const handleSelectTest = (e, index) => {\r\n    if (selectRef) {\r\n      selectRef.classList.remove(\"selected__test\");\r\n    }\r\n    selectRef = e.currentTarget;\r\n    e.currentTarget.classList.add(\"selected__test\");\r\n    selectedData = tests[index];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__wrapper\">\r\n        <p className=\"test__wrapper__heading\">{heading}</p>\r\n        <div className=\"select__test__search__box\">\r\n          <p className=\"search__box__heading\">Search Test</p>\r\n          {<SearchBox handleListData={handleListData} />}\r\n          {tests.length == 0 && \r\n            <div className=\"no__results\">\r\n            No results found.\r\n            </div>\r\n          }\r\n          {tests.length > 0 &&\r\n          <div className=\"test__wrapper__body\">\r\n            <p className=\"test__wrapper__heading select__heading\">\r\n              Select Test\r\n            </p>\r\n            <div className=\"select__test__body\">\r\n              {tests.length > 0 ? (\r\n                searching !== \"\" ? (\r\n                  searchTests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Nov 26 2021 11:30AM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Nov 29 2021 10:30 PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  tests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Nov 26 2021 11:30AM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Nov 29 2021 10:30 PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <div className=\"select__skeleton\">\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          }\r\n        </div>\r\n        {tests.length > 0 &&\r\n        <div className=\"select__button\">\r\n          <Button type=\"primary\" onClick={handleButtonClick}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport { fetchTests, fetchAttemptTests } from \"../actions/testActions\";\r\nimport { selectedTest } from \"../actions/selectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./SelectTest.css\";\r\nimport TestList from \"./TestList\";\r\n\r\nfunction SelectTest(props) {\r\n  const { tests, studentClassName, profileID } = props;\r\n  const heading = \"Available Test\";\r\n  const handleSelectedTest =(testData)=>{\r\n      props.selectedTest(testData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(studentClassName);\r\n    props.fetchAttemptTests(profileID);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__container\">\r\n       <TestList\r\n        tests={tests}\r\n        heading={heading}\r\n        handleSelectedTest={handleSelectedTest} /> \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tests: state.tests.test,\r\n    profileID: state.auth.profileID,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (classID) => dispatch(fetchTests(classID)),\r\n    fetchAttemptTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\r\n    selectedTest: (testData) =>dispatch(selectedTest(testData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);","import { logoutUser } from \"./authActions\";\r\n// Select action types\r\nexport const TEST_SELECTED = \"TEST_SELECTED\";\r\nexport const SELECTED_TEST_RESULT = \"SELECTED_TEST_RESULT\";\r\nexport const SELECTED_ASSIGNED_TEST = \"SELECTED_ASSIGNED_TEST\";\r\n\r\nconst selectTest = (testData) => {\r\n  return {\r\n    type: TEST_SELECTED,\r\n    testData,\r\n  };\r\n};\r\n\r\nconst selectTestResult = (testData) => {\r\n  return {\r\n    type: SELECTED_TEST_RESULT,\r\n    testData,\r\n  };\r\n};\r\nconst selectAssignedTest = (testData) => {\r\n  return {\r\n    type: SELECTED_ASSIGNED_TEST,\r\n    testData,\r\n  };\r\n};\r\n\r\nexport const selectedTest = (data) => (dispatch) => {\r\n  dispatch(selectTest(data));\r\n};\r\n\r\nexport const selectedTestResult = (data) => (dispatch) => {\r\n  dispatch(selectTestResult(data));\r\n};\r\nexport const selectedAssignedTest = (data) => (dispatch) => {\r\n  dispatch(selectAssignedTest(data));\r\n};\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectTest from \"./SelectTest\";\r\n\r\nfunction AttemptTest(props) {\r\n  const { studentClassName } = props;\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <SelectTest studentClassName={studentClassName} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    studentClassName: state.auth.user ? state.auth.user.className : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(AttemptTest);","export const Roles ={\r\n    teacher: \"teacher\",\r\n    student: \"student\"\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Roles } from \"../Roles/roles\";\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst LeftMenu = (props) => {\r\n  const [isAuthenticated, setisAuthenticated] = useState(false);\r\n  const location = useLocation();\r\n\r\n  const role = props.userInfo.role;\r\n\r\n  useEffect(() => {\r\n    setisAuthenticated(props.isAuthenticated);\r\n  }, [props]);\r\n\r\n  const signOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userProfile\");\r\n    localStorage.removeItem(\"profileID\");\r\n    props.signOut();\r\n  };\r\n\r\n  const handleProfile = () => {};\r\n\r\n  const { md } = useBreakpoint();\r\n  const homeRoute = isAuthenticated ? \"/\" : \"signin\";\r\n  const dashboard = isAuthenticated ? \"/dashboard\" : \"signup\";\r\n  const testRoute = isAuthenticated ? \"/attempt-test\" : \"\";\r\n  const resultRoute = isAuthenticated ? \"/result\" : \"\";\r\n  const signOutRoute = isAuthenticated ? \"/signin\" : \"\";\r\n  const profileRoute = isAuthenticated ? \"/profile\" : \"\";\r\n  const createTestRoute = isAuthenticated ? \"/create-test\" : \"\";\r\n  const assignedTestRoute = isAuthenticated ? \"/assigned-test\" : \"\";\r\n\r\n  const style ={\r\n    display: (location.pathname===\"/start-test\")?(\"none\"):(\"block\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"menu\" style={style}>\r\n      <Menu mode={md ? \"horizontal\" : \"inline\"}>\r\n        <Menu.Item key=\"01\">\r\n          <NavLink to={homeRoute}>\r\n            {isAuthenticated ? \"Home\" : \"Sign In\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"02\">\r\n          <NavLink to={dashboard}>\r\n            {isAuthenticated ? \"Dashboard\" : \"SignUp\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"03\" className={!isAuthenticated ? \"display-none\" : \"\"}>\r\n          <NavLink to={Roles.teacher === role ? createTestRoute : testRoute}>\r\n            {isAuthenticated\r\n              ? Roles.teacher === role\r\n                ? \"Create Test\"\r\n                : \"Attempt Test\"\r\n              : \"\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"04\" className={!isAuthenticated ? \"display-none\" : \"\"}>\r\n          <NavLink\r\n            to={Roles.teacher === role ? assignedTestRoute : resultRoute}\r\n          >\r\n            {isAuthenticated\r\n              ? Roles.teacher === role\r\n                ? \"Assigned Test\"\r\n                : \"Result\"\r\n              : \"\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"05\" className={!isAuthenticated ? \"display-none\" : \"\"}>\r\n          <NavLink to={profileRoute} onClick={handleProfile}>\r\n            {isAuthenticated ? \"Profile\" : \"\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n      </Menu>\r\n      <div className=\"right-side\">\r\n        <NavLink\r\n          to={signOutRoute}\r\n          onClick={signOut}\r\n          className={!isAuthenticated ? \"display-none signout\" : \"signout\"}\r\n        >\r\n          {isAuthenticated ? \"Sign Out\" : \"\"}\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    userInfo: state.auth.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(logoutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftMenu);","import React, { Component } from \"react\";\r\nimport LeftMenu from \"./LeftMenu\";\r\nimport { Drawer, Button } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Navbar.css\";\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    current: \"mail\",\r\n    visible: false,\r\n  };\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.userInfo);\r\n\r\n    return (\r\n      <nav className=\"menuBar\">\r\n        <div className=\"logo\">\r\n          <NavLink to=\"/\">\r\n             ExamPlus 💎\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"menuCon\">\r\n          <div className=\"leftMenu\">\r\n            <LeftMenu />\r\n          </div>\r\n          <Button className=\"barsMenu\" type=\"primary\" onClick={this.showDrawer}>\r\n            <span className=\"barsBtn\"></span>\r\n          </Button>\r\n          <Drawer\r\n            title=\"Menu\"\r\n            placement=\"right\"\r\n            closable={false}\r\n            onClose={this.onClose}\r\n            visible={this.state.visible}\r\n          >\r\n            <LeftMenu role={this.props} />\r\n          </Drawer>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userInfo: state.auth.user,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(Navbar);","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport SearchBox from \"../homeComponents/SearchBox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nexport default function TestList(props) {\r\n  const history = useHistory();\r\n  const [tests, setTests] = useState([]);\r\n  const [searchTests, setSearchTests] = useState([]);\r\n  const [searching, setSearching] = useState(\"\");\r\n  const heading = props.heading;\r\n\r\n  useEffect(() => {\r\n    setTests(props.tests.reverse());\r\n  }, [props]);\r\n\r\n  const handleListData = (searchTerm) => {\r\n    if (searchTerm === \"\") setSearching(searchTerm);\r\n    else {\r\n      setSearching(true);\r\n      setSearchTests(\r\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\r\n      );\r\n    }\r\n  };\r\n\r\n  let selectRef,\r\n    selectedData = {};\r\n\r\n  const handleButtonClick = () => {\r\n    props.handleSelectedTest(selectedData);\r\n    history.push(\r\n      `/result/${selectedData.testName\r\n        ?.replace(/\\s+/g, \"-\")\r\n        .toLowerCase()}`\r\n    );\r\n  };\r\n\r\n  const handleSelectTest = (e, index) => {\r\n    if (selectRef) {\r\n      selectRef.classList.remove(\"selected__test\");\r\n    }\r\n    selectRef = e.currentTarget;\r\n    e.currentTarget.classList.add(\"selected__test\");\r\n    selectedData = tests[index];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__wrapper\">\r\n        <p className=\"test__wrapper__heading\">{heading}</p>\r\n        <div className=\"select__test__search__box\">\r\n          <p className=\"search__box__heading\">Search Test</p>\r\n          {<SearchBox handleListData={handleListData} />}\r\n          {tests.length == 0 && \r\n            <div className=\"no__results\">\r\n            No results found.\r\n            </div>\r\n          }\r\n          {tests.length > 0 &&\r\n          <div className=\"test__wrapper__body\">\r\n            <p className=\"test__wrapper__heading select__heading\">\r\n              Select Test\r\n            </p>\r\n            <div className=\"select__test__body\">\r\n              {tests.length > 0 ? (\r\n                searching !== \"\" ? (\r\n                  searchTests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Nov 26 2021 11:30AM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Nov 29 2021 10:30 PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  tests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Nov 26 2021 11:30AM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Nov 29 2021 10:30 PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <div className=\"select__skeleton\">\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          }\r\n        </div>\r\n        {tests.length > 0 &&\r\n        <div className=\"select__button\">\r\n          <Button type=\"primary\" onClick={handleButtonClick}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport { fetchAttemptTests } from \"../actions/testActions\";\r\nimport { selectedTestResult } from \"../actions/selectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./SelectTest.css\";\r\nimport TestList from \"./TestList\";\r\n\r\nfunction SelectTest(props) {\r\n  const { tests, profileID } = props;\r\n  const heading = \"Result\";\r\n  const handleSelectedTest = (testData) => {\r\n    props.selectedTest(testData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__container\">\r\n        <TestList \r\n        tests={tests}\r\n        heading={heading}\r\n        handleSelectedTest={handleSelectedTest} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tests: state.tests.attemptedTest,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\r\n    selectedTest: (testData) => dispatch(selectedTestResult(testData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectTest from \"./SelectTest\";\r\n\r\nfunction ResultWrapper(props) {\r\n  const { profileID } = props;\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <SelectTest profileID={profileID} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profileID: state.auth.user ? state.auth.profileID : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ResultWrapper);\r\n","import React, {useState} from \"react\";\r\nimport { Row, Modal, Col, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./TestInstruction.css\";\r\nimport { FaArrowCircleRight } from \"react-icons/fa\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction TestInstruction(props) {\r\n  const history = useHistory();\r\n  const { confirm } = Modal;\r\n  const { tests} = props;\r\n  const {\r\n    outOfMarks,\r\n    questions,\r\n    minutes,\r\n    category,\r\n    className,\r\n    testName,\r\n    rules,\r\n    _id: testID,\r\n  } = props.selectedTest;\r\n\r\n  let testRules, attempted=false;\r\n\r\n  if (rules) {\r\n    testRules = rules;\r\n  }\r\n  \r\n\r\n  tests.map((test, index)=>{\r\n    if(test.testName === testName){\r\n      attempted=true\r\n    }\r\n  })\r\n\r\n  const handleButtonClick = () => {\r\n    confirm({\r\n      title: \"Do you want to start the test?\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Once you click OK, the timer will start!\",\r\n      onOk() {\r\n        console.log(\"OK\");\r\n        history.push(\"/start-test\");\r\n      },\r\n      onCancel() {\r\n        console.log(\"Cancel\");\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={22} xl={22}>\r\n            <div className=\"instructions__wrapper\">\r\n              <Row justify=\"center\">\r\n                <Col className=\"gutter-row\" xs={24} sm={24} md={12} xl={12}>\r\n                  <div className=\"instructions__wrapper__left\">\r\n                    <p className=\"instructions__heading\">Test Instructions</p>\r\n                    <div className=\"test__info\">\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Test Name:</div>\r\n                        <div className=\"test__fields__Value\">{testName}</div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Total Questions:</div>\r\n                        <div className=\"test__fields__Value\">\r\n                          {questions?.length}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Allocated Time:</div>\r\n                        <div className=\"test__fields__Value\">\r\n                          {minutes} Minutes\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Category:</div>\r\n                        <div className=\"test__fields__Value\">{category}</div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Total Marks:</div>\r\n                        <div className=\"test__fields__Value\">{outOfMarks}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"test__instructions\">\r\n                      <p className=\"test__instructions__subheading\">\r\n                        Instructions\r\n                      </p>\r\n                      <div className=\"instructions\">\r\n                        {testRules?.map((rule, index) => (\r\n                          <p className=\"rule\" key={index}>\r\n                            <FaArrowCircleRight />{\" \"}\r\n                            <span className=\"rule__description\">\r\n                              {rule.value}\r\n                            </span>\r\n                          </p>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"gutter-row\" xs={24} sm={24} md={12} xl={12}>\r\n                  <div className=\"instructions__wrapper__right\">\r\n                    <p className=\"navigation__instructions__heading\">\r\n                      Navigation Buttons\r\n                    </p>\r\n                    <div className=\"navigation__instructions\">\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#449d44\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          Next\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          Next: By clicking the Next button, the next question will\r\n                          appear.\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#449d44\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          Previous\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          Previous: By clicking the Previous button, the previous question will\r\n                          appear.\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#ec971f\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          Flag\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          Flag: By clicking the Flag button, you can Flag a question.\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#ff4d4f\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          End Test\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          End Test: By clicking the End Test, you can end the test.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {attempted && <div className=\"test__already__attempted\">\r\n                    The test has already been attempted.\r\n                    </div>\r\n                    }\r\n                    <div className=\"select__button\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={handleButtonClick}\r\n                        disabled={attempted}\r\n                      >\r\n                        Continue\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n     tests: state.tests.attemptedTest,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TestInstruction);","import React from \"react\";\r\nimport { Row, Col, Divider, Progress } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ShowResult.css\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nfunction ShowResult(props) {\r\n  const { testName, date } = props.selectedTest;\r\n  const testInfo = props.selectedTest[0];\r\n  let marks,\r\n    name,\r\n    rightAnswers,\r\n    submitMinutes,\r\n    totalMarks,\r\n    wrongAnswers,\r\n    totalAttempt;\r\n\r\n  if (testInfo) {\r\n    marks = testInfo.correct;\r\n    rightAnswers = testInfo.correct;\r\n    submitMinutes = testInfo.submitMinutes;\r\n    totalMarks = testInfo.totalMarks;\r\n    wrongAnswers = testInfo.wrong;\r\n    totalAttempt = rightAnswers - -wrongAnswers;\r\n  }\r\n  const submitDate = new Date(date);\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <div className=\"result__wrapper\">\r\n              <div className=\"result__wrapper__header\">\r\n                <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">Test Name: </div>\r\n                  <div className=\"result__test__name__field\">{testName}</div>\r\n                </div>\r\n                <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">Total Time: </div>\r\n                  <div className=\"result__test__name__field\">\r\n                    {submitMinutes ? submitMinutes : \"XX\"} minutes\r\n                  </div>\r\n                </div>\r\n                <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">\r\n                    Test Submitted Date:{\" \"}\r\n                  </div>\r\n                  <div className=\"result__test__name__field\">\r\n                    {submitDate.toLocaleDateString(\"en-US\")}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"result__wrapper__body\">\r\n                <div className=\"percentage\">\r\n                  <div className=\"percentage__heading\">Your Score</div>\r\n                  <Progress\r\n                    percent={Math.floor((marks / totalMarks) * 100)}\r\n                    status=\"active\"\r\n                  />\r\n                </div>\r\n                <div className=\"marks__info\">\r\n                  <div className=\"marks__chart\">\r\n                    <Chart\r\n                      width={\"105%\"}\r\n                      height={\"100%\"}\r\n                      chartType=\"PieChart\"\r\n                      loader={<div>Loading Chart</div>}\r\n                      data={[\r\n                        [\"Task\", \"Hours per Day\"],\r\n                        [\"Correct\", marks / 10],\r\n                        [\"Wrong\", totalMarks / 10 - marks / 10],\r\n                      ]}\r\n                      options={{\r\n                        title: \"Marks Distribution\",\r\n                        pieHole: 0.45,\r\n                      }}\r\n                      rootProps={{ \"data-testid\": \"3\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"marks\">\r\n                    <h2 className=\"inlarge\">Marks</h2>\r\n                    <div className=\"marksBox\">\r\n                      <div className=\"obtained__marks\">\r\n                        {marks} | {totalMarks}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"attempted\">\r\n                  <div className=\"total__attempted\">\r\n                    <div className=\"percentage\">\r\n                      <div className=\"percentage__heading\">\r\n                        Attempted: {totalAttempt}{\" \"}\r\n                      </div>\r\n                      <Progress\r\n                        percent={Math.floor((totalAttempt / totalMarks) * 100)}\r\n                        status=\"active\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"correct__attempted\">\r\n                    <div className=\"percentage\">\r\n                      <div className=\"percentage__heading\">\r\n                        Correct Answers: {rightAnswers}\r\n                      </div>\r\n                      <Progress\r\n                        percent={Math.floor((rightAnswers / totalMarks) * 100)}\r\n                        status=\"active\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestResultData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ShowResult);","import { logoutUser } from \"./authActions\";\r\nexport const UPDATE_ATTEMPT_TEST_REQUEST = \"UPDATE_ATTEMPT_TEST_REQUEST\";\r\nexport const UPDATE_ATTEMPT_TEST_SUCCESS = \"UPDATE_ATTEMPT_TEST_SUCCESS\";\r\nexport const UPDATE_ATTEMPT_TEST_FAILURE = \"UPDATE_ATTEMPT_TEST_FAILURE\";\r\n\r\nconst requestUpdateTimeSpent = () => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveUpdateTimeSpent = (time) => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_SUCCESS,\r\n    time,\r\n  };\r\n};\r\n\r\nconst updateTimeSpentError = () => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_FAILURE,\r\n  };\r\n};\r\n\r\nexport const updateTimeSpentByStudent = (values) => (dispatch) => {\r\n  dispatch(requestUpdateTimeSpent());\r\n  let {\r\n    profileID,\r\n    testName,\r\n    completed,\r\n    minutes: totalTime,\r\n    _id: testID,\r\n    updatingAttemptedMinutes,\r\n  } = values;\r\n\r\n  updatingAttemptedMinutes =\r\n    updatingAttemptedMinutes !== 0 ? updatingAttemptedMinutes : 0;\r\n  console.log(parseInt(updatingAttemptedMinutes));\r\n  let subtractTime =\r\n    updatingAttemptedMinutes == 0 ? parseInt(totalTime) : parseInt(0);\r\n\r\n  let attemptedTime = Math.abs(\r\n    subtractTime - parseInt(updatingAttemptedMinutes - 1)\r\n  );\r\n\r\n  const data = { profileID, testName, completed, attemptedTime, totalTime };\r\n  console.log(completed, totalTime, data.attemptedTime);\r\n\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    body: JSON.stringify(data),\r\n  };\r\n\r\n  fetch(`/student/update-test-status/${testID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          data.obj.testStatus.map((test, index) => {\r\n            if (test.testID === testID) {\r\n              localStorage.setItem(testID, test.attemptedTime);\r\n            }\r\n          });\r\n\r\n          console.log(data.obj);\r\n          dispatch(receiveUpdateTimeSpent(localStorage.getItem(testID)));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(updateTimeSpentError());\r\n    });\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport CountdownTimer from \"react-component-countdown-timer\";\r\n\r\nexport default function Counter(props) {\r\n  const { testID, totalMinutes } = props;\r\n  let time;\r\n  if (JSON.parse(localStorage.getItem(`${testID}`)) == null) {\r\n    time = parseInt(totalMinutes) * 60;\r\n  } else {\r\n    const testData = JSON.parse(localStorage.getItem(`${testID}`));\r\n    let remainingTime = testData.rM;\r\n    time = parseInt(remainingTime * 60);\r\n  }\r\n  const handleCounterEnd =()=>{\r\n    props.handleCounter();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CountdownTimer count={time} hideDay={true} onEnd={handleCounterEnd} />\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class LeftSide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.accordionContent = [];\r\n    this.state = {\r\n      questionsData: [],\r\n      selectRef: undefined,\r\n      activateQue: 0,\r\n      leftActiveQue: 0,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      questionsData: props.questionsData,\r\n      activateQue: props.activateQue,\r\n      footerClick: props.footerClick,\r\n    };\r\n  }\r\n\r\n  changeBg = (activatedQue, answered, footerClicked) => {\r\n    if (this.state.selectRef) {\r\n      this.state.selectRef.classList.remove(\"selected\");\r\n      if (answered == false) {\r\n        this.state.selectRef.classList.remove(\"answered\");\r\n      }\r\n    }\r\n    if (this.accordionContent[activatedQue])\r\n      this.accordionContent[activatedQue].classList.add(\"selected\");\r\n    if (answered && footerClicked == false) {\r\n      this.accordionContent[activatedQue].classList.add(\"answered\");\r\n    }\r\n    this.setState({\r\n      selectRef: this.accordionContent[activatedQue],\r\n    });\r\n  };\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      nextProps === this.props &&\r\n      nextProps.activateQue == this.props.activateQue\r\n    ) {\r\n      return false;\r\n    } else if (nextProps.selectRef !== this.props.selectRef) {\r\n      return false;\r\n    } else if (nextProps.flag !== this.props.flag) {\r\n      return false;\r\n    } else {\r\n      this.changeBg(\r\n        nextProps.activateQue,\r\n        nextProps.answered,\r\n        nextProps.footerClick\r\n      );\r\n\r\n      return true;\r\n    }\r\n  }\r\n  flagQuestion = () => {\r\n    this.state.selectRef.classList.add(\"flagged\");\r\n  };\r\n  componentDidMount() {\r\n    this.props.flagClicked(this.flagQuestion);\r\n  }\r\n\r\n  setFlag = () => {\r\n    this.state.selectRef.classList.add(\"add-flag\");\r\n  };\r\n\r\n  render() {\r\n    const handleClick = (e, index) => {\r\n      if (this.state.selectRef) {\r\n        this.state.selectRef.classList.remove(\"selected\");\r\n      }\r\n\r\n      this.setState({\r\n        selectRef: this.accordionContent[index],\r\n        leftActiveQue: index,\r\n      });\r\n      this.accordionContent[index].classList.add(\"selected\");\r\n\r\n      this.props.handleQuestionClick(index);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"questions__wrapper\">\r\n          {this.state.questionsData &&\r\n            this.state.questionsData.map((question, index) => (\r\n              <div\r\n                className={`question`}\r\n                ref={(ref) => (this.accordionContent[index] = ref)}\r\n                onClick={(e) => handleClick(e, index)}\r\n                key={index}\r\n              >\r\n                {index - -1}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Radio, Input } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { submitTest } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\n\r\nclass RightSide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activateQue: 0,\r\n      questionsData: [],\r\n      changeIndex: 0,\r\n      questionIndex: 0,\r\n      selectedAnswers: Array.apply(undefined, Array(5)),\r\n      value: null,\r\n      testID: null,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      questionsData: props.questionsData,\r\n      questionIndex: props.questionIndex,\r\n      testID: props.testID,\r\n    };\r\n  }\r\n\r\n  handleClearResponse = (index) => {\r\n    let newSelectedAnswers = this.state.selectedAnswers;\r\n    console.log(newSelectedAnswers[index]);\r\n    let blankClearAttempt =\r\n      newSelectedAnswers[index] === undefined ? true : false;\r\n\r\n    newSelectedAnswers[index] = undefined;\r\n    this.setState({\r\n      selectedAnswers: newSelectedAnswers,\r\n    });\r\n    this.props.handleClearResponse(index, blankClearAttempt);\r\n  };\r\n  onChange = (e, index) => {\r\n    let newSelectedAnswers = this.state.selectedAnswers;\r\n    if (newSelectedAnswers[index] === undefined) {\r\n      this.props.questionAnswered(index, e.target.value, false);\r\n    } else {\r\n      this.props.questionAnswered(index, e.target.value, true);\r\n    }\r\n    newSelectedAnswers[index] = e.target.value;\r\n    this.setState({\r\n      value: e.target.value,\r\n      selectedAnswers: newSelectedAnswers,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  changeActivatedQueInChild = (changeActivatedQue) => {\r\n    if (changeActivatedQue === \"next__question\") {\r\n      console.log(\"insdie if\");\r\n      console.log(this.state.questionsData.length, this.state.activateQue);\r\n      if (this.state.activateQue < this.state.questionsData.length - 1) {\r\n        this.setState({\r\n          activateQue: this.state.activateQue + 1,\r\n        });\r\n        this.props.changeParentActivatedQue(this.state.activateQue + 1);\r\n      }\r\n    } else if (changeActivatedQue === \"previous__question\") {\r\n      if (this.state.activateQue > 0) {\r\n        this.setState({\r\n          activateQue: this.state.activateQue - 1,\r\n        });\r\n        this.props.changeParentActivatedQue(this.state.activateQue - 1);\r\n      }\r\n    } else if (changeActivatedQue === \"flag__question\") {\r\n    } else if (changeActivatedQue === \"end__test\") {\r\n    } else {\r\n      this.setState({\r\n        activateQue: changeActivatedQue,\r\n      });\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n  submitTest = () => {\r\n    const {\r\n      userAnswers,\r\n      answers,\r\n      testName,\r\n      testID,\r\n      profileID,\r\n      firstName,\r\n      lastName,\r\n    } = this.props;\r\n    let correct = 0,\r\n      wrong = 0,\r\n      unanswered = 0,\r\n      totalMarks = answers.length,\r\n      dataToSubmit;\r\n\r\n    userAnswers.map((element, index) => {\r\n      if (element === undefined) {\r\n        unanswered = unanswered + 1;\r\n      } else if (element !== answers[index]) {\r\n        wrong = wrong + 1;\r\n      } else {\r\n        correct = correct + 1;\r\n      }\r\n      dataToSubmit = {\r\n        testID,\r\n        correct,\r\n        unanswered,\r\n        totalMarks,\r\n        profileID,\r\n        testName,\r\n        firstName,\r\n        lastName,\r\n        wrong,\r\n      };\r\n    });\r\n    this.props.submitTest(dataToSubmit);\r\n    this.props.signOut();\r\n    return;\r\n  };\r\n  render() {\r\n    const radioStyle = {\r\n      display: \"block\",\r\n      height: \"30px\",\r\n      lineHeight: \"30px\",\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"descripiton__wrapper\">\r\n          <div className=\"question__no\">\r\n            Question {this.state.activateQue + 1} out of {this.state.questionsData.length}\r\n          </div>\r\n          {this.state.questionsData &&\r\n            this.state.questionsData.map((question, index) => {\r\n              if (this.state.activateQue === index) {\r\n                return (\r\n                  <div className=\"description__box\" key={index}>\r\n                    <div className=\"descripiton\"> {question.description}</div>\r\n                    <div className=\"options\">\r\n                      <Radio.Group\r\n                        onChange={(e) => this.onChange(e, index)}\r\n                        value={this.state.selectedAnswers[index]}\r\n                      >\r\n                        <Radio style={radioStyle} value={1}>\r\n                          {question.options[0].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={2}>\r\n                          {question.options[1].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={3}>\r\n                          {question.options[2].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={4}>\r\n                          {question.options[3].option}\r\n                        </Radio>\r\n                      </Radio.Group>\r\n                      <div\r\n                        className=\"clear__response\"\r\n                        onClick={() => this.handleClearResponse(index)}\r\n                      >\r\n                        {<CloseOutlined />} Clear Response\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n    profileID: state.auth.user ? state.auth.profileID : null,\r\n    firstName: state.auth.user.firstName,\r\n    lastName: state.auth.user.lastName,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    submitTest: (data) => dispatch(submitTest(data)),\r\n    signOut: () => dispatch(logoutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSide);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Footer extends Component {\r\n  handleNext = (e) => {\r\n    this.props.handleFooterButtons(e.currentTarget.classList[0]);\r\n  };\r\n  submitTest = () => {\r\n    this.props.handleSubmitTest();\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"footer__wrapper\">\r\n          <div className=\"left__footer\">\r\n            <div\r\n              className=\"previous__question box\"\r\n              onClick={(e) => this.handleNext(e)}\r\n            >\r\n              Previous\r\n            </div>\r\n            <div\r\n              className=\"flag__question box\"\r\n              onClick={(e) => this.handleNext(e)}\r\n            >\r\n              Flag\r\n            </div>\r\n            <div\r\n              className=\"next__question box\"\r\n              onClick={(e) => this.handleNext(e)}\r\n            >\r\n              Next\r\n            </div>\r\n          </div>\r\n          <div className=\"right__footer\">\r\n            <div className=\"end__test box\" onClick={this.submitTest}>\r\n              End Test\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\r\nimport \"./HandleLiveTest.css\";\r\nimport LeftSide from \"./LeftSide\";\r\nimport RightSide from \"./RightSide\";\r\nimport Footer from \"./Footer\";\r\nimport Counter from \"./Counter\";\r\n\r\nclass HandleLiveTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      testID: undefined,\r\n      totalMinutes: undefined,\r\n      questionsData: [],\r\n      answers: [],\r\n      totalScore: 0,\r\n      footerClick: false,\r\n      activateQue: 0,\r\n      totalAnswered: 0,\r\n      answered: false,\r\n      totalPending: null,\r\n      totalFlagged: 0,\r\n      questionIndex: 0,\r\n      flag: 0,\r\n      testName: null,\r\n      userAnswers: Array.apply(undefined, Array(5)),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // make a call using redux\r\n    this.props.counterEnd(this.submitTestOnCounterEnd);\r\n\r\n    this.setState({\r\n      questionsData: this.props.selectedTest.questions,\r\n      answers: this.props.selectedTest.answers,\r\n      testID: this.props.testID,\r\n      testName: this.props.selectedTest.testName,\r\n      totalPending: this.props.selectedTest.questions.length,\r\n    });\r\n    // fire function given by redux\r\n  }\r\n\r\n  changeActivatedQueFromFooter = (changeActivatedQue) => {\r\n    if (changeActivatedQue !== \"flag__question\") {\r\n      this.setState({\r\n        footerClick: true,\r\n      });\r\n      this.child.changeActivatedQueInChild(changeActivatedQue);\r\n    } else {\r\n      this.triggerFlag();\r\n      if (this.state.flag <= this.state.questionsData.length) {\r\n        this.setState({\r\n          flag: this.state.flag + 1,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  handleSubmitTest = () => {\r\n    this.child.submitTest();\r\n  };\r\n  changeParentActivatedQue = (index) => {\r\n    this.setState({\r\n      activateQue: index,\r\n      footerClick: true,\r\n    });\r\n  };\r\n  submitTestOnCounterEnd = () => {\r\n    this.handleSubmitTest();\r\n  };\r\n\r\n  handleFooterButtons = (buttonClicked) => {\r\n    this.changeActivatedQueFromFooter(buttonClicked);\r\n  };\r\n\r\n  handleClearResponse = (index, blankClearAttempt) => {\r\n    if (!blankClearAttempt) {\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = undefined;\r\n      this.setState({\r\n        totalAnswered: this.state.totalAnswered - 1,\r\n        totalPending: this.state.totalPending + 1,\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: false,\r\n      });\r\n    }\r\n  };\r\n  questionAnswered = (index, option, changed) => {\r\n    if (!changed) {\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = option;\r\n      this.setState({\r\n        totalAnswered: this.state.totalAnswered + 1,\r\n        totalPending: this.state.totalPending - 1,\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: true,\r\n      });\r\n    } else {\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = option;\r\n      this.setState({\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: true,\r\n      });\r\n    }\r\n  };\r\n  handleQuestionClick = (index) => {\r\n    this.child.changeActivatedQueInChild(index);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"question_board\">\r\n          <div className=\"left__side\">\r\n            <div className=\"test__info\">\r\n              <div className=\"username\"></div>\r\n              <div className=\"test__name\">\r\n                TestName: <span className=\"danger\">{this.props.testName}</span>\r\n              </div>\r\n              <div className=\"total__minutes\">\r\n                Total Minutes:{\" \"}\r\n                <span className=\"danger\">{this.props.totalMinutes}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"questions__status\">\r\n              <div className=\"total__answered box\">\r\n                <span className=\"count__answered\">\r\n                  {this.state.totalAnswered}{\" \"}\r\n                </span>\r\n                Answered\r\n              </div>\r\n              <div className=\"total__flagged box\">\r\n                <span className=\"count__flagged\">{this.state.flag} </span>\r\n                Flagged\r\n              </div>\r\n              <div className=\"total__pending box\">\r\n                <span className=\"count__pending\">\r\n                  {this.state.totalPending}{\" \"}\r\n                </span>\r\n                Pending\r\n              </div>\r\n            </div>\r\n            <LeftSide\r\n              questionsData={this.state.questionsData}\r\n              handleQuestionClick={this.handleQuestionClick}\r\n              activateQue={this.state.activateQue}\r\n              answered={this.state.answered}\r\n              footerClick={this.state.footerClick}\r\n              onRef={(ref) => (this.child = ref)}\r\n              flagClicked={(click) => (this.triggerFlag = click)}\r\n              flag={this.state.flag}\r\n            />\r\n          </div>\r\n          <RightSide\r\n            questionsData={this.state.questionsData}\r\n            questionAnswered={this.questionAnswered}\r\n            questionIndex={this.state.questionIndex}\r\n            handleClearResponse={this.handleClearResponse}\r\n            onRef={(ref) => (this.child = ref)}\r\n            changeParentActivatedQue={this.changeParentActivatedQue}\r\n            userAnswers={this.state.userAnswers}\r\n            answers={this.state.answers}\r\n            testID={this.state.testID}\r\n            testName={this.state.testName}\r\n          />\r\n          <div className=\"footer\">\r\n            <Footer\r\n              handleFooterButtons={this.handleFooterButtons}\r\n              handleSubmitTest={this.handleSubmitTest}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateTimer: (data) => dispatch(updateTimeSpentByStudent(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HandleLiveTest);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\r\nimport Counter from \"./Counter\";\r\nimport HandleLiveTest from \"./HandleLiveTest\";\r\n\r\nclass TestPreview extends Component {\r\n  state = {\r\n    testName: this.props.selectedTest.testName,\r\n    minutes: this.props.selectedTest.minutes,\r\n    _id: this.props.selectedTest._id,\r\n    intervalId: null,\r\n    timer: this.props.timer,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadData(this.state._id);\r\n    const intervalID = setInterval(this.loadData.bind(this), 60000);\r\n    this.setState({ intervalId: intervalID, timer: this.state.timer });\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.intervalId);\r\n  }\r\n  handleCounter =()=>{\r\n    this.clickChild();\r\n  }\r\n\r\n  loadData() {\r\n    try {\r\n      //   let testName, minutes, _id;\r\n      let testName, tM, _id, rM;\r\n      if (JSON.parse(localStorage.getItem(this.state._id)) === null) {\r\n        testName = this.state.testName;\r\n        tM = this.state.minutes;\r\n        _id = this.state._id;\r\n        rM = tM;\r\n        localStorage.setItem(\r\n          `${_id}`,\r\n          JSON.stringify({ testName, _id, tM, rM })\r\n        );\r\n      } else {\r\n        const testData = JSON.parse(localStorage.getItem(`${this.state._id}`));\r\n\r\n        let { testName, tM, _id, rM } = testData;\r\n        rM = rM - 1;\r\n        localStorage.setItem(\r\n          `${_id}`,\r\n          JSON.stringify({ testName, _id, tM, rM })\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  \r\n \r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Counter testID={this.state._id} totalMinutes={this.state.minutes} handleCounter ={this.handleCounter}/>\r\n        <HandleLiveTest\r\n          testID={this.state._id}\r\n          totalMinutes={this.state.minutes}\r\n          testName={this.state.testName}\r\n          testName={this.state.testName}\r\n          totalMinutes={this.state.minutes}\r\n          counterEnd ={click => this.clickChild = click}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n    timer: state.userAttemptedTime.attemptedTime,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateTimer: (data) => dispatch(updateTimeSpentByStudent(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPreview);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TestPreview from \"./TestPreview\";\r\nfunction TestPreviewWrapper(props) {\r\n  const { selectedTest } = props;\r\n  const isSelected = Object.keys(selectedTest).length == 0 ? false : true;\r\n  return (\r\n    <>{isSelected ? <TestPreview /> : <p>Please select a test first</p>}</>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TestPreviewWrapper);","import React, { Component } from \"react\";\r\nimport { Row, Col, Form, Input, Avatar, Popover } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Profile.css\";\r\nimport { Roles } from \"../Roles/roles\";\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: undefined,\r\n      lastName: undefined,\r\n      email: undefined,\r\n      phone: undefined,\r\n      role: undefined,\r\n      section: undefined\r\n    };\r\n  }\r\n  submitForm = (values) => {\r\n    console.log(values);\r\n  };\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      firstName: props.user.firstName,\r\n      lastName: props.user.lastName,\r\n      email: props.user.email,\r\n      phone: props.user.phone,\r\n      role: props.user.role,\r\n      section: props.user.section,\r\n      className: props.user.className,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row justify=\"center\" align=\"middle\" className=\"hero\">\r\n          <Col xs={22} sm={22} md={8} lg={8} className=\"signup__container\">\r\n            <div className=\"avatar-wrapper\">\r\n              <Avatar\r\n                size={{ xs: 80, sm: 80, md: 80, lg: 80, xl: 90, xxl: 100 }}\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/b/bc/Unknown_person.jpg\"\r\n                className=\"profile-image\"\r\n              />\r\n              <p\r\n                className=\"profile__heading\"\r\n                style={{ margin: 0, textAlign: \"center\" }}\r\n              >\r\n                Your Profile\r\n              </p>\r\n            </div>\r\n            <Form\r\n              name=\"basic\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={this.submitForm}\r\n            >\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item>\r\n                  <Input\r\n                    placeholder=\"First Name\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.firstName}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Input\r\n                    placeholder=\"Last Name\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.lastName}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n              <Form.Item>\r\n                <Input\r\n                  placeholder=\"abcd@gmail.com\"\r\n                  readonly=\"readOnly\"\r\n                  value={this.state.email}\r\n                  className=\"input\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Input\r\n                  type=\"tel\"\r\n                  placeholder=\"7275XXXXXX\"\r\n                  readonly=\"readOnly\"\r\n                  value={this.state.phone}\r\n                  className=\"input\"\r\n                />\r\n              </Form.Item>\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item>\r\n                  <Input\r\n                    placeholder=\"Role\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.role}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  className={Roles.teacher === this.state.role ? \"hidden\" : \"\"}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Class\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.className}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  className={Roles.teacher === this.state.role ? \"hidden\" : \"\"}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Section\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.section}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.auth.user ? state.auth.user : null,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React, { useState } from \"react\";\r\nimport { AiFillPlusCircle } from \"react-icons/ai\";\r\nimport { Input, Popover } from \"antd\";\r\n\r\nexport default function Rules(props) {\r\n  const [rule, setRule] = useState(\"\");\r\n  const submitInput = (\r\n    <div>\r\n      <p className=\"verified-popover \">Add Rule</p>\r\n    </div>\r\n  );\r\n\r\n  const handleOnChnage = (e) => {\r\n    setRule(e.target.value);\r\n  };\r\n  const handleAddRule = () => {\r\n    if (rule !== \"\") {\r\n      props.addRule(rule);\r\n      setRule(\"\");\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"rules__wrapper\">\r\n        <div className=\"options__wrapper\">\r\n          <Input\r\n            placeholder=\"Write your rule for test\"\r\n            className=\"input\"\r\n            value={rule}\r\n            onChange={handleOnChnage}\r\n            style={{ margin: \"0 5px\" }}\r\n          />\r\n          <div className=\"add__new\" onClick={handleAddRule}>\r\n            {\r\n              <Popover content={submitInput}>\r\n                <AiFillPlusCircle className=\"success\" />\r\n              </Popover>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Input, Popover } from \"antd\";\r\nimport { AiFillPlusCircle } from \"react-icons/ai\";\r\n\r\nexport default function Questions(props) {\r\n  const [questionDescripiton, setQuestionDescripiton] = useState(\"\");\r\n  const [opiton1, setOption1] = useState(\"\");\r\n  const [opiton2, setOption2] = useState(\"\");\r\n  const [opiton3, setOption3] = useState(\"\");\r\n  const [opiton4, setOption4] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const submitInput = (\r\n    <div>\r\n      <p className=\"verified-popover \">Add Question (Note: Add at least 1 Question)</p>\r\n    </div>\r\n  );\r\n\r\n  const handleOnChangeQuestion = (e) => {\r\n    setQuestionDescripiton(e.target.value);\r\n  };\r\n  const handleOption1 = (e) => {\r\n    setOption1(e.target.value);\r\n  };\r\n  const handleOption2 = (e) => {\r\n    setOption2(e.target.value);\r\n  };\r\n  const handleOption3 = (e) => {\r\n    setOption3(e.target.value);\r\n  };\r\n  const handleOption4 = (e) => {\r\n    setOption4(e.target.value);\r\n  };\r\n  const handleAnswer = (e) => {\r\n    setAnswer(e.target.value);\r\n  };\r\n  const handleAddQuestion = () => {\r\n    const questionData = {\r\n      questionDescripiton,\r\n      opiton1,\r\n      opiton2,\r\n      opiton3,\r\n      opiton4,\r\n      answer,\r\n    };\r\n\r\n    props.addQuestion(questionData);\r\n    console.log(questionData);\r\n    setQuestionDescripiton(\"\");\r\n    setOption1(\"\");\r\n    setOption2(\"\");\r\n    setOption3(\"\");\r\n    setOption4(\"\");\r\n    setAnswer(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"rules__wrapper\">\r\n        <div className=\"options__wrapper \">\r\n          <Input.TextArea\r\n            placeholder=\"Question Description\"\r\n            className=\"input \"\r\n            value={questionDescripiton}\r\n            onChange={handleOnChangeQuestion}\r\n            style={{ margin: \"0 5px\" }}\r\n          />\r\n          <div className=\"add__new\" onClick={handleAddQuestion}>\r\n            {\r\n              <Popover content={submitInput}>\r\n                <AiFillPlusCircle className=\"success\" />\r\n              </Popover>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"question__options\">\r\n          <Input\r\n            placeholder=\"Option 1\"\r\n            className=\"input option\"\r\n            value={opiton1}\r\n            onChange={handleOption1}\r\n            style={{ margin: \"10 5px\" }}\r\n          />\r\n          <Input\r\n            placeholder=\"Option 2\"\r\n            className=\"input option\"\r\n            value={opiton2}\r\n            onChange={handleOption2}\r\n            style={{ margin: \"10 5px\" }}\r\n          />\r\n          <Input\r\n            placeholder=\"Option 3\"\r\n            className=\"input option\"\r\n            value={opiton3}\r\n            onChange={handleOption3}\r\n            style={{ margin: \"10 5px\" }}\r\n          />\r\n          <Input\r\n            placeholder=\"Option 4\"\r\n            className=\"input option\"\r\n            value={opiton4}\r\n            onChange={handleOption4}\r\n            style={{ margin: \"10 5px\" }}\r\n          />\r\n          <Input\r\n            placeholder=\"Enter Correct Option No. i.e 1, 2 etc\"\r\n            type=\"number\"\r\n            className=\"input option\"\r\n            value={answer}\r\n            onChange={handleAnswer}\r\n            style={{ margin: \"10 5px\" }}\r\n            min={1}\r\n            max={4}\r\n            \r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Input, Popover } from \"antd\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\n\r\nexport default function RenderData(props) {\r\n  const { ruleData, questionData, question, rules } = props;\r\n\r\n  const handleClick = (index) => {\r\n    props.clickedRule(index);\r\n  };\r\n  return (\r\n    <div className=\"renderData__wrapper\">\r\n      {rules\r\n        ? ruleData &&\r\n          ruleData.map((item, index) => (\r\n            <div key={index}>\r\n              <p className=\"sub__render__heading\">Rule {index + 1}</p>\r\n              <div className=\"render__item\">\r\n                <Input\r\n                  readonly=\"readOnly\"\r\n                  value={item.value}\r\n                  className=\"input\"\r\n                  style={{ margin: \"0 5px\" }}\r\n                />\r\n                <TiDelete\r\n                  className=\"danger\"\r\n                  onClick={() => handleClick(index)}\r\n                  style={{ fontSize:\"30px\"}}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))\r\n        : questionData &&\r\n          questionData.map((item, index) => (\r\n            <div key={index}>\r\n              <p className=\"sub__render__heading\">Question {index + 1}</p>\r\n              <div className=\"render__item\">\r\n                <Input.TextArea\r\n                  readonly=\"readOnly\"\r\n                  value={item.questionDescripiton}\r\n                  className=\"input\"\r\n                  style={{ margin: \"0 5px\" }}\r\n                />\r\n                <TiDelete\r\n                  className=\"danger\"\r\n                  onClick={() => handleClick(index)}\r\n                  style={{ fontSize:\"30px\"}}\r\n                />\r\n              </div>\r\n              <div className=\"question__options\">\r\n                <Input\r\n                  className=\"input option\"\r\n                  value={item.opiton1}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n                <Input\r\n                  className=\"input option\"\r\n                  value={item.opiton2}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n                <Input\r\n                  className=\"input option\"\r\n                  value={item.opiton3}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n                <Input\r\n                  className=\"input option\"\r\n                  value={item.opiton4}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n                <Input\r\n                  type=\"number\"\r\n                  className=\"input option\"\r\n                  value={item.answer}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n    </div>\r\n  );\r\n}\r\n","import { logoutUser } from \"./authActions\";\r\n// Submit Test action types\r\nexport const SUBMIT_TEST_REQUEST = \"SUBMIT_TEST_REQUEST\";\r\nexport const SUBMIT_TEST_SUCCESS = \"SUBMIT_TEST_SUCCESS\";\r\nexport const SUBMIT_TEST_FAILURE = \"SUBMIT_TEST_FAILURE\";\r\n\r\n//Assigned Test action types\r\nexport const ASSIGNED_TEST_REQUEST = \"ASSIGNED_TEST_REQUEST\";\r\nexport const ASSIGNED_TEST_SUCCESS = \"ASSIGNED_TEST_SUCCESS\";\r\nexport const ASSIGNED_TEST_FAILURE = \"ASSIGNED_TEST_FAILURE\";\r\n\r\nexport const SET_TEST_CREATED_FALSE = \"SET_TEST_CREATED_FALSE\";\r\n\r\nconst requestSubmitTest = () => {\r\n  return {\r\n    type: SUBMIT_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveSubmitTest = (user, profileID) => {\r\n  return {\r\n    type: SUBMIT_TEST_SUCCESS,\r\n  };\r\n};\r\n\r\nconst submitTestError = () => {\r\n  return {\r\n    type: SUBMIT_TEST_FAILURE,\r\n  };\r\n};\r\n\r\nconst requestAssignedTest = () => {\r\n  return {\r\n    type: ASSIGNED_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveAssignedTest = (tests) => {\r\n  return {\r\n    type: ASSIGNED_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nconst AssignedTestError = () => {\r\n  return {\r\n    type: ASSIGNED_TEST_FAILURE,\r\n  };\r\n};\r\n\r\nconst setTestCreatedFalse = () => {\r\n  return {\r\n    type: SET_TEST_CREATED_FALSE,\r\n  };\r\n};\r\n\r\nexport const submitTest = (values) => (dispatch) => {\r\n  console.log(values);\r\n\r\n  dispatch(requestSubmitTest());\r\n\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    body: JSON.stringify(values),\r\n  };\r\n  fetch(\"/teacher/create-test\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data?.error?.name === \"TokenExpiredError\") {\r\n        dispatch(logoutUser());\r\n      } else {\r\n        dispatch(receiveSubmitTest(data.user));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(submitTestError());\r\n    });\r\n};\r\n\r\nexport const fetchAssignedTests = (profileID) => async (dispatch) => {\r\n  dispatch(requestAssignedTest());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/teacher/tests/${profileID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          dispatch(receiveAssignedTest(data.obj));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(AssignedTestError());\r\n    });\r\n};\r\n\r\nexport const testCreatedFalse = () => async (dispatch) => {\r\n  dispatch(setTestCreatedFalse());\r\n};","import React, { Component } from \"react\";\r\nimport { Row, Col, Form, Input, Button, Select, notification } from \"antd\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Rules from \"./Rules\";\r\nimport Questions from \"./Questions\";\r\nimport RenderData from \"./RenderData\";\r\nimport { submitTest, testCreatedFalse } from \"../../actions/TeacherActions\";\r\n\r\nclass CreateTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rules: [],\r\n      questions: [],\r\n      isLoading: false,\r\n      testCreated: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      isLoading: props.isLoading,\r\n      testCreated: props.testCreated,\r\n    };\r\n  }\r\n\r\n  submitForm = (values) => {\r\n    let questions = [];\r\n    let answers = [];\r\n    console.log(values);\r\n\r\n    const {\r\n      testName,\r\n      category,\r\n      className,\r\n      section,\r\n      minutes,\r\n      outOfMarks,\r\n    } = values;\r\n\r\n\r\n    questions = this.state.questions.map((question, index) => {\r\n      return {\r\n        description: question.questionDescripiton,\r\n        options: [\r\n          {\r\n            option: question.opiton1,\r\n          },\r\n          {\r\n            option: question.opiton2,\r\n          },\r\n          {\r\n            option: question.opiton3,\r\n          },\r\n          {\r\n            option: question.opiton4,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n    this.state.questions.map((question, index) => {\r\n      answers.push(parseInt(question.answer));\r\n    });\r\n    const teacherId = this.props.teacherID;\r\n    const rules = this.state.rules;\r\n\r\n    const sendData = {\r\n      teacherId,\r\n      testName,\r\n      category,\r\n      className,\r\n      section,\r\n      rules,\r\n      testCreated: false,\r\n      minutes,\r\n      outOfMarks,\r\n      questions,\r\n      answers,\r\n    };\r\n\r\n    this.props.submitTest(sendData);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  handleSelect = (select, optionData) => {};\r\n\r\n  handleDeleteRule = (Removeindex) => {\r\n    \r\n    this.setState({\r\n      rules: this.state.rules.filter((item, index) => index !== Removeindex),\r\n    });\r\n  };\r\n  handleDeleteQuestion = (Removeindex) => {\r\n  \r\n    this.setState({\r\n      questions: this.state.questions.filter((item, index) => index !== Removeindex),\r\n    });\r\n  };\r\n  addRule = (value) => {\r\n    this.setState({\r\n      rules: [...this.state.rules, { value }],\r\n    });\r\n  };\r\n\r\n\r\n  openNotification = () => {\r\n    const args = {\r\n      message: \"Test Created!\",\r\n      description: \"Congratulations, your test is created successfully.\",\r\n      duration: 3,\r\n    };\r\n    notification.open(args);\r\n  };\r\n\r\n  addQuestion = ({\r\n    questionDescripiton,\r\n    opiton1,\r\n    opiton2,\r\n    opiton3,\r\n    opiton4,\r\n    answer,\r\n  }) => {\r\n    this.setState({\r\n      questions: [\r\n        ...this.state.questions,\r\n        { questionDescripiton, opiton1, opiton2, opiton3, opiton4, answer },\r\n      ],\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(){\r\n    if (this.props.testCreated) {\r\n      this.props.testCreatedFalse()\r\n      this.openNotification();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { Option } = Select;\r\n\r\n    return (\r\n      <>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Col xs={22} sm={22} md={10} lg={10} className=\"signup__container\">\r\n            <p className=\"sub-title__signup\"> Create Test</p>\r\n            <Form\r\n              name=\"basic\"\r\n              className=\"create__test__form\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={this.submitForm}\r\n              onFinishFailed={this.onFinishFailed}\r\n            >\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item\r\n                  name=\"testName\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Enter Test Name!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Test Name\" className=\"input\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"outOfMarks\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter total marks!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Total Marks\"\r\n                    className=\"input\"\r\n                    type=\"number\"\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n              <Form.Item\r\n                name=\"category\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter a category\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Catergory of Test\" className=\"input\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"minutes\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter total duration of test\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  placeholder=\"Duration of test ( in Minutes )\"\r\n                  className=\"input\"\r\n                  type=\"number\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item\r\n                  name=\"section\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your section!\" },\r\n                  ]}\r\n                >\r\n                  <Select defaultValue=\"Section\">\r\n                    <Option value=\"A\">A</Option>\r\n                    <Option value=\"B\">B</Option>\r\n                    <Option value=\"C\">C</Option>\r\n                    <Option value=\"D\">D</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"className\"\r\n                  rules={[{ required: true, message: \"Please select a class\" }]}\r\n                >\r\n                  <Select defaultValue=\"Class\">\r\n                  <Option value=\"V\">V</Option>\r\n                  <Option value=\"VI\">VI</Option>\r\n                  <Option value=\"VII\">VII</Option>\r\n                  <Option value=\"VIII\">VIII</Option>\r\n                  <Option value=\"IX\">IX</Option>\r\n                  <Option value=\"X\">X</Option>\r\n                  <Option value=\"XI\">XI</Option>\r\n                  <Option value=\"XII\">XII</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </div>\r\n              <p className=\"primary-wihtoutFont\" style={{ fontWeight: \"500\" }}>\r\n                {\" \"}\r\n                Test Rules\r\n              </p>\r\n              <RenderData\r\n                ruleData={this.state.rules}\r\n                rules={true}\r\n                clickedRule={this.handleDeleteRule}\r\n              />\r\n              <Form.Item>\r\n                <Rules addRule={this.addRule} />\r\n              </Form.Item>\r\n              <p className=\"primary-wihtoutFont\" style={{ fontWeight: \"500\" }}>\r\n                {\" \"}\r\n                Test Questions\r\n              </p>\r\n              <RenderData\r\n                questionData={this.state.questions}\r\n                questions={true}\r\n                clickedRule={this.handleDeleteQuestion}\r\n              />\r\n              <Form.Item>\r\n                <Questions addQuestion={this.addQuestion} />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  loading={this.state.isLoading}\r\n                  className=\"sign__up\"\r\n                  htmlType=\"submit\"\r\n                  disabled={(this.state.questions.length<1)?(true):(false)}\r\n                >\r\n                  {this.state.isLoading ? \"Creating Test\" : \"Create Test\"}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    teacherID: state.auth.profileID,\r\n    isLoading: state.teacher.isLoadingTest,\r\n    testCreated: state.teacher.testCreated,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    submitTest: (values) => dispatch(submitTest(values)),\r\n    testCreatedFalse: () => dispatch(testCreatedFalse()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTest);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport SearchBox from \"../../homeComponents/SearchBox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nexport default function TestList(props) {\r\n  const history = useHistory();\r\n  const [tests, setTests] = useState([]);\r\n  const [searchTests, setSearchTests] = useState([]);\r\n  const [searching, setSearching] = useState(\"\");\r\n  const heading = props.heading;\r\n\r\n  useEffect(() => {\r\n    setTests(props.tests.reverse());\r\n  }, [props]);\r\n\r\n  const handleListData = (searchTerm) => {\r\n    if (searchTerm === \"\") setSearching(searchTerm);\r\n    else {\r\n      setSearching(true);\r\n      setSearchTests(\r\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\r\n      );\r\n    }\r\n  };\r\n\r\n  let selectRef,\r\n    selectedData = {};\r\n\r\n  const handleButtonClick = () => {\r\n    props.handleSelectedTest(selectedData);\r\n    history.push(\r\n      `/test-status/${selectedData.testName\r\n        ?.replace(/\\s+/g, \"-\")\r\n        .toLowerCase()}`\r\n    );\r\n  };\r\n\r\n  const handleSelectTest = (e, index) => {\r\n    if (selectRef) {\r\n      selectRef.classList.remove(\"selected__test\");\r\n    }\r\n    selectRef = e.currentTarget;\r\n    e.currentTarget.classList.add(\"selected__test\");\r\n    selectedData = tests[index];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__wrapper\">\r\n        <p className=\"test__wrapper__heading\">{heading}</p>\r\n        <div className=\"select__test__search__box\">\r\n          <p className=\"search__box__heading\">Search Test</p>\r\n          {<SearchBox handleListData={handleListData} />}\r\n          {tests.length == 0 && \r\n            <div className=\"no__results\">\r\n            No results found.\r\n            </div>\r\n          }\r\n          {tests.length > 0 &&\r\n          <div className=\"test__wrapper__body\">\r\n            <p className=\"test__wrapper__heading select__heading\">\r\n              Select Test\r\n            </p>\r\n            <div className=\"select__test__body\">\r\n              {tests.length > 0 ? (\r\n                searching !== \"\" ? (\r\n                  searchTests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Nov 26 2021 11:30AM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Nov 29 2021 10:30 PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  tests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Nov 26 2021 11:30AM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Nov 29 2021 10:30 PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <div className=\"select__skeleton\">\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          }\r\n        </div>\r\n        {tests.length > 0 &&\r\n        <div className=\"select__button\">\r\n          <Button type=\"primary\" onClick={handleButtonClick}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { fetchAssignedTests } from \"../../actions/TeacherActions\";\r\nimport { selectedAssignedTest } from \"../../actions/selectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./SelectTest.css\";\r\nimport TestList from \"./TestList\";\r\n\r\nfunction SelectTest(props) {\r\n  const { tests, profileID } = props;\r\n  const heading = \"Assigned Tests\";\r\n\r\n  const handleSelectedTest = (testData) => {\r\n    props.selectedTest(testData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__container\">\r\n        <TestList \r\n        tests={tests} \r\n        heading={heading} \r\n        handleSelectedTest={handleSelectedTest} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tests: state.teacher.assignedTests,\r\n    \r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchAssignedTests(profileID)),\r\n    selectedTest: (testData) => dispatch(selectedAssignedTest(testData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectTest from \"./SelectTest\";\r\n\r\nfunction AssignedTestsWrapper(props) {\r\n  const { profileID } = props;\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <SelectTest profileID={profileID} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profileID: state.auth.user ? state.auth.profileID : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(AssignedTestsWrapper);\r\n","import React from \"react\";\r\nimport { Col } from \"antd\";\r\nimport \"./StudentStatus.css\";\r\n\r\nexport default function StudentStatus(props) {\r\n  const student = props.student;\r\n  const testName = props.testName;\r\n  const totalMarks = student.totalMarks;\r\n  const correct = student.correct;\r\n  const wrong = student.wrong;\r\n  const percentage = Math.floor((correct / totalMarks) * 100)\r\n  return (\r\n    <>\r\n      <Col className=\"gutter-row gutter-col-adder\" sm={24} xs={24} md={6} lg={6}>\r\n        <div className=\"student__status__wrapper\">\r\n          <div className=\"status__header\">\r\n            <p className=\"status__header__heading\">\r\n              {student.firstName.toUpperCase()} {student.lastName.toUpperCase()}\r\n            </p>\r\n          </div>\r\n          <div className=\"student__status__body\">\r\n            <div className=\"status__test\">\r\n              Test Name: <span className=\"status__testname\"> {testName}</span>\r\n            </div>\r\n            <div className=\"status__test__total\">\r\n              Total Marks:{\" \"}\r\n              <span className=\"status__testname\">{totalMarks}</span>\r\n            </div>\r\n            <div className=\"status__test__obtained\">\r\n              Obtained Marks:{\" \"}\r\n              <span className=\"status__testname\">{correct}/{totalMarks}</span>\r\n            </div>\r\n            <div className=\"status__test__total\">\r\n              Percentage:{\" \"}\r\n              <span className=\"status__testname\">{percentage}%</span>\r\n            </div>\r\n            <div className=\"status__test__correct\">\r\n              Correct Answers:{\" \"}\r\n              <span className=\"status__testname success-wihtoutFont\">\r\n                {correct}\r\n              </span>\r\n            </div>\r\n            <div className=\"status__test__wrong\">\r\n              Wrong Answers:{\" \"}\r\n              <span className=\"status__testname danger\">{wrong}</span>\r\n            </div>\r\n            <div className=\"status__test__unanswered\">\r\n              Not Answered:{\" \"}\r\n              <span className=\"status__testname primary-wihtoutFont\">\r\n                {totalMarks - (correct - - wrong)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </>\r\n  );\r\n}","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport StudentStatus from \"./StudentStatus\";\r\n\r\nfunction TestStatus(props) {\r\n  console.log(props.selectedTest);\r\n  const style = { background: \"#0092ff\", padding: \"8px 0\" };\r\n  const students = props.selectedTest.submitBy;\r\n  const className = props.selectedTest.className;\r\n  const testName = props.selectedTest.testName;\r\n  return (\r\n    <>\r\n      <div className=\"container student__status\">\r\n        <div className=\"className__container\">\r\n          Assigned to: {className}\r\n        </div>\r\n        {students.length == 0 && <div className=\"no__results\">\r\n          No Student Records found.\r\n          </div>\r\n        }\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          {students.length > 0 &&\r\n            students.map((student, index) => (\r\n              <StudentStatus\r\n                testName={testName}\r\n                student={student}\r\n                key={index}\r\n              />\r\n            ))}\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedAssignedTestData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TestStatus);","import React, { useEffect, useState } from \"react\";\r\nimport Home from \"../home/Home\";\r\nimport Login from \"../logIn/Login\";\r\nimport Signup from \"../signUp/Signup\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport ProtectedRoute from \"../protectedRoute/ProtectedRoute\";\r\nimport StudentDashboard from \"../dashboard/Dashboard\";\r\nimport TeacherDashboard from \"../Teacher/Dashboard/Dashboard\";\r\nimport AttemptTest from \"../attemptTest/AttemptTest\";\r\nimport Navbar from \"../navbar\";\r\nimport Result from \"../result/ResultWrapper\";\r\nimport TestInstruction from \"../TestInstructions/TestInstruction\";\r\nimport IndividualResult from \"../result/ShowResult\";\r\nimport TestPreviewWrapper from \"../testPreview/TestPreviewWrapper\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Profile from \"../profile/Profile\";\r\nimport { Roles } from \"../Roles/roles\";\r\nimport CreateTest from \"../Teacher/CreateTest/CreateTest\";\r\nimport AssignedTestsWrapper from \"../Teacher/AssigenedTest/AssignedTestsWrapper\";\r\nimport TestStatus from \"../Teacher/TestStatus/TestStatus\";\r\nimport { message } from \"antd\";\r\nimport { Offline, Online } from \"react-detect-offline\";\r\n\r\nfunction App(props) {\r\n  const [count, setCount] = useState(1);\r\n\r\n  const handleOffline = () => {\r\n    setCount(count + 1);\r\n    if (count % 2 == 0) {\r\n      message.success(\"Connected to internet\");\r\n    } else {\r\n      message.error(\"Please connect to internet\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"contextmenu\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n    window.addEventListener(\"keydown\", (e) => {\r\n      console.log(e);\r\n      if (e.key == \"F12\") {\r\n        e.preventDefault();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const { selectedTestName, selectedAssignedTestName } = props;\r\n  const role = props.userInfo.role;\r\n  const { confirm } = Modal;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={count % 2 ? \"\" : \" pointer__select__none\"}>\r\n      <Offline onChange={(e) => handleOffline(e)}></Offline>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact={true} path={\"/\"} component={Home} />\r\n          <Route exact={true} path={\"/signin\"} component={Login} />\r\n          <Route exact={true} path=\"/signup\" component={Signup} />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/dashboard\"\r\n            component={\r\n              Roles.teacher === role ? TeacherDashboard : StudentDashboard\r\n            }\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/attempt-test\"\r\n            component={AttemptTest}\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/create-test\"\r\n            component={Roles.teacher === role ? CreateTest : AttemptTest}\r\n          />\r\n          <ProtectedRoute exact={true} path=\"/result\" component={Result} />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path={`/result/${selectedTestName}`}\r\n            component={IndividualResult}\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/test-instructions\"\r\n            component={TestInstruction}\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/start-test\"\r\n            component={TestPreviewWrapper}\r\n          />\r\n          <ProtectedRoute exact={true} path=\"/profile\" component={Profile} />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/assigned-test\"\r\n            component={\r\n              Roles.teacher === role ? AssignedTestsWrapper : StudentDashboard\r\n            }\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path={`/test-status/${selectedAssignedTestName}`}\r\n            component={TestStatus}\r\n          />\r\n          <ProtectedRoute component={Login} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTestName: state.selectedTest.selectedTestResultData.testName\r\n      ?.replace(/\\s+/g, \"-\")\r\n      .toLowerCase(),\r\n    userInfo: state.auth.user,\r\n    selectedAssignedTestName: state.selectedTest.selectedAssignedTestData.testName\r\n      ?.replace(/\\s+/g, \"-\")\r\n      .toLowerCase(),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import {\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  LOGOUT_FAILURE,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  VERIFY_REQUEST,\r\n  VERIFY_SUCCESS,\r\n  SEND_PASS_RESET_SUCCESS,\r\n  SEND_PASS_RESET,\r\n  SEND_PASS_RESET_ERROR,\r\n  USER_ACCOUNT_CREATED,\r\n} from \"../actions/authActions\";\r\n\r\nconst initialState = {\r\n  isLoggingIn: false,\r\n  isSigningUp: false,\r\n  isLoading: false,\r\n  isLoggingOut: false,\r\n  isVerifying: false,\r\n  loginError: false,\r\n  signupError: false,\r\n  logoutError: false,\r\n  accountCreated: false,\r\n  isAuthenticated: localStorage.getItem(\"token\") ? true : false,\r\n  sendPassResetSuccess: false,\r\n  sendPassResetError: false,\r\n  profileID: localStorage.getItem(\"profileID\"),\r\n  user: JSON.parse(localStorage.getItem(\"userProfile\"))\r\n    ? JSON.parse(localStorage.getItem(\"userProfile\"))\r\n    : {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      console.log(\"login request fired\");\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n        isLoading: true,\r\n        loginError: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      console.log(\"login success fired\", action.obj);\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isLoading: false,\r\n        isAuthenticated: true,\r\n        user: action.user,\r\n        profileID: action.profileID,\r\n      };\r\n    case LOGIN_FAILURE:\r\n      console.log(\"login failure fired\");\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        loginError: true,\r\n      };\r\n\r\n    case SIGN_UP_REQUEST:\r\n      return {\r\n        ...state,\r\n        isSigningUp: true,\r\n        isLoading: true,\r\n        signupError: false,\r\n      };\r\n\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isSigningUp: false,\r\n        isLoading: false,\r\n        signupError: false,\r\n        accountCreated: true\r\n      };\r\n\r\n    case SIGN_UP_FAILURE:\r\n      return {\r\n        ...state,\r\n        isSigningUp: false,\r\n        isLoading: false,\r\n        signupError: action.errMess,\r\n      };\r\n\r\n    case USER_ACCOUNT_CREATED:\r\n      return {\r\n        ...state,\r\n        accountCreated: false,\r\n      };\r\n\r\n    case SEND_PASS_RESET:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        sendPassResetSuccess: false,\r\n        sendPassResetError: false,\r\n      };\r\n\r\n    case SEND_PASS_RESET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        sendPassResetSuccess: true,\r\n        sendPassResetError: false,\r\n      };\r\n\r\n    case SEND_PASS_RESET_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        sendPassResetSuccess: false,\r\n        sendPassResetError: action.errMess,\r\n      };\r\n\r\n    case LOGOUT_REQUEST:\r\n      return { ...state, isLoggingOut: true, logoutError: false };\r\n\r\n    case LOGOUT_SUCCESS:\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"userProfile\");\r\n      localStorage.removeItem(\"profileID\");\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isAuthenticated: false,\r\n        user: {},\r\n      };\r\n\r\n    case LOGOUT_FAILURE:\r\n      return { ...state, isLoggingOut: false, logoutError: true };\r\n\r\n    case VERIFY_REQUEST:\r\n      return { ...state, isVerifying: true, verifyingError: false };\r\n\r\n    case VERIFY_SUCCESS:\r\n      return { ...state, isVerifying: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_TEST_REQUEST,\r\n  FETCH_TEST_SUCCESS,\r\n  FETCH_ATTEMPT_TEST_SUCCESS,\r\n  FETCH_TEST_FAILURE,\r\n  SUBMIT_TEST_FAILURE,\r\n  SUBMIT_TEST_SUCCESS,\r\n  FETCH_TEACHER_TEST_REQUEST,\r\n  FETCH_TEACHER_TEST_SUCCESS,\r\n  FETCH_TEACHER_TEST_FAILURE,\r\n} from \"../actions/testActions\";\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  isLoadingTest: false,\r\n  isLoadingAttemptedTest: false,\r\n  fetchingError: false,\r\n  isFetched: false,\r\n  testSubmitted: false,\r\n  testSubmitError: false,\r\n  test: [],\r\n  attemptedTest: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        isLoadingAttemptedTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case FETCH_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n        test: action.tests,\r\n      };\r\n    case FETCH_TEACHER_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        isLoadingAttemptedTest: true,\r\n        fetchingError: false,\r\n      };\r\n\r\n    case FETCH_TEACHER_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n        test: action.tests,\r\n      };\r\n\r\n    case FETCH_TEACHER_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isFetched: false,\r\n        isLoadingTest: false,\r\n        isLoadingAttemptedTest: false,\r\n        fetchError: true,\r\n      };\r\n\r\n    case FETCH_ATTEMPT_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isLoadingAttemptedTest: false,\r\n        attemptedTest: action.tests[0].attemptedTest,\r\n      };\r\n\r\n    case FETCH_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isFetched: false,\r\n        isLoadingTest: false,\r\n        isLoadingAttemptedTest: false,\r\n        fetchError: true,\r\n      };\r\n    case SUBMIT_TEST_SUCCESS:\r\n      localStorage.removeItem(action.testID);\r\n      return {\r\n        ...state,\r\n        testSubmitted: true,\r\n        testSubmitError: false,\r\n      };\r\n    case SUBMIT_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        testSubmitted: false,\r\n        testSubmitError: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  TEST_SELECTED,\r\n  SELECTED_TEST_RESULT,\r\n  SELECTED_ASSIGNED_TEST,\r\n} from \"../actions/selectActions\";\r\n\r\nconst initialState = {\r\n  selectedTestData: {},\r\n  selectedTestResultData: {},\r\n  selectedAssignedTestData: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TEST_SELECTED:\r\n      return {\r\n        ...state,\r\n        selectedTestData: action.testData,\r\n      };\r\n\r\n    case SELECTED_TEST_RESULT:\r\n      return {\r\n        ...state,\r\n        selectedTestResultData: action.testData,\r\n      };\r\n    case SELECTED_ASSIGNED_TEST:\r\n      return {\r\n        ...state,\r\n        selectedAssignedTestData: action.testData,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  UPDATE_ATTEMPT_TEST_REQUEST,\r\n  UPDATE_ATTEMPT_TEST_SUCCESS,\r\n  UPDATE_ATTEMPT_TEST_FAILURE,\r\n} from \"../actions/attemptTestActions\";\r\n\r\nconst initialState = {\r\n  attemptedTime: 0,\r\n  isFetching: false,\r\n  isFetched: false,\r\n  isFetchingError: false,\r\n  initializeTimer: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_ATTEMPT_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n\r\n    case UPDATE_ATTEMPT_TEST_SUCCESS:\r\n      const checker = state.initializeTimer;\r\n      return {\r\n        ...state,\r\n        isFetched: true,\r\n        isFetching: false,\r\n        attemptedTime: action.time,\r\n        initializeTimer: true,\r\n      };\r\n    case UPDATE_ATTEMPT_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isFetched: false,\r\n        isFetchingError: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_CLASSES_REQUEST,\r\n  FETCH_CLASSES_SUCCESS,\r\n  FETCH_CLASSES_FAILURE,\r\n} from \"../actions/classesActions\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isFetched: false,\r\n  isFetchError: false,\r\n  classes: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_CLASSES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case FETCH_CLASSES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isFetched: true,\r\n        classes: action.data,\r\n      };\r\n\r\n    case FETCH_CLASSES_FAILURE:\r\n      return {\r\n        ...state,\r\n        isfetched: false,\r\n        isLoading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SUBMIT_TEST_REQUEST,\r\n  SUBMIT_TEST_SUCCESS,\r\n  SUBMIT_TEST_FAILURE,\r\n  ASSIGNED_TEST_REQUEST,\r\n  ASSIGNED_TEST_FAILURE,\r\n  ASSIGNED_TEST_SUCCESS,\r\n  SET_TEST_CREATED_FALSE,\r\n} from \"../actions/TeacherActions\";\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  isLoadingTest: false,\r\n  fetchingError: false,\r\n  isFetched: false,\r\n  testCreated: false,\r\n  testSubmitted: false,\r\n  testSubmitError: false,\r\n  assignedTests: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SUBMIT_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case SUBMIT_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        testCreated: true,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n      };\r\n    case SUBMIT_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case ASSIGNED_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case ASSIGNED_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        testCreated: true,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n        assignedTests: action.tests,\r\n      };\r\n    case ASSIGNED_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case SET_TEST_CREATED_FALSE:\r\n      return {\r\n        ...state,\r\n        testCreated: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport testReducer from \"./testReducer\";\r\nimport selectTestReducer from \"./selectReducer\";\r\nimport attemptedTestReducer from \"./attemptedTestReducer\";\r\nimport classesReducer from \"./classesReducer\";\r\nimport TeacherReducer from \"./teacherReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  tests: testReducer,\r\n  selectedTest: selectTestReducer,\r\n  userAttemptedTime: attemptedTestReducer,\r\n  classesData: classesReducer,\r\n  teacher: TeacherReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"../reducers/index\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst allEnhancers = compose(applyMiddleware(thunk));\r\n\r\nconst store = createStore(reducer, allEnhancers);\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport \"./index.css\";\r\nimport App from \"./App/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}